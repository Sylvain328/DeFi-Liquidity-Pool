{
  "contractName": "DeFiProtocol",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardPerSecond",
          "type": "uint256"
        }
      ],
      "name": "PoolCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardClaimedAmount",
          "type": "uint256"
        }
      ],
      "name": "RewardOffered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "stakedAmount",
          "type": "uint256"
        }
      ],
      "name": "StakedAmountUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "flpTokenUsdValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "hwtTokenUsdValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_oracleAggregatorAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_rewardPerSecond",
          "type": "uint256"
        }
      ],
      "name": "createLiquidityPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "unstake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "getStakedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stakedAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "getTokenPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "getRewardAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "claimReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "getTotalValueLocked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "getRewardPerSecond",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardPerSecond\",\"type\":\"uint256\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardClaimedAmount\",\"type\":\"uint256\"}],\"name\":\"RewardOffered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"}],\"name\":\"StakedAmountUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oracleAggregatorAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardPerSecond\",\"type\":\"uint256\"}],\"name\":\"createLiquidityPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flpTokenUsdValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"getRewardAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"getRewardPerSecond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"getStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"getTokenPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"getTotalValueLocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hwtTokenUsdValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"The Hello World Team\",\"events\":{\"PoolCreated(address,uint256)\":{\"params\":{\"rewardPerSecond\":\"The reward rate per second\",\"tokenAddress\":\"The address of the pool token\"}},\"RewardOffered(address,address,uint256)\":{\"params\":{\"rewardClaimedAmount\":\"The amount that has been offered\",\"sender\":\"The address that claim the reward\",\"tokenAddress\":\"The liquidity pool token\"}},\"StakedAmountUpdated(address,address,uint256)\":{\"params\":{\"sender\":\"The address that staked in the pool\",\"stakedAmount\":\"The amount that has been staked\",\"tokenAddress\":\"The liquidity pool token\"}}},\"kind\":\"dev\",\"methods\":{\"claimReward(address)\":{\"params\":{\"_tokenAddress\":\"The token address to claim reward from the pool\"}},\"createLiquidityPool(address,address,uint256)\":{\"params\":{\"_oracleAggregatorAddress\":\"The oracle aggregator address that will permit to get the token price in USD\",\"_rewardPerSecond\":\"The win rate of the liquidity pool\",\"_tokenAddress\":\"the erc20 token address\"}},\"getRewardAmount(address)\":{\"params\":{\"_tokenAddress\":\"The token address to get liquidity pool reward of this token\"},\"returns\":{\"reward\":\"The reward computed by the contract\"}},\"getRewardPerSecond(address)\":{\"params\":{\"_tokenAddress\":\"The token address for the liquidity pool\"},\"returns\":{\"_0\":\"uint The Reward per second for the pool\"}},\"getStakedAmount(address)\":{\"params\":{\"_tokenAddress\":\"The address of the token to check for staked amount\"},\"returns\":{\"stakedAmount\":\"token staked by msg.sender\"}},\"getTokenPrice(address)\":{\"details\":\"USD Price is retrieved thanks to Chainlink\",\"params\":{\"_tokenAddress\":\"The authorized token address to get price\"},\"returns\":{\"_0\":\"int price of the token\"}},\"getTotalValueLocked(address)\":{\"params\":{\"_tokenAddress\":\"The token address for the liquidity pool\"},\"returns\":{\"_0\":\"uint The TVL of the pool\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"stake(address,uint256)\":{\"details\":\"Refresh the stored amount in the address mapping storedValuePerAddress and refresh the TVL\",\"params\":{\"_amount\":\"Total amount to store in the liquidity pool\",\"_tokenAddress\":\"The token address to stake in liquidity pool\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unstake(address,uint256)\":{\"details\":\"Refresh the stored amount in the address mapping stakerDataPerAddress and refresh the TVL\",\"params\":{\"_amount\":\"Total amount to unstake from the liquidity pool\",\"_tokenAddress\":\"The token address to unstake from liquidity pool\"}}},\"stateVariables\":{\"flpTokenUsdValue\":{\"details\":\"As our Flp token don't have any value on the market, we use a basic multiplier\"},\"hwtTokenUsdValue\":{\"details\":\"As our Hwt token don't have any value on the market, we use a basic multiplier\"}},\"title\":\"Hello World DeFi Protocol\",\"version\":1},\"userdoc\":{\"events\":{\"PoolCreated(address,uint256)\":{\"notice\":\"Event informing a new liquidity pool is created\"},\"RewardOffered(address,address,uint256)\":{\"notice\":\"Event informing a reward was send\"},\"StakedAmountUpdated(address,address,uint256)\":{\"notice\":\"Event informing the staked amount was updated\"}},\"kind\":\"user\",\"methods\":{\"claimReward(address)\":{\"notice\":\"Send then reward to the msg.sender\"},\"createLiquidityPool(address,address,uint256)\":{\"notice\":\"Create a new pool with an erc20 token\"},\"flpTokenUsdValue()\":{\"notice\":\"Token multiplier to give a price on the Flp token\"},\"getRewardAmount(address)\":{\"notice\":\"Get the reward for msg.sender\"},\"getRewardPerSecond(address)\":{\"notice\":\"Get the reward rate per second\"},\"getStakedAmount(address)\":{\"notice\":\"Get the msg.sender token staked amount\"},\"getTokenPrice(address)\":{\"notice\":\"Get the token price in USD\"},\"getTotalValueLocked(address)\":{\"notice\":\"Get the total value Locked of a liquidity pool\"},\"hwtTokenUsdValue()\":{\"notice\":\"Token multiplier to give a price on the Hwt token\"},\"stake(address,uint256)\":{\"notice\":\"Stake token in the Liquidity pool\"},\"unstake(address,uint256)\":{\"notice\":\"Unstake the tokens in the Liquidity pool, user can retrieve their tokens\"}},\"notice\":\"This contract offer the possibility to stake ERC20 in Liquidity Pools to receive Hello World Token rewards\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/DeFiProtocol.sol\":\"DeFiProtocol\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/DeFiProtocol.sol\":{\"keccak256\":\"0x3a64d1137e3f873b590acb6425a8102a1ddbd987342a94a45af8edf0c4e40df4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c21769738107eefffcf90bc74322cdfcd3843f4740d9b7562eeb5915b93dcc5c\",\"dweb:/ipfs/QmUx6jbPNm53XPRZWCXRmionXf6WcoczKkaUgxHdxstXii\"]}},\"version\":1}",
  "bytecode": "0x6080604052670ced5a509046c00060025567447256d190b4400060035534801561002857600080fd5b5061004561003a61004a60201b60201c565b61005260201b60201c565b610116565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611fb8806101256000396000f3fe6080604052600436106100dd5760003560e01c80638fd82e1b1161007f578063d02641a011610059578063d02641a014610292578063d279c191146102cf578063d7357d34146102f8578063f2fde38b14610335576100dd565b80638fd82e1b1461022f578063adc9772e1461025a578063c2a672e014610276576100dd565b8063715018a6116100bb578063715018a61461019957806378278e14146101b05780637cd9e6aa146101d95780638da5cb5b14610204576100dd565b806344a040f5146100e25780634da6a5561461011f57806369dae6c61461015c575b600080fd5b3480156100ee57600080fd5b5061010960048036038101906101049190611731565b61035e565b6040516101169190611777565b60405180910390f35b34801561012b57600080fd5b5061014660048036038101906101419190611731565b6104eb565b6040516101539190611777565b60405180910390f35b34801561016857600080fd5b50610183600480360381019061017e9190611731565b610608565b6040516101909190611777565b60405180910390f35b3480156101a557600080fd5b506101ae6106e5565b005b3480156101bc57600080fd5b506101d760048036038101906101d291906117be565b61076d565b005b3480156101e557600080fd5b506101ee6109d9565b6040516101fb9190611777565b60405180910390f35b34801561021057600080fd5b506102196109df565b6040516102269190611820565b60405180910390f35b34801561023b57600080fd5b50610244610a08565b6040516102519190611777565b60405180910390f35b610274600480360381019061026f919061183b565b610a0e565b005b610290600480360381019061028b919061183b565b610cb8565b005b34801561029e57600080fd5b506102b960048036038101906102b49190611731565b610f99565b6040516102c69190611894565b60405180910390f35b3480156102db57600080fd5b506102f660048036038101906102f19190611731565b61111a565b005b34801561030457600080fd5b5061031f600480360381019061031a9190611731565b6113bc565b60405161032c9190611777565b60405180910390f35b34801561034157600080fd5b5061035c60048036038101906103579190611731565b611499565b005b600081600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166103f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e790611932565b60405180910390fd5b6104e3600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820154815260200160018201548152602001600282015481525050600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154611590565b915050919050565b600081600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1661057d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057490611932565b60405180910390fd5b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154915050919050565b600081600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1661069a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069190611932565b60405180910390fd5b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154915050919050565b6106ed611602565b73ffffffffffffffffffffffffffffffffffffffff1661070b6109df565b73ffffffffffffffffffffffffffffffffffffffff1614610761576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107589061199e565b60405180910390fd5b61076b600061160a565b565b610775611602565b73ffffffffffffffffffffffffffffffffffffffff166107936109df565b73ffffffffffffffffffffffffffffffffffffffff16146107e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e09061199e565b60405180910390fd5b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1615610879576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087090611a0a565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff0219169083151502179055507f641e49906554552c8c33d7e09e02d1270590f405bc1da0c7b99a9c2808abdd0583826040516109cc929190611a2a565b60405180910390a1505050565b60025481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b81600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16610a9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9590611932565b60405180910390fd5b8160008111610ae2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad990611ac5565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401610b1f93929190611ae5565b6020604051808303816000875af1158015610b3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b629190611b54565b506000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600001541115610c3857610c2f8160405180606001604052908160008201548152602001600182015481526020016002820154815250508360010154611590565b81600201819055505b848160000154610c489190611bb0565b8160000181905550428160010181905550848260030154610c699190611bb0565b82600301819055507f77ebbd26b0a6a22912eb21e90e3f366a25f7781d0d84076fb1bec335d226445a33878360000154604051610ca893929190611ae5565b60405180910390a1505050505050565b81600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16610d48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3f90611932565b60405180910390fd5b8160008111610d8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8390611ac5565b60405180910390fd5b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000154851115610e5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5290611c78565b60405180910390fd5b610e928160405180606001604052908160008201548152602001600182015481526020016002820154815250508360010154611590565b8160020181905550848160000154610eaa9190611c98565b8160000181905550428160010181905550848260030154610ecb9190611c98565b82600301819055508573ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33876040518363ffffffff1660e01b8152600401610f0e929190611a2a565b6020604051808303816000875af1158015610f2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f519190611b54565b507f77ebbd26b0a6a22912eb21e90e3f366a25f7781d0d84076fb1bec335d226445a33878360000154604051610f8993929190611ae5565b60405180910390a1505050505050565b600081600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1661102b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102290611932565b60405180910390fd5b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600081905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156110e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111089190611d4f565b50505091505080945050505050919050565b80600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166111aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111a190611932565b60405180910390fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060006112a4826040518060600160405290816000820154815260200160018201548152602001600282015481525050600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154611590565b9050600081116112e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e090611e16565b60405180910390fd5b428260010181905550600082600201819055508373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401611337929190611a2a565b6020604051808303816000875af1158015611356573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137a9190611b54565b507f35f857183a2efa264d1fc146dc0da7d7a01231dad386041857fb52b3744814623385836040516113ae93929190611ae5565b60405180910390a150505050565b600081600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1661144e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161144590611932565b60405180910390fd5b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154915050919050565b6114a1611602565b73ffffffffffffffffffffffffffffffffffffffff166114bf6109df565b73ffffffffffffffffffffffffffffffffffffffff1614611515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150c9061199e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611584576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161157b90611ea8565b60405180910390fd5b61158d8161160a565b50565b6000808360000151838560200151426115a99190611c98565b6115b39190611ec8565b6115bd9190611ec8565b905060008111156115f357670de0b6b3a7640000816115dc9190611f51565b84604001516115eb9190611bb0565b9150506115fc565b83604001519150505b92915050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116fe826116d3565b9050919050565b61170e816116f3565b811461171957600080fd5b50565b60008135905061172b81611705565b92915050565b600060208284031215611747576117466116ce565b5b60006117558482850161171c565b91505092915050565b6000819050919050565b6117718161175e565b82525050565b600060208201905061178c6000830184611768565b92915050565b61179b8161175e565b81146117a657600080fd5b50565b6000813590506117b881611792565b92915050565b6000806000606084860312156117d7576117d66116ce565b5b60006117e58682870161171c565b93505060206117f68682870161171c565b9250506040611807868287016117a9565b9150509250925092565b61181a816116f3565b82525050565b60006020820190506118356000830184611811565b92915050565b60008060408385031215611852576118516116ce565b5b60006118608582860161171c565b9250506020611871858286016117a9565b9150509250929050565b6000819050919050565b61188e8161187b565b82525050565b60006020820190506118a96000830184611885565b92915050565b600082825260208201905092915050565b7f4f6e6c7920417574686f72697a656420746f6b656e206164647265737320636160008201527f6e206265207573656420666f72207468697320616374696f6e00000000000000602082015250565b600061191c6039836118af565b9150611927826118c0565b604082019050919050565b6000602082019050818103600083015261194b8161190f565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006119886020836118af565b915061199382611952565b602082019050919050565b600060208201905081810360008301526119b78161197b565b9050919050565b7f5468697320706f6f6c20697320616c7265616479206372656174656400000000600082015250565b60006119f4601c836118af565b91506119ff826119be565b602082019050919050565b60006020820190508181036000830152611a23816119e7565b9050919050565b6000604082019050611a3f6000830185611811565b611a4c6020830184611768565b9392505050565b7f4f6e6c7920616d6f756e742061626f7665207a65726f2061726520617574686f60008201527f72697a6564000000000000000000000000000000000000000000000000000000602082015250565b6000611aaf6025836118af565b9150611aba82611a53565b604082019050919050565b60006020820190508181036000830152611ade81611aa2565b9050919050565b6000606082019050611afa6000830186611811565b611b076020830185611811565b611b146040830184611768565b949350505050565b60008115159050919050565b611b3181611b1c565b8114611b3c57600080fd5b50565b600081519050611b4e81611b28565b92915050565b600060208284031215611b6a57611b696116ce565b5b6000611b7884828501611b3f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611bbb8261175e565b9150611bc68361175e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611bfb57611bfa611b81565b5b828201905092915050565b7f596f75206469646e27742073746f726564207468697320616d6f756e7420696e60008201527f2074686520706f6f6c0000000000000000000000000000000000000000000000602082015250565b6000611c626029836118af565b9150611c6d82611c06565b604082019050919050565b60006020820190508181036000830152611c9181611c55565b9050919050565b6000611ca38261175e565b9150611cae8361175e565b925082821015611cc157611cc0611b81565b5b828203905092915050565b600069ffffffffffffffffffff82169050919050565b611ceb81611ccc565b8114611cf657600080fd5b50565b600081519050611d0881611ce2565b92915050565b611d178161187b565b8114611d2257600080fd5b50565b600081519050611d3481611d0e565b92915050565b600081519050611d4981611792565b92915050565b600080600080600060a08688031215611d6b57611d6a6116ce565b5b6000611d7988828901611cf9565b9550506020611d8a88828901611d25565b9450506040611d9b88828901611d3a565b9350506060611dac88828901611d3a565b9250506080611dbd88828901611cf9565b9150509295509295909350565b7f4e6f2072657761726420746f20636c61696d0000000000000000000000000000600082015250565b6000611e006012836118af565b9150611e0b82611dca565b602082019050919050565b60006020820190508181036000830152611e2f81611df3565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611e926026836118af565b9150611e9d82611e36565b604082019050919050565b60006020820190508181036000830152611ec181611e85565b9050919050565b6000611ed38261175e565b9150611ede8361175e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611f1757611f16611b81565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611f5c8261175e565b9150611f678361175e565b925082611f7757611f76611f22565b5b82820490509291505056fea264697066735822122096fa9f1f808c1311b8dc6ea77ac07298aede0de08f33a1ad2607c6422cf181cc64736f6c634300080d0033",
  "deployedBytecode": "0x6080604052600436106100dd5760003560e01c80638fd82e1b1161007f578063d02641a011610059578063d02641a014610292578063d279c191146102cf578063d7357d34146102f8578063f2fde38b14610335576100dd565b80638fd82e1b1461022f578063adc9772e1461025a578063c2a672e014610276576100dd565b8063715018a6116100bb578063715018a61461019957806378278e14146101b05780637cd9e6aa146101d95780638da5cb5b14610204576100dd565b806344a040f5146100e25780634da6a5561461011f57806369dae6c61461015c575b600080fd5b3480156100ee57600080fd5b5061010960048036038101906101049190611731565b61035e565b6040516101169190611777565b60405180910390f35b34801561012b57600080fd5b5061014660048036038101906101419190611731565b6104eb565b6040516101539190611777565b60405180910390f35b34801561016857600080fd5b50610183600480360381019061017e9190611731565b610608565b6040516101909190611777565b60405180910390f35b3480156101a557600080fd5b506101ae6106e5565b005b3480156101bc57600080fd5b506101d760048036038101906101d291906117be565b61076d565b005b3480156101e557600080fd5b506101ee6109d9565b6040516101fb9190611777565b60405180910390f35b34801561021057600080fd5b506102196109df565b6040516102269190611820565b60405180910390f35b34801561023b57600080fd5b50610244610a08565b6040516102519190611777565b60405180910390f35b610274600480360381019061026f919061183b565b610a0e565b005b610290600480360381019061028b919061183b565b610cb8565b005b34801561029e57600080fd5b506102b960048036038101906102b49190611731565b610f99565b6040516102c69190611894565b60405180910390f35b3480156102db57600080fd5b506102f660048036038101906102f19190611731565b61111a565b005b34801561030457600080fd5b5061031f600480360381019061031a9190611731565b6113bc565b60405161032c9190611777565b60405180910390f35b34801561034157600080fd5b5061035c60048036038101906103579190611731565b611499565b005b600081600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166103f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e790611932565b60405180910390fd5b6104e3600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820154815260200160018201548152602001600282015481525050600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154611590565b915050919050565b600081600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1661057d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057490611932565b60405180910390fd5b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154915050919050565b600081600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1661069a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069190611932565b60405180910390fd5b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154915050919050565b6106ed611602565b73ffffffffffffffffffffffffffffffffffffffff1661070b6109df565b73ffffffffffffffffffffffffffffffffffffffff1614610761576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107589061199e565b60405180910390fd5b61076b600061160a565b565b610775611602565b73ffffffffffffffffffffffffffffffffffffffff166107936109df565b73ffffffffffffffffffffffffffffffffffffffff16146107e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e09061199e565b60405180910390fd5b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1615610879576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087090611a0a565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff0219169083151502179055507f641e49906554552c8c33d7e09e02d1270590f405bc1da0c7b99a9c2808abdd0583826040516109cc929190611a2a565b60405180910390a1505050565b60025481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b81600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16610a9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9590611932565b60405180910390fd5b8160008111610ae2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad990611ac5565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401610b1f93929190611ae5565b6020604051808303816000875af1158015610b3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b629190611b54565b506000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600001541115610c3857610c2f8160405180606001604052908160008201548152602001600182015481526020016002820154815250508360010154611590565b81600201819055505b848160000154610c489190611bb0565b8160000181905550428160010181905550848260030154610c699190611bb0565b82600301819055507f77ebbd26b0a6a22912eb21e90e3f366a25f7781d0d84076fb1bec335d226445a33878360000154604051610ca893929190611ae5565b60405180910390a1505050505050565b81600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16610d48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3f90611932565b60405180910390fd5b8160008111610d8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8390611ac5565b60405180910390fd5b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000154851115610e5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5290611c78565b60405180910390fd5b610e928160405180606001604052908160008201548152602001600182015481526020016002820154815250508360010154611590565b8160020181905550848160000154610eaa9190611c98565b8160000181905550428160010181905550848260030154610ecb9190611c98565b82600301819055508573ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33876040518363ffffffff1660e01b8152600401610f0e929190611a2a565b6020604051808303816000875af1158015610f2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f519190611b54565b507f77ebbd26b0a6a22912eb21e90e3f366a25f7781d0d84076fb1bec335d226445a33878360000154604051610f8993929190611ae5565b60405180910390a1505050505050565b600081600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1661102b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102290611932565b60405180910390fd5b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600081905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156110e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111089190611d4f565b50505091505080945050505050919050565b80600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166111aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111a190611932565b60405180910390fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060006112a4826040518060600160405290816000820154815260200160018201548152602001600282015481525050600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154611590565b9050600081116112e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e090611e16565b60405180910390fd5b428260010181905550600082600201819055508373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401611337929190611a2a565b6020604051808303816000875af1158015611356573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137a9190611b54565b507f35f857183a2efa264d1fc146dc0da7d7a01231dad386041857fb52b3744814623385836040516113ae93929190611ae5565b60405180910390a150505050565b600081600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1661144e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161144590611932565b60405180910390fd5b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154915050919050565b6114a1611602565b73ffffffffffffffffffffffffffffffffffffffff166114bf6109df565b73ffffffffffffffffffffffffffffffffffffffff1614611515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150c9061199e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611584576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161157b90611ea8565b60405180910390fd5b61158d8161160a565b50565b6000808360000151838560200151426115a99190611c98565b6115b39190611ec8565b6115bd9190611ec8565b905060008111156115f357670de0b6b3a7640000816115dc9190611f51565b84604001516115eb9190611bb0565b9150506115fc565b83604001519150505b92915050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116fe826116d3565b9050919050565b61170e816116f3565b811461171957600080fd5b50565b60008135905061172b81611705565b92915050565b600060208284031215611747576117466116ce565b5b60006117558482850161171c565b91505092915050565b6000819050919050565b6117718161175e565b82525050565b600060208201905061178c6000830184611768565b92915050565b61179b8161175e565b81146117a657600080fd5b50565b6000813590506117b881611792565b92915050565b6000806000606084860312156117d7576117d66116ce565b5b60006117e58682870161171c565b93505060206117f68682870161171c565b9250506040611807868287016117a9565b9150509250925092565b61181a816116f3565b82525050565b60006020820190506118356000830184611811565b92915050565b60008060408385031215611852576118516116ce565b5b60006118608582860161171c565b9250506020611871858286016117a9565b9150509250929050565b6000819050919050565b61188e8161187b565b82525050565b60006020820190506118a96000830184611885565b92915050565b600082825260208201905092915050565b7f4f6e6c7920417574686f72697a656420746f6b656e206164647265737320636160008201527f6e206265207573656420666f72207468697320616374696f6e00000000000000602082015250565b600061191c6039836118af565b9150611927826118c0565b604082019050919050565b6000602082019050818103600083015261194b8161190f565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006119886020836118af565b915061199382611952565b602082019050919050565b600060208201905081810360008301526119b78161197b565b9050919050565b7f5468697320706f6f6c20697320616c7265616479206372656174656400000000600082015250565b60006119f4601c836118af565b91506119ff826119be565b602082019050919050565b60006020820190508181036000830152611a23816119e7565b9050919050565b6000604082019050611a3f6000830185611811565b611a4c6020830184611768565b9392505050565b7f4f6e6c7920616d6f756e742061626f7665207a65726f2061726520617574686f60008201527f72697a6564000000000000000000000000000000000000000000000000000000602082015250565b6000611aaf6025836118af565b9150611aba82611a53565b604082019050919050565b60006020820190508181036000830152611ade81611aa2565b9050919050565b6000606082019050611afa6000830186611811565b611b076020830185611811565b611b146040830184611768565b949350505050565b60008115159050919050565b611b3181611b1c565b8114611b3c57600080fd5b50565b600081519050611b4e81611b28565b92915050565b600060208284031215611b6a57611b696116ce565b5b6000611b7884828501611b3f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611bbb8261175e565b9150611bc68361175e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611bfb57611bfa611b81565b5b828201905092915050565b7f596f75206469646e27742073746f726564207468697320616d6f756e7420696e60008201527f2074686520706f6f6c0000000000000000000000000000000000000000000000602082015250565b6000611c626029836118af565b9150611c6d82611c06565b604082019050919050565b60006020820190508181036000830152611c9181611c55565b9050919050565b6000611ca38261175e565b9150611cae8361175e565b925082821015611cc157611cc0611b81565b5b828203905092915050565b600069ffffffffffffffffffff82169050919050565b611ceb81611ccc565b8114611cf657600080fd5b50565b600081519050611d0881611ce2565b92915050565b611d178161187b565b8114611d2257600080fd5b50565b600081519050611d3481611d0e565b92915050565b600081519050611d4981611792565b92915050565b600080600080600060a08688031215611d6b57611d6a6116ce565b5b6000611d7988828901611cf9565b9550506020611d8a88828901611d25565b9450506040611d9b88828901611d3a565b9350506060611dac88828901611d3a565b9250506080611dbd88828901611cf9565b9150509295509295909350565b7f4e6f2072657761726420746f20636c61696d0000000000000000000000000000600082015250565b6000611e006012836118af565b9150611e0b82611dca565b602082019050919050565b60006020820190508181036000830152611e2f81611df3565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611e926026836118af565b9150611e9d82611e36565b604082019050919050565b60006020820190508181036000830152611ec181611e85565b9050919050565b6000611ed38261175e565b9150611ede8361175e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611f1757611f16611b81565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611f5c8261175e565b9150611f678361175e565b925082611f7757611f76611f22565b5b82820490509291505056fea264697066735822122096fa9f1f808c1311b8dc6ea77ac07298aede0de08f33a1ad2607c6422cf181cc64736f6c634300080d0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:15716:8",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:8",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:8",
                "type": ""
              }
            ],
            "src": "7:75:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:8",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:8"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:8",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:8"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:8",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:8",
                "type": ""
              }
            ],
            "src": "334:126:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:8",
                "type": ""
              }
            ],
            "src": "466:96:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:8"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:8"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:8",
                "type": ""
              }
            ],
            "src": "568:122:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "748:87:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "758:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "780:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "767:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "767:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "758:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "823:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "796:26:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "796:33:8"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "726:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "734:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "742:5:8",
                "type": ""
              }
            ],
            "src": "696:139:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "907:263:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "953:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "955:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "955:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "955:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "928:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "937:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "924:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "924:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "949:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "920:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "920:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "917:119:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1046:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1061:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1075:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1065:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1090:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1125:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1136:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1121:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1121:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1145:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1100:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1100:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1090:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "877:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "888:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "900:6:8",
                "type": ""
              }
            ],
            "src": "841:329:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1221:32:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1231:16:8",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1242:5:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1231:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1203:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1213:7:8",
                "type": ""
              }
            ],
            "src": "1176:77:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1324:53:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1341:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1364:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1346:17:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1346:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1334:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1334:37:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1334:37:8"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1312:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1319:3:8",
                "type": ""
              }
            ],
            "src": "1259:118:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1481:124:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1491:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1503:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1514:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1499:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1499:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1491:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1571:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1584:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1595:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1580:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1580:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1527:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1527:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1527:71:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1453:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1465:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1476:4:8",
                "type": ""
              }
            ],
            "src": "1383:222:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1654:79:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1711:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1720:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1723:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1713:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1713:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1713:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1677:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1702:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "1684:17:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1684:24:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1674:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1674:35:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1667:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1667:43:8"
                  },
                  "nodeType": "YulIf",
                  "src": "1664:63:8"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1647:5:8",
                "type": ""
              }
            ],
            "src": "1611:122:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1791:87:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1801:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1823:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1810:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1810:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1801:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1866:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1839:26:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1839:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1839:33:8"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1769:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1777:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1785:5:8",
                "type": ""
              }
            ],
            "src": "1739:139:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1984:519:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2030:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2032:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2032:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2032:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2005:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2014:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2001:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2001:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2026:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1997:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1997:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "1994:119:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2123:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2138:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2152:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2142:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2167:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2202:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2213:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2198:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2198:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2222:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2177:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2177:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2167:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2250:118:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2265:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2279:2:8",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2269:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2295:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2330:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2341:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2326:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2326:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2350:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2305:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2305:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2295:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2378:118:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2393:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2407:2:8",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2397:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2423:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2458:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2469:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2454:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2454:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2478:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2433:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2433:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2423:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1938:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1949:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1961:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1969:6:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1977:6:8",
                "type": ""
              }
            ],
            "src": "1884:619:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2574:53:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2591:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2614:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2596:17:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2596:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2584:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2584:37:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2584:37:8"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2562:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2569:3:8",
                "type": ""
              }
            ],
            "src": "2509:118:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2731:124:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2741:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2753:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2764:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2749:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2749:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2741:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2821:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2834:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2845:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2830:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2830:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2777:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2777:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2777:71:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2703:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2715:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2726:4:8",
                "type": ""
              }
            ],
            "src": "2633:222:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2944:391:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2990:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2992:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2992:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2992:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2965:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2974:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2961:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2961:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2986:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2957:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2957:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "2954:119:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3083:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3098:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3112:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3102:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3127:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3162:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3173:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3158:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3158:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3182:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3137:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3137:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3127:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3210:118:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3225:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3239:2:8",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3229:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3255:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3290:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3301:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3286:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3286:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3310:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3265:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3265:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3255:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2906:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2917:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2929:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2937:6:8",
                "type": ""
              }
            ],
            "src": "2861:474:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3385:32:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3395:16:8",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3406:5:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3395:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3367:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3377:7:8",
                "type": ""
              }
            ],
            "src": "3341:76:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3486:52:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3503:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3525:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_int256",
                          "nodeType": "YulIdentifier",
                          "src": "3508:16:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3508:23:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3496:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3496:36:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3496:36:8"
                }
              ]
            },
            "name": "abi_encode_t_int256_to_t_int256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3474:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3481:3:8",
                "type": ""
              }
            ],
            "src": "3423:115:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3640:122:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3650:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3662:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3673:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3658:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3658:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3650:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3728:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3741:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3752:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3737:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3737:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_int256_to_t_int256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3686:41:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3686:69:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3686:69:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3612:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3624:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3635:4:8",
                "type": ""
              }
            ],
            "src": "3544:218:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3864:73:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3881:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3886:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3874:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3874:19:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3874:19:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3902:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3921:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3926:4:8",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3917:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3917:14:8"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "3902:11:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3836:3:8",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3841:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "3852:11:8",
                "type": ""
              }
            ],
            "src": "3768:169:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4049:138:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4071:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4079:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4067:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4067:14:8"
                      },
                      {
                        "hexValue": "4f6e6c7920417574686f72697a656420746f6b656e2061646472657373206361",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4083:34:8",
                        "type": "",
                        "value": "Only Authorized token address ca"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4060:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4060:58:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4060:58:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4139:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4147:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4135:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4135:15:8"
                      },
                      {
                        "hexValue": "6e206265207573656420666f72207468697320616374696f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4152:27:8",
                        "type": "",
                        "value": "n be used for this action"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4128:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4128:52:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4128:52:8"
                }
              ]
            },
            "name": "store_literal_in_memory_a194696f04688286da56f78d8937d221aac74d579f9aa2107bb36cea4db90452",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4041:6:8",
                "type": ""
              }
            ],
            "src": "3943:244:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4339:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4349:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4415:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4420:2:8",
                        "type": "",
                        "value": "57"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4356:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4356:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4349:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4521:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_a194696f04688286da56f78d8937d221aac74d579f9aa2107bb36cea4db90452",
                      "nodeType": "YulIdentifier",
                      "src": "4432:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4432:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4432:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4534:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4545:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4550:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4541:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4541:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4534:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_a194696f04688286da56f78d8937d221aac74d579f9aa2107bb36cea4db90452_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4327:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4335:3:8",
                "type": ""
              }
            ],
            "src": "4193:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4736:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4746:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4758:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4769:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4754:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4754:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4746:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4793:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4804:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4789:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4789:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4812:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4818:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4808:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4808:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4782:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4782:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4782:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4838:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4972:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_a194696f04688286da56f78d8937d221aac74d579f9aa2107bb36cea4db90452_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4846:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4846:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4838:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a194696f04688286da56f78d8937d221aac74d579f9aa2107bb36cea4db90452__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4716:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4731:4:8",
                "type": ""
              }
            ],
            "src": "4565:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5096:76:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5118:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5126:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5114:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5114:14:8"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5130:34:8",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5107:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5107:58:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5107:58:8"
                }
              ]
            },
            "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5088:6:8",
                "type": ""
              }
            ],
            "src": "4990:182:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5324:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5334:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5400:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5405:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5341:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5341:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5334:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5506:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                      "nodeType": "YulIdentifier",
                      "src": "5417:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5417:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5417:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5519:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5530:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5535:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5526:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5526:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5519:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5312:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5320:3:8",
                "type": ""
              }
            ],
            "src": "5178:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5721:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5731:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5743:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5754:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5739:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5739:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5731:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5778:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5789:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5774:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5774:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5797:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5803:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5793:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5793:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5767:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5767:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5767:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5823:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5957:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5831:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5831:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5823:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5701:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5716:4:8",
                "type": ""
              }
            ],
            "src": "5550:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6081:72:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6103:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6111:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6099:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6099:14:8"
                      },
                      {
                        "hexValue": "5468697320706f6f6c20697320616c72656164792063726561746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6115:30:8",
                        "type": "",
                        "value": "This pool is already created"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6092:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6092:54:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6092:54:8"
                }
              ]
            },
            "name": "store_literal_in_memory_7bb1d43e663da0f86542a4dab0fd93ef18fc8b2b622fee6e6d42583eb142b0f2",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6073:6:8",
                "type": ""
              }
            ],
            "src": "5975:178:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6305:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6315:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6381:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6386:2:8",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6322:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6322:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6315:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6487:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_7bb1d43e663da0f86542a4dab0fd93ef18fc8b2b622fee6e6d42583eb142b0f2",
                      "nodeType": "YulIdentifier",
                      "src": "6398:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6398:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6398:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6500:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6511:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6516:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6507:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6507:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6500:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_7bb1d43e663da0f86542a4dab0fd93ef18fc8b2b622fee6e6d42583eb142b0f2_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6293:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6301:3:8",
                "type": ""
              }
            ],
            "src": "6159:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6702:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6712:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6724:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6735:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6720:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6720:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6712:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6759:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6770:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6755:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6755:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6778:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6784:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6774:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6774:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6748:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6748:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6748:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6804:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6938:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_7bb1d43e663da0f86542a4dab0fd93ef18fc8b2b622fee6e6d42583eb142b0f2_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6812:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6812:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6804:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7bb1d43e663da0f86542a4dab0fd93ef18fc8b2b622fee6e6d42583eb142b0f2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6682:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6697:4:8",
                "type": ""
              }
            ],
            "src": "6531:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7082:206:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7092:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7104:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7115:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7100:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7100:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7092:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7172:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7185:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7196:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7181:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7181:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7128:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7128:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7128:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7253:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7266:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7277:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7262:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7262:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7209:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7209:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7209:72:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7046:9:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7058:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7066:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7077:4:8",
                "type": ""
              }
            ],
            "src": "6956:332:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7400:118:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7422:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7430:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7418:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7418:14:8"
                      },
                      {
                        "hexValue": "4f6e6c7920616d6f756e742061626f7665207a65726f2061726520617574686f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7434:34:8",
                        "type": "",
                        "value": "Only amount above zero are autho"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7411:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7411:58:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7411:58:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7490:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7498:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7486:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7486:15:8"
                      },
                      {
                        "hexValue": "72697a6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7503:7:8",
                        "type": "",
                        "value": "rized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7479:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7479:32:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7479:32:8"
                }
              ]
            },
            "name": "store_literal_in_memory_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7392:6:8",
                "type": ""
              }
            ],
            "src": "7294:224:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7670:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7680:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7746:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7751:2:8",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7687:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7687:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7680:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7852:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39",
                      "nodeType": "YulIdentifier",
                      "src": "7763:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7763:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7763:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7865:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7876:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7881:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7872:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7872:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7865:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7658:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7666:3:8",
                "type": ""
              }
            ],
            "src": "7524:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8067:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8077:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8089:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8100:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8085:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8085:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8077:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8124:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8135:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8120:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8120:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8143:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8149:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8139:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8139:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8113:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8113:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8113:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8169:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8303:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8177:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8177:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8169:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8047:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8062:4:8",
                "type": ""
              }
            ],
            "src": "7896:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8475:288:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8485:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8497:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8508:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8493:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8493:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8485:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8565:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8578:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8589:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8574:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8574:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8521:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8521:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8521:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8646:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8659:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8670:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8655:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8655:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8602:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8602:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8602:72:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "8728:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8741:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8752:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8737:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8737:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8684:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8684:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8684:72:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8431:9:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8443:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8451:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8459:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8470:4:8",
                "type": ""
              }
            ],
            "src": "8321:442:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8811:48:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8821:32:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8846:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "8839:6:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8839:13:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8832:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8832:21:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8821:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8793:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8803:7:8",
                "type": ""
              }
            ],
            "src": "8769:90:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8905:76:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8959:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8968:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8971:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8961:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8961:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8961:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8928:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8950:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "8935:14:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8935:21:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8925:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8925:32:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8918:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8918:40:8"
                  },
                  "nodeType": "YulIf",
                  "src": "8915:60:8"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8898:5:8",
                "type": ""
              }
            ],
            "src": "8865:116:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9047:77:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9057:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "9072:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9066:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9066:13:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "9057:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9112:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "9088:23:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9088:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9088:30:8"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "9025:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9033:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9041:5:8",
                "type": ""
              }
            ],
            "src": "8987:137:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9204:271:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9250:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "9252:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9252:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9252:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9225:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9234:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9221:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9221:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9246:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9217:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9217:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "9214:119:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9343:125:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9358:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9372:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "9362:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9387:71:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9430:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "9441:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9426:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9426:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9450:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "9397:28:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9397:61:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "9387:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9174:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9185:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9197:6:8",
                "type": ""
              }
            ],
            "src": "9130:345:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9509:152:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9526:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9529:77:8",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9519:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9519:88:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9519:88:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9623:1:8",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9626:4:8",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9616:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9616:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9616:15:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9647:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9650:4:8",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "9640:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9640:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9640:15:8"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "9481:180:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9711:261:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9721:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9744:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9726:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9726:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "9721:1:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9755:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9778:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9760:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9760:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "9755:1:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9918:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "9920:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9920:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9920:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9839:1:8"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9846:66:8",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "9914:1:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9842:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9842:74:8"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9836:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9836:81:8"
                  },
                  "nodeType": "YulIf",
                  "src": "9833:107:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9950:16:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9961:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9964:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9957:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9957:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "9950:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "9698:1:8",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "9701:1:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "9707:3:8",
                "type": ""
              }
            ],
            "src": "9667:305:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10084:122:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10106:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10114:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10102:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10102:14:8"
                      },
                      {
                        "hexValue": "596f75206469646e27742073746f726564207468697320616d6f756e7420696e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10118:34:8",
                        "type": "",
                        "value": "You didn't stored this amount in"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10095:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10095:58:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10095:58:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10174:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10182:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10170:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10170:15:8"
                      },
                      {
                        "hexValue": "2074686520706f6f6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10187:11:8",
                        "type": "",
                        "value": " the pool"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10163:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10163:36:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10163:36:8"
                }
              ]
            },
            "name": "store_literal_in_memory_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "10076:6:8",
                "type": ""
              }
            ],
            "src": "9978:228:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10358:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10368:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10434:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10439:2:8",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10375:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10375:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10368:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10540:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9",
                      "nodeType": "YulIdentifier",
                      "src": "10451:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10451:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10451:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10553:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10564:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10569:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10560:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10560:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10553:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10346:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10354:3:8",
                "type": ""
              }
            ],
            "src": "10212:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10755:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10765:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10777:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10788:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10773:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10773:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10765:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10812:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10823:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10808:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10808:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10831:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10837:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10827:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10827:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10801:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10801:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10801:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10857:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10991:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10865:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10865:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10857:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10735:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10750:4:8",
                "type": ""
              }
            ],
            "src": "10584:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11054:146:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11064:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11087:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11069:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11069:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "11064:1:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11098:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11121:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11103:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11103:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "11098:1:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11145:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11147:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11147:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11147:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11139:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11142:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "11136:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11136:8:8"
                  },
                  "nodeType": "YulIf",
                  "src": "11133:34:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11177:17:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11189:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11192:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "11185:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11185:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "11177:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11040:1:8",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11043:1:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "11049:4:8",
                "type": ""
              }
            ],
            "src": "11009:191:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11250:61:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11260:45:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11275:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11282:22:8",
                        "type": "",
                        "value": "0xffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "11271:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11271:34:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "11260:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint80",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11232:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "11242:7:8",
                "type": ""
              }
            ],
            "src": "11206:105:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11359:78:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11415:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11424:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11427:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11417:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11417:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11417:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11382:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11406:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint80",
                              "nodeType": "YulIdentifier",
                              "src": "11389:16:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11389:23:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "11379:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11379:34:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11372:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11372:42:8"
                  },
                  "nodeType": "YulIf",
                  "src": "11369:62:8"
                }
              ]
            },
            "name": "validator_revert_t_uint80",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11352:5:8",
                "type": ""
              }
            ],
            "src": "11317:120:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11505:79:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11515:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "11530:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "11524:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11524:13:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "11515:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11572:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint80",
                      "nodeType": "YulIdentifier",
                      "src": "11546:25:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11546:32:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11546:32:8"
                }
              ]
            },
            "name": "abi_decode_t_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "11483:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11491:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11499:5:8",
                "type": ""
              }
            ],
            "src": "11443:141:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11632:78:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11688:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11697:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11700:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11690:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11690:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11690:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11655:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11679:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_int256",
                              "nodeType": "YulIdentifier",
                              "src": "11662:16:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11662:23:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "11652:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11652:34:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11645:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11645:42:8"
                  },
                  "nodeType": "YulIf",
                  "src": "11642:62:8"
                }
              ]
            },
            "name": "validator_revert_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11625:5:8",
                "type": ""
              }
            ],
            "src": "11590:120:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11778:79:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11788:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "11803:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "11797:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11797:13:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "11788:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11845:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "11819:25:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11819:32:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11819:32:8"
                }
              ]
            },
            "name": "abi_decode_t_int256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "11756:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11764:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11772:5:8",
                "type": ""
              }
            ],
            "src": "11716:141:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11926:80:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11936:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "11951:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "11945:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11945:13:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "11936:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11994:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11967:26:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11967:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11967:33:8"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "11904:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11912:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11920:5:8",
                "type": ""
              }
            ],
            "src": "11863:143:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12154:829:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12201:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "12203:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12203:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12203:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12175:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12184:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12171:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12171:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12196:3:8",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "12167:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12167:33:8"
                  },
                  "nodeType": "YulIf",
                  "src": "12164:120:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "12294:127:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "12309:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12323:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "12313:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "12338:73:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12383:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "12394:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12379:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12379:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12403:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint80_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "12348:30:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12348:63:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "12338:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "12431:128:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "12446:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12460:2:8",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "12450:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "12476:73:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12521:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "12532:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12517:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12517:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12541:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_int256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "12486:30:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12486:63:8"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "12476:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "12569:129:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "12584:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12598:2:8",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "12588:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "12614:74:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12660:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "12671:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12656:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12656:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12680:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "12624:31:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12624:64:8"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "12614:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "12708:129:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "12723:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12737:2:8",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "12727:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "12753:74:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12799:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "12810:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12795:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12795:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12819:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "12763:31:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12763:64:8"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "12753:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "12847:129:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "12862:17:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12876:3:8",
                        "type": "",
                        "value": "128"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "12866:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "12893:73:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12938:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "12949:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12934:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12934:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12958:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint80_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "12903:30:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12903:63:8"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "12893:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12092:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "12103:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12115:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12123:6:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "12131:6:8",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "12139:6:8",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "12147:6:8",
                "type": ""
              }
            ],
            "src": "12012:971:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13095:62:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13117:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13125:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13113:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13113:14:8"
                      },
                      {
                        "hexValue": "4e6f2072657761726420746f20636c61696d",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13129:20:8",
                        "type": "",
                        "value": "No reward to claim"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13106:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13106:44:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13106:44:8"
                }
              ]
            },
            "name": "store_literal_in_memory_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "13087:6:8",
                "type": ""
              }
            ],
            "src": "12989:168:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13309:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13319:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13385:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13390:2:8",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13326:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13326:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "13319:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13491:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655",
                      "nodeType": "YulIdentifier",
                      "src": "13402:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13402:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13402:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13504:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13515:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13520:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13511:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13511:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "13504:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13297:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13305:3:8",
                "type": ""
              }
            ],
            "src": "13163:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13706:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13716:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13728:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13739:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13724:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13724:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13716:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13763:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13774:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13759:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13759:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13782:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13788:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13778:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13778:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13752:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13752:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13752:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13808:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13942:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13816:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13816:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13808:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13686:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13701:4:8",
                "type": ""
              }
            ],
            "src": "13535:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14066:119:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14088:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14096:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14084:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14084:14:8"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14100:34:8",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14077:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14077:58:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14077:58:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14156:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14164:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14152:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14152:15:8"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14169:8:8",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14145:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14145:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14145:33:8"
                }
              ]
            },
            "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "14058:6:8",
                "type": ""
              }
            ],
            "src": "13960:225:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14337:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14347:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14413:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14418:2:8",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14354:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14354:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "14347:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14519:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                      "nodeType": "YulIdentifier",
                      "src": "14430:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14430:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14430:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14532:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14543:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14548:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14539:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14539:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "14532:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14325:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "14333:3:8",
                "type": ""
              }
            ],
            "src": "14191:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14734:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14744:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14756:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14767:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14752:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14752:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14744:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14791:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14802:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14787:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14787:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "14810:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14816:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14806:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14806:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14780:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14780:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14780:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14836:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14970:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14844:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14844:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14836:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14714:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14729:4:8",
                "type": ""
              }
            ],
            "src": "14563:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15036:300:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15046:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15069:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "15051:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15051:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "15046:1:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15080:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15103:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "15085:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15085:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "15080:1:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15278:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "15280:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15280:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15280:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "15190:1:8"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "15183:6:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15183:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "15176:6:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15176:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "15198:1:8"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15205:66:8",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "15273:1:8"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "15201:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15201:74:8"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "15195:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15195:81:8"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "15172:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15172:105:8"
                  },
                  "nodeType": "YulIf",
                  "src": "15169:131:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15310:20:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15325:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15328:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "15321:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15321:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "15310:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "15019:1:8",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "15022:1:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "15028:7:8",
                "type": ""
              }
            ],
            "src": "14988:348:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15370:152:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15387:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15390:77:8",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15380:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15380:88:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15380:88:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15484:1:8",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15487:4:8",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15477:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15477:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15477:15:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15508:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15511:4:8",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "15501:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15501:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15501:15:8"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "15342:180:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15570:143:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15580:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15603:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "15585:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15585:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "15580:1:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15614:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15637:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "15619:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15619:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "15614:1:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15661:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "15663:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15663:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15663:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15658:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "15651:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15651:9:8"
                  },
                  "nodeType": "YulIf",
                  "src": "15648:35:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15693:14:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15702:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15705:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "15698:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15698:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "15693:1:8"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "15559:1:8",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "15562:1:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "15568:1:8",
                "type": ""
              }
            ],
            "src": "15528:185:8"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a194696f04688286da56f78d8937d221aac74d579f9aa2107bb36cea4db90452(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only Authorized token address ca\")\n\n        mstore(add(memPtr, 32), \"n be used for this action\")\n\n    }\n\n    function abi_encode_t_stringliteral_a194696f04688286da56f78d8937d221aac74d579f9aa2107bb36cea4db90452_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 57)\n        store_literal_in_memory_a194696f04688286da56f78d8937d221aac74d579f9aa2107bb36cea4db90452(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a194696f04688286da56f78d8937d221aac74d579f9aa2107bb36cea4db90452__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a194696f04688286da56f78d8937d221aac74d579f9aa2107bb36cea4db90452_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7bb1d43e663da0f86542a4dab0fd93ef18fc8b2b622fee6e6d42583eb142b0f2(memPtr) {\n\n        mstore(add(memPtr, 0), \"This pool is already created\")\n\n    }\n\n    function abi_encode_t_stringliteral_7bb1d43e663da0f86542a4dab0fd93ef18fc8b2b622fee6e6d42583eb142b0f2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_7bb1d43e663da0f86542a4dab0fd93ef18fc8b2b622fee6e6d42583eb142b0f2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7bb1d43e663da0f86542a4dab0fd93ef18fc8b2b622fee6e6d42583eb142b0f2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7bb1d43e663da0f86542a4dab0fd93ef18fc8b2b622fee6e6d42583eb142b0f2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only amount above zero are autho\")\n\n        mstore(add(memPtr, 32), \"rized\")\n\n    }\n\n    function abi_encode_t_stringliteral_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9(memPtr) {\n\n        mstore(add(memPtr, 0), \"You didn't stored this amount in\")\n\n        mstore(add(memPtr, 32), \" the pool\")\n\n    }\n\n    function abi_encode_t_stringliteral_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655(memPtr) {\n\n        mstore(add(memPtr, 0), \"No reward to claim\")\n\n    }\n\n    function abi_encode_t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
      "id": 8,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "457:11044:6:-:0;;;1531:18;1500:49;;1765:19;1734:50;;457:11044;;;;;;;;;;921:32:1;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;457:11044:6;;640:96:5;693:7;719:10;712:17;;640:96;:::o;2270:187:1:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;457:11044:6:-;;;;;;;",
  "deployedSourceMap": "457:11044:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8892:266;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7607:220;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10915:193;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1668:101:1;;;;;;;;;;;;;:::i;:::-;;3756:527:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1500:49;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1036:85:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1734:50:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4604:1134;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6105:1284;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8062:609;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9970:745;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11307:191;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1918:198:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8892:266:6;8998:11;8974:13;2009:17;:32;2027:13;2009:32;;;;;;;;;;;;;;;:42;;;;;;;;;;;;2001:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;9029:120:::1;9043:17;:32;9061:13;9043:32;;;;;;;;;;;;;;;:43;;:55;9087:10;9043:55;;;;;;;;;;;;;;;9029:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;9100:17;:32;9118:13;9100:32;;;;;;;;;;;;;;;:48;;;9029:13;:120::i;:::-;9022:128;;8892:266:::0;;;;:::o;7607:220::-;7713:17;7689:13;2009:17;:32;2027:13;2009:32;;;;;;;;;;;;;;;:42;;;;;;;;;;;;2001:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;7750:17:::1;:32;7768:13;7750:32;;;;;;;;;;;;;;;:43;;:55;7794:10;7750:55;;;;;;;;;;;;;;;:68;;;7743:76;;7607:220:::0;;;;:::o;10915:193::-;11025:4;11001:13;2009:17;:32;2027:13;2009:32;;;;;;;;;;;;;;;:42;;;;;;;;;;;;2001:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;11051:17:::1;:32;11069:13;11051:32;;;;;;;;;;;;;;;:49;;;11044:56;;10915:193:::0;;;;:::o;1668:101:1:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;3756:527:6:-;1259:12:1;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;3904:17:6::1;:32;3922:13;3904:32;;;;;;;;;;;;;;;:42;;;;;;;;;;;;3903:43;3895:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;4043:16;3992:17;:32;4010:13;3992:32;;;;;;;;;;;;;;;:48;;:67;;;;4129:24;4070:17;:32;4088:13;4070:32;;;;;;;;;;;;;;;:56;;;:83;;;;;;;;;;;;;;;;;;4209:4;4164:17:::0;:32:::1;4182:13;4164:32;;;;;;;;;;;;;;;:42;;;:49;;;;;;;;;;;;;;;;;;4231:44;4243:13;4258:16;4231:44;;;;;;;:::i;:::-;;;;;;;;3756:527:::0;;;:::o;1500:49::-;;;;:::o;1036:85:1:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;1734:50:6:-;;;;:::o;4604:1134::-;4693:13;2009:17;:32;2027:13;2009:32;;;;;;;;;;;;;;;:42;;;;;;;;;;;;2001:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;4734:7:::1;2328:1;2318:7;:11;2310:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;4771:13:::2;4764:34;;;4799:10;4819:4;4826:7;4764:70;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4887:34;4924:17;:32;4942:13;4924:32;;;;;;;;;;;;;;;4887:69;;4999:29;5031:8;:19;;:31;5051:10;5031:31;;;;;;;;;;;;;;;4999:63;;5181:1;5155:10;:23;;;:27;5152:130;;;5219:51;5233:10;5219:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;5245:8;:24;;;5219:13;:51::i;:::-;5199:10;:17;;:71;;;;5152:130;5452:7;5426:10;:23;;;:33;;;;:::i;:::-;5400:10;:23;;:59;;;;5499:15;5470:10;:26;;:44;;;;5634:7;5605:8;:25;;;:36;;;;:::i;:::-;5577:8;:25;;:64;;;;5659:71;5679:10;5691:13;5706:10;:23;;;5659:71;;;;;;;;:::i;:::-;;;;;;;;4743:995;;2124:1:::1;4604:1134:::0;;;:::o;6105:1284::-;6199:13;2009:17;:32;2027:13;2009:32;;;;;;;;;;;;;;;:42;;;;;;;;;;;;2001:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;6240:7:::1;2328:1;2318:7;:11;2310:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;6310:34:::2;6347:17;:32;6365:13;6347:32;;;;;;;;;;;;;;;6310:69;;6424:29;6456:8;:19;;:31;6476:10;6456:31;;;;;;;;;;;;;;;6424:63;;6584:10;:23;;;6573:7;:34;;6565:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;6764:51;6778:10;6764:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;6790:8;:24;;;6764:13;:51::i;:::-;6744:10;:17;;:71;;;;6986:7;6960:10;:23;;;:33;;;;:::i;:::-;6934:10;:23;;:59;;;;7033:15;7004:10;:26;;:44;;;;7167:7;7138:8;:25;;;:36;;;;:::i;:::-;7110:8;:25;;:64;;;;7240:13;7233:30;;;7264:10;7276:7;7233:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7310:71;7330:10;7342:13;7357:10;:23;;;7310:71;;;;;;;;:::i;:::-;;;;;;;;6249:1140;;2124:1:::1;6105:1284:::0;;;:::o;8062:609::-;8166:3;8142:13;2009:17;:32;2027:13;2009:32;;;;;;;;;;;;;;;:42;;;;;;;;;;;;2001:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;8220:21:::1;8244:17;:32;8262:13;8244:32;;;;;;;;;;;;;;;:56;;;;;;;;;;;;8220:80;;8311:31;8367:13;8311:70;;8466:9;8610;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8416:221;;;;;;8657:5;8650:13;;;;;8062:609:::0;;;;:::o;9970:745::-;10043:13;2009:17;:32;2027:13;2009:32;;;;;;;;;;;;;;;:42;;;;;;;;;;;;2001:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;10103:29:::1;10135:17;:32;10153:13;10135:32;;;;;;;;;;;;;;;:43;;:55;10179:10;10135:55;;;;;;;;;;;;;;;10103:87;;10234:11;10248:75;10262:10;10248:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;10274:17;:32;10292:13;10274:32;;;;;;;;;;;;;;;:48;;;10248:13;:75::i;:::-;10234:89;;10353:1;10344:6;:10;10336:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;10482:15;10453:10;:26;;:44;;;;10528:1;10508:10;:17;;:21;;;;10598:13;10591:30;;;10622:10;10634:6;10591:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10659:48;10673:10;10685:13;10700:6;10659:48;;;;;;;;:::i;:::-;;;;;;;;10058:657;;9970:745:::0;;:::o;11307:191::-;11416:4;11392:13;2009:17;:32;2027:13;2009:32;;;;;;;;;;;;;;;:42;;;;;;;;;;;;2001:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;11442:17:::1;:32;11460:13;11442:32;;;;;;;;;;;;;;;:48;;;11435:55;;11307:191:::0;;;;:::o;1918:198:1:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;::::0;1998:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;9397:419:6:-;9495:17;9535:11;9619;:24;;;9600:16;9569:11;:27;;;9551:15;:45;;;;:::i;:::-;9550:66;;;;:::i;:::-;:93;;;;:::i;:::-;9535:109;;9669:1;9660:6;:10;9657:152;;;9725:4;9716:6;:13;;;;:::i;:::-;9694:11;:18;;;:36;;;;:::i;:::-;9687:43;;;;;9657:152;9779:11;:18;;;9772:25;;;9397:419;;;;;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;2270:187:1:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;88:117:8:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:619::-;1961:6;1969;1977;2026:2;2014:9;2005:7;2001:23;1997:32;1994:119;;;2032:79;;:::i;:::-;1994:119;2152:1;2177:53;2222:7;2213:6;2202:9;2198:22;2177:53;:::i;:::-;2167:63;;2123:117;2279:2;2305:53;2350:7;2341:6;2330:9;2326:22;2305:53;:::i;:::-;2295:63;;2250:118;2407:2;2433:53;2478:7;2469:6;2458:9;2454:22;2433:53;:::i;:::-;2423:63;;2378:118;1884:619;;;;;:::o;2509:118::-;2596:24;2614:5;2596:24;:::i;:::-;2591:3;2584:37;2509:118;;:::o;2633:222::-;2726:4;2764:2;2753:9;2749:18;2741:26;;2777:71;2845:1;2834:9;2830:17;2821:6;2777:71;:::i;:::-;2633:222;;;;:::o;2861:474::-;2929:6;2937;2986:2;2974:9;2965:7;2961:23;2957:32;2954:119;;;2992:79;;:::i;:::-;2954:119;3112:1;3137:53;3182:7;3173:6;3162:9;3158:22;3137:53;:::i;:::-;3127:63;;3083:117;3239:2;3265:53;3310:7;3301:6;3290:9;3286:22;3265:53;:::i;:::-;3255:63;;3210:118;2861:474;;;;;:::o;3341:76::-;3377:7;3406:5;3395:16;;3341:76;;;:::o;3423:115::-;3508:23;3525:5;3508:23;:::i;:::-;3503:3;3496:36;3423:115;;:::o;3544:218::-;3635:4;3673:2;3662:9;3658:18;3650:26;;3686:69;3752:1;3741:9;3737:17;3728:6;3686:69;:::i;:::-;3544:218;;;;:::o;3768:169::-;3852:11;3886:6;3881:3;3874:19;3926:4;3921:3;3917:14;3902:29;;3768:169;;;;:::o;3943:244::-;4083:34;4079:1;4071:6;4067:14;4060:58;4152:27;4147:2;4139:6;4135:15;4128:52;3943:244;:::o;4193:366::-;4335:3;4356:67;4420:2;4415:3;4356:67;:::i;:::-;4349:74;;4432:93;4521:3;4432:93;:::i;:::-;4550:2;4545:3;4541:12;4534:19;;4193:366;;;:::o;4565:419::-;4731:4;4769:2;4758:9;4754:18;4746:26;;4818:9;4812:4;4808:20;4804:1;4793:9;4789:17;4782:47;4846:131;4972:4;4846:131;:::i;:::-;4838:139;;4565:419;;;:::o;4990:182::-;5130:34;5126:1;5118:6;5114:14;5107:58;4990:182;:::o;5178:366::-;5320:3;5341:67;5405:2;5400:3;5341:67;:::i;:::-;5334:74;;5417:93;5506:3;5417:93;:::i;:::-;5535:2;5530:3;5526:12;5519:19;;5178:366;;;:::o;5550:419::-;5716:4;5754:2;5743:9;5739:18;5731:26;;5803:9;5797:4;5793:20;5789:1;5778:9;5774:17;5767:47;5831:131;5957:4;5831:131;:::i;:::-;5823:139;;5550:419;;;:::o;5975:178::-;6115:30;6111:1;6103:6;6099:14;6092:54;5975:178;:::o;6159:366::-;6301:3;6322:67;6386:2;6381:3;6322:67;:::i;:::-;6315:74;;6398:93;6487:3;6398:93;:::i;:::-;6516:2;6511:3;6507:12;6500:19;;6159:366;;;:::o;6531:419::-;6697:4;6735:2;6724:9;6720:18;6712:26;;6784:9;6778:4;6774:20;6770:1;6759:9;6755:17;6748:47;6812:131;6938:4;6812:131;:::i;:::-;6804:139;;6531:419;;;:::o;6956:332::-;7077:4;7115:2;7104:9;7100:18;7092:26;;7128:71;7196:1;7185:9;7181:17;7172:6;7128:71;:::i;:::-;7209:72;7277:2;7266:9;7262:18;7253:6;7209:72;:::i;:::-;6956:332;;;;;:::o;7294:224::-;7434:34;7430:1;7422:6;7418:14;7411:58;7503:7;7498:2;7490:6;7486:15;7479:32;7294:224;:::o;7524:366::-;7666:3;7687:67;7751:2;7746:3;7687:67;:::i;:::-;7680:74;;7763:93;7852:3;7763:93;:::i;:::-;7881:2;7876:3;7872:12;7865:19;;7524:366;;;:::o;7896:419::-;8062:4;8100:2;8089:9;8085:18;8077:26;;8149:9;8143:4;8139:20;8135:1;8124:9;8120:17;8113:47;8177:131;8303:4;8177:131;:::i;:::-;8169:139;;7896:419;;;:::o;8321:442::-;8470:4;8508:2;8497:9;8493:18;8485:26;;8521:71;8589:1;8578:9;8574:17;8565:6;8521:71;:::i;:::-;8602:72;8670:2;8659:9;8655:18;8646:6;8602:72;:::i;:::-;8684;8752:2;8741:9;8737:18;8728:6;8684:72;:::i;:::-;8321:442;;;;;;:::o;8769:90::-;8803:7;8846:5;8839:13;8832:21;8821:32;;8769:90;;;:::o;8865:116::-;8935:21;8950:5;8935:21;:::i;:::-;8928:5;8925:32;8915:60;;8971:1;8968;8961:12;8915:60;8865:116;:::o;8987:137::-;9041:5;9072:6;9066:13;9057:22;;9088:30;9112:5;9088:30;:::i;:::-;8987:137;;;;:::o;9130:345::-;9197:6;9246:2;9234:9;9225:7;9221:23;9217:32;9214:119;;;9252:79;;:::i;:::-;9214:119;9372:1;9397:61;9450:7;9441:6;9430:9;9426:22;9397:61;:::i;:::-;9387:71;;9343:125;9130:345;;;;:::o;9481:180::-;9529:77;9526:1;9519:88;9626:4;9623:1;9616:15;9650:4;9647:1;9640:15;9667:305;9707:3;9726:20;9744:1;9726:20;:::i;:::-;9721:25;;9760:20;9778:1;9760:20;:::i;:::-;9755:25;;9914:1;9846:66;9842:74;9839:1;9836:81;9833:107;;;9920:18;;:::i;:::-;9833:107;9964:1;9961;9957:9;9950:16;;9667:305;;;;:::o;9978:228::-;10118:34;10114:1;10106:6;10102:14;10095:58;10187:11;10182:2;10174:6;10170:15;10163:36;9978:228;:::o;10212:366::-;10354:3;10375:67;10439:2;10434:3;10375:67;:::i;:::-;10368:74;;10451:93;10540:3;10451:93;:::i;:::-;10569:2;10564:3;10560:12;10553:19;;10212:366;;;:::o;10584:419::-;10750:4;10788:2;10777:9;10773:18;10765:26;;10837:9;10831:4;10827:20;10823:1;10812:9;10808:17;10801:47;10865:131;10991:4;10865:131;:::i;:::-;10857:139;;10584:419;;;:::o;11009:191::-;11049:4;11069:20;11087:1;11069:20;:::i;:::-;11064:25;;11103:20;11121:1;11103:20;:::i;:::-;11098:25;;11142:1;11139;11136:8;11133:34;;;11147:18;;:::i;:::-;11133:34;11192:1;11189;11185:9;11177:17;;11009:191;;;;:::o;11206:105::-;11242:7;11282:22;11275:5;11271:34;11260:45;;11206:105;;;:::o;11317:120::-;11389:23;11406:5;11389:23;:::i;:::-;11382:5;11379:34;11369:62;;11427:1;11424;11417:12;11369:62;11317:120;:::o;11443:141::-;11499:5;11530:6;11524:13;11515:22;;11546:32;11572:5;11546:32;:::i;:::-;11443:141;;;;:::o;11590:120::-;11662:23;11679:5;11662:23;:::i;:::-;11655:5;11652:34;11642:62;;11700:1;11697;11690:12;11642:62;11590:120;:::o;11716:141::-;11772:5;11803:6;11797:13;11788:22;;11819:32;11845:5;11819:32;:::i;:::-;11716:141;;;;:::o;11863:143::-;11920:5;11951:6;11945:13;11936:22;;11967:33;11994:5;11967:33;:::i;:::-;11863:143;;;;:::o;12012:971::-;12115:6;12123;12131;12139;12147;12196:3;12184:9;12175:7;12171:23;12167:33;12164:120;;;12203:79;;:::i;:::-;12164:120;12323:1;12348:63;12403:7;12394:6;12383:9;12379:22;12348:63;:::i;:::-;12338:73;;12294:127;12460:2;12486:63;12541:7;12532:6;12521:9;12517:22;12486:63;:::i;:::-;12476:73;;12431:128;12598:2;12624:64;12680:7;12671:6;12660:9;12656:22;12624:64;:::i;:::-;12614:74;;12569:129;12737:2;12763:64;12819:7;12810:6;12799:9;12795:22;12763:64;:::i;:::-;12753:74;;12708:129;12876:3;12903:63;12958:7;12949:6;12938:9;12934:22;12903:63;:::i;:::-;12893:73;;12847:129;12012:971;;;;;;;;:::o;12989:168::-;13129:20;13125:1;13117:6;13113:14;13106:44;12989:168;:::o;13163:366::-;13305:3;13326:67;13390:2;13385:3;13326:67;:::i;:::-;13319:74;;13402:93;13491:3;13402:93;:::i;:::-;13520:2;13515:3;13511:12;13504:19;;13163:366;;;:::o;13535:419::-;13701:4;13739:2;13728:9;13724:18;13716:26;;13788:9;13782:4;13778:20;13774:1;13763:9;13759:17;13752:47;13816:131;13942:4;13816:131;:::i;:::-;13808:139;;13535:419;;;:::o;13960:225::-;14100:34;14096:1;14088:6;14084:14;14077:58;14169:8;14164:2;14156:6;14152:15;14145:33;13960:225;:::o;14191:366::-;14333:3;14354:67;14418:2;14413:3;14354:67;:::i;:::-;14347:74;;14430:93;14519:3;14430:93;:::i;:::-;14548:2;14543:3;14539:12;14532:19;;14191:366;;;:::o;14563:419::-;14729:4;14767:2;14756:9;14752:18;14744:26;;14816:9;14810:4;14806:20;14802:1;14791:9;14787:17;14780:47;14844:131;14970:4;14844:131;:::i;:::-;14836:139;;14563:419;;;:::o;14988:348::-;15028:7;15051:20;15069:1;15051:20;:::i;:::-;15046:25;;15085:20;15103:1;15085:20;:::i;:::-;15080:25;;15273:1;15205:66;15201:74;15198:1;15195:81;15190:1;15183:9;15176:17;15172:105;15169:131;;;15280:18;;:::i;:::-;15169:131;15328:1;15325;15321:9;15310:20;;14988:348;;;;:::o;15342:180::-;15390:77;15387:1;15380:88;15487:4;15484:1;15477:15;15511:4;15508:1;15501:15;15528:185;15568:1;15585:20;15603:1;15585:20;:::i;:::-;15580:25;;15619:20;15637:1;15619:20;:::i;:::-;15614:25;;15658:1;15648:35;;15663:18;;:::i;:::-;15648:35;15705:1;15702;15698:9;15693:14;;15528:185;;;;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity 0.8.13;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\n\r\n/**\r\n * @title Hello World DeFi Protocol\r\n * @author The Hello World Team\r\n * @notice This contract offer the possibility to stake ERC20 in Liquidity Pools to receive Hello World Token rewards\r\n */\r\ncontract DeFiProtocol is Ownable {\r\n\r\n\r\n    // :::::::::::::: Struct ::::::::::::::: //\r\n\r\n    /**\r\n     * @notice This struct contains the data of a Staker\r\n     */\r\n    struct StakerData {\r\n        uint256 stakedAmount; \r\n        uint256 updateTimestamp;\r\n        uint256 reward;\r\n    }\r\n\r\n    /**\r\n     * @notice Contain liquidity pool data\r\n     * @dev aggregator address is used to get price over the Chainlink Oracle\r\n     */\r\n    struct LiquidityPoolData {\r\n        bool isCreated;\r\n        uint rewardPerSecond;\r\n        address oracleAggregatorAddress;\r\n        uint totalValueLocked;\r\n        mapping(address => StakerData) stakerData;\r\n    }\r\n\r\n    // ::::::::::::: Properties ::::::::::::: //\r\n\r\n    /**\r\n     * @notice This mapping store liquidity pool data per token address\r\n     */\r\n    mapping(address => LiquidityPoolData) liquidityPoolData;\r\n\r\n    /**\r\n     * @notice Token multiplier to give a price on the Hwt token\r\n     * @dev As our Hwt token don't have any value on the market, we use a basic multiplier\r\n     */\r\n    uint public hwtTokenUsdValue = 931500000000000000;\r\n\r\n    /**\r\n     * @notice Token multiplier to give a price on the Flp token\r\n     * @dev As our Flp token don't have any value on the market, we use a basic multiplier\r\n     */\r\n    uint public flpTokenUsdValue = 4932100000000000000;\r\n\r\n    // ::::::::::::: Modifiers ::::::::::::: //\r\n\r\n    /**\r\n     * @notice Modifier that allow only authorizedToken for liquidity pool\r\n     */\r\n    modifier onlyAuthorizedToken(address _tokenAddress) {\r\n        require(liquidityPoolData[_tokenAddress].isCreated, \"Only Authorized token address can be used for this action\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @notice Modifier that allow only amount greater than zero to be staked or unstaked\r\n     */\r\n    modifier onlyAmountGreaterThanZero(uint _amount) {\r\n        require(_amount > 0, \"Only amount above zero are authorized\");\r\n        _;\r\n    }\r\n\r\n    // ::::::::::::: Events ::::::::::::: //\r\n\r\n    /**\r\n     * @notice Event informing the staked amount was updated\r\n     * @param sender The address that staked in the pool\r\n     * @param tokenAddress The liquidity pool token\r\n     * @param stakedAmount The amount that has been staked\r\n     */\r\n    event StakedAmountUpdated (address sender, address tokenAddress, uint stakedAmount);\r\n\r\n    /** \r\n     * @notice Event informing a reward was send\r\n     * @param sender The address that claim the reward\r\n     * @param tokenAddress The liquidity pool token\r\n     * @param rewardClaimedAmount The amount that has been offered\r\n     */\r\n    event RewardOffered (address sender, address tokenAddress, uint rewardClaimedAmount);\r\n\r\n    /**\r\n     * @notice Event informing a new liquidity pool is created\r\n     * @param tokenAddress The address of the pool token\r\n     * @param rewardPerSecond The reward rate per second\r\n     */\r\n    event PoolCreated (address tokenAddress, uint rewardPerSecond);\r\n\r\n    // ::::::::::::: Methods ::::::::::::: //\r\n\r\n    /**\r\n     * @notice Create a new pool with an erc20 token\r\n     * @param _tokenAddress the erc20 token address\r\n     * @param _oracleAggregatorAddress The oracle aggregator address that will permit to get the token price in USD\r\n     * @param _rewardPerSecond The win rate of the liquidity pool\r\n     */\r\n    function createLiquidityPool(address _tokenAddress, address _oracleAggregatorAddress, uint _rewardPerSecond) external onlyOwner {\r\n        require(!liquidityPoolData[_tokenAddress].isCreated, \"This pool is already created\");\r\n\r\n        liquidityPoolData[_tokenAddress].rewardPerSecond = _rewardPerSecond;\r\n        liquidityPoolData[_tokenAddress].oracleAggregatorAddress = _oracleAggregatorAddress;\r\n        liquidityPoolData[_tokenAddress].isCreated = true;\r\n\r\n        emit PoolCreated(_tokenAddress, _rewardPerSecond);\r\n    }\r\n\r\n    /**\r\n     * @notice Stake token in the Liquidity pool\r\n     * @dev Refresh the stored amount in the address mapping storedValuePerAddress and refresh the TVL\r\n     * @param _tokenAddress The token address to stake in liquidity pool\r\n     * @param _amount Total amount to store in the liquidity pool\r\n     */\r\n    function stake(address _tokenAddress, uint _amount) payable external onlyAuthorizedToken(_tokenAddress) onlyAmountGreaterThanZero(_amount) {\r\n        \r\n        IERC20(_tokenAddress).transferFrom(msg.sender, address(this), _amount);\r\n\r\n        // Get the liquidity pool data\r\n        LiquidityPoolData storage poolData = liquidityPoolData[_tokenAddress];\r\n        // Get the staker data\r\n        StakerData storage stakerData = poolData.stakerData[msg.sender];\r\n\r\n        // if tokens are already stored, update reward before the new stake\r\n        if(stakerData.stakedAmount > 0) {\r\n            stakerData.reward = computeReward(stakerData, poolData.rewardPerSecond);\r\n        }\r\n\r\n        // Update the staked amount and the timestamp to compute new amount reward at this specific time\r\n        stakerData.stakedAmount = stakerData.stakedAmount + _amount;\r\n        stakerData.updateTimestamp = block.timestamp; \r\n\r\n        // Update the tvl of the liquidity pool\r\n        poolData.totalValueLocked = poolData.totalValueLocked  + _amount;\r\n\r\n        emit StakedAmountUpdated(msg.sender, _tokenAddress, stakerData.stakedAmount);\r\n    }\r\n\r\n    /**\r\n     * @notice Unstake the tokens in the Liquidity pool, user can retrieve their tokens\r\n     * @dev Refresh the stored amount in the address mapping stakerDataPerAddress and refresh the TVL\r\n     * @param _tokenAddress The token address to unstake from liquidity pool\r\n     * @param _amount Total amount to unstake from the liquidity pool\r\n     */\r\n    function unstake(address _tokenAddress, uint256 _amount) payable external onlyAuthorizedToken(_tokenAddress) onlyAmountGreaterThanZero(_amount) {\r\n        \r\n        // Get the liquidity pool data\r\n        LiquidityPoolData storage poolData = liquidityPoolData[_tokenAddress];\r\n\r\n        // Get the staker data\r\n        StakerData storage stakerData = poolData.stakerData[msg.sender];\r\n        \r\n        // Check if the sender have this amount in pool\r\n        require(_amount <= stakerData.stakedAmount, \"You didn't stored this amount in the pool\");\r\n\r\n        // Update the reward first ! Then update staked amount and timestamp\r\n        stakerData.reward = computeReward(stakerData, poolData.rewardPerSecond);\r\n\r\n        // Update the staked amount and the timestamp to compute new amount reward at this specific time\r\n        stakerData.stakedAmount = stakerData.stakedAmount - _amount;\r\n        stakerData.updateTimestamp = block.timestamp;\r\n\r\n        // Update the tvl of the liquidity pool\r\n        poolData.totalValueLocked = poolData.totalValueLocked  - _amount;\r\n\r\n        // Send the token back to the sender\r\n        IERC20(_tokenAddress).transfer(msg.sender, _amount);\r\n        \r\n        emit StakedAmountUpdated(msg.sender, _tokenAddress, stakerData.stakedAmount);\r\n    }\r\n\r\n    /**\r\n     * @notice Get the msg.sender token staked amount\r\n     * @param _tokenAddress The address of the token to check for staked amount\r\n     * @return stakedAmount token staked by msg.sender\r\n     */\r\n    function getStakedAmount(address _tokenAddress) external view onlyAuthorizedToken(_tokenAddress) returns (uint stakedAmount) {\r\n        return(liquidityPoolData[_tokenAddress].stakerData[msg.sender].stakedAmount);\r\n    }\r\n\r\n    /**\r\n     * @notice Get the token price in USD\r\n     * @dev USD Price is retrieved thanks to Chainlink\r\n     * @param _tokenAddress The authorized token address to get price\r\n     * @return int price of the token\r\n     */\r\n    function getTokenPrice(address _tokenAddress) external view onlyAuthorizedToken(_tokenAddress) returns (int) {\r\n\r\n        // Retrieve oracle address\r\n        address oracleAddress = liquidityPoolData[_tokenAddress].oracleAggregatorAddress;\r\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(oracleAddress);\r\n\r\n        // get price\r\n        (\r\n            /* uint80 roundID */,\r\n            int price,\r\n            /* uint256 startedAt, */,\r\n            /* uint256 timeStamp, */,\r\n            /* uint80 answeredInRound */\r\n        ) = priceFeed.latestRoundData();\r\n\r\n        return(price);\r\n    }\r\n\r\n    /**\r\n     * @notice Get the reward for msg.sender\r\n     * @param _tokenAddress The token address to get liquidity pool reward of this token\r\n     * @return reward The reward computed by the contract\r\n     */\r\n    function getRewardAmount(address _tokenAddress) external view onlyAuthorizedToken(_tokenAddress) returns (uint reward) {\r\n        return(computeReward(liquidityPoolData[_tokenAddress].stakerData[msg.sender], liquidityPoolData[_tokenAddress].rewardPerSecond));\r\n    }\r\n\r\n    /**\r\n     * @notice Compute the reward depending on time and existant reward\r\n     * @dev Timestamp are in seconds\r\n     * @param _stakerData Data of the staker\r\n     * @return rewardAmount The computed reward amount\r\n     */\r\n    function computeReward(StakerData memory _stakerData, uint _rewardPerSecond) private view returns(uint rewardAmount) {\r\n        \r\n        uint reward = ((block.timestamp - _stakerData.updateTimestamp) * _rewardPerSecond * _stakerData.stakedAmount);\r\n\r\n        if(reward > 0) {\r\n            return _stakerData.reward + (reward / 1e18);\r\n        }\r\n        else {\r\n            return _stakerData.reward;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Send then reward to the msg.sender\r\n     * @param _tokenAddress The token address to claim reward from the pool\r\n     */\r\n    function claimReward(address _tokenAddress) external onlyAuthorizedToken(_tokenAddress) {\r\n\r\n        // Get the staker data\r\n        StakerData storage stakerData = liquidityPoolData[_tokenAddress].stakerData[msg.sender];\r\n\r\n        // Compute the reward\r\n        uint reward = computeReward(stakerData, liquidityPoolData[_tokenAddress].rewardPerSecond);\r\n\r\n        require(reward > 0, \"No reward to claim\");\r\n        \r\n        // Update the timestamp and the reward amount\r\n        stakerData.updateTimestamp = block.timestamp;\r\n        stakerData.reward = 0;\r\n\r\n        // Send reward tokens to the msg.sender\r\n        IERC20(_tokenAddress).transfer(msg.sender, reward);\r\n\r\n        emit RewardOffered(msg.sender, _tokenAddress, reward);\r\n    }\r\n\r\n    /**\r\n     * @notice Get the total value Locked of a liquidity pool\r\n     * @param _tokenAddress The token address for the liquidity pool\r\n     * @return uint The TVL of the pool\r\n     */\r\n    function getTotalValueLocked(address _tokenAddress) external view onlyAuthorizedToken(_tokenAddress) returns (uint) {\r\n\r\n        return liquidityPoolData[_tokenAddress].totalValueLocked;\r\n    }\r\n\r\n    /**\r\n     * @notice Get the reward rate per second\r\n     * @param _tokenAddress The token address for the liquidity pool\r\n     * @return uint The Reward per second for the pool\r\n     */\r\n    function getRewardPerSecond(address _tokenAddress) external view onlyAuthorizedToken(_tokenAddress) returns (uint) {\r\n\r\n        return liquidityPoolData[_tokenAddress].rewardPerSecond;\r\n    }\r\n}",
  "sourcePath": "/home/sylvain/DeFi-Liquidity-Pool/contracts/DeFiProtocol.sol",
  "ast": {
    "absolutePath": "project:/contracts/DeFiProtocol.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        45
      ],
      "Context": [
        861
      ],
      "DeFiProtocol": [
        1420
      ],
      "IERC20": [
        814
      ],
      "Ownable": [
        150
      ]
    },
    "id": 1421,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 863,
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:6"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 864,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1421,
        "sourceUnit": 151,
        "src": "66:52:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 865,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1421,
        "sourceUnit": 815,
        "src": "120:56:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 866,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1421,
        "sourceUnit": 46,
        "src": "178:76:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 868,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 150,
              "src": "482:7:6"
            },
            "id": 869,
            "nodeType": "InheritanceSpecifier",
            "src": "482:7:6"
          }
        ],
        "canonicalName": "DeFiProtocol",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 867,
          "nodeType": "StructuredDocumentation",
          "src": "258:197:6",
          "text": " @title Hello World DeFi Protocol\n @author The Hello World Team\n @notice This contract offer the possibility to stake ERC20 in Liquidity Pools to receive Hello World Token rewards"
        },
        "fullyImplemented": true,
        "id": 1420,
        "linearizedBaseContracts": [
          1420,
          150,
          861
        ],
        "name": "DeFiProtocol",
        "nameLocation": "466:12:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "DeFiProtocol.StakerData",
            "id": 876,
            "members": [
              {
                "constant": false,
                "id": 871,
                "mutability": "mutable",
                "name": "stakedAmount",
                "nameLocation": "665:12:6",
                "nodeType": "VariableDeclaration",
                "scope": 876,
                "src": "657:20:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 870,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "657:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 873,
                "mutability": "mutable",
                "name": "updateTimestamp",
                "nameLocation": "697:15:6",
                "nodeType": "VariableDeclaration",
                "scope": 876,
                "src": "689:23:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 872,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "689:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 875,
                "mutability": "mutable",
                "name": "reward",
                "nameLocation": "731:6:6",
                "nodeType": "VariableDeclaration",
                "scope": 876,
                "src": "723:14:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 874,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "723:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "StakerData",
            "nameLocation": "635:10:6",
            "nodeType": "StructDefinition",
            "scope": 1420,
            "src": "628:117:6",
            "visibility": "public"
          },
          {
            "canonicalName": "DeFiProtocol.LiquidityPoolData",
            "id": 890,
            "members": [
              {
                "constant": false,
                "id": 878,
                "mutability": "mutable",
                "name": "isCreated",
                "nameLocation": "935:9:6",
                "nodeType": "VariableDeclaration",
                "scope": 890,
                "src": "930:14:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 877,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "930:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 880,
                "mutability": "mutable",
                "name": "rewardPerSecond",
                "nameLocation": "960:15:6",
                "nodeType": "VariableDeclaration",
                "scope": 890,
                "src": "955:20:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 879,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "955:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 882,
                "mutability": "mutable",
                "name": "oracleAggregatorAddress",
                "nameLocation": "994:23:6",
                "nodeType": "VariableDeclaration",
                "scope": 890,
                "src": "986:31:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 881,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "986:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 884,
                "mutability": "mutable",
                "name": "totalValueLocked",
                "nameLocation": "1033:16:6",
                "nodeType": "VariableDeclaration",
                "scope": 890,
                "src": "1028:21:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 883,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1028:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 889,
                "mutability": "mutable",
                "name": "stakerData",
                "nameLocation": "1091:10:6",
                "nodeType": "VariableDeclaration",
                "scope": 890,
                "src": "1060:41:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerData_$876_storage_$",
                  "typeString": "mapping(address => struct DeFiProtocol.StakerData)"
                },
                "typeName": {
                  "id": 888,
                  "keyType": {
                    "id": 885,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1068:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1060:30:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerData_$876_storage_$",
                    "typeString": "mapping(address => struct DeFiProtocol.StakerData)"
                  },
                  "valueType": {
                    "id": 887,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 886,
                      "name": "StakerData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 876,
                      "src": "1079:10:6"
                    },
                    "referencedDeclaration": 876,
                    "src": "1079:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakerData_$876_storage_ptr",
                      "typeString": "struct DeFiProtocol.StakerData"
                    }
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "LiquidityPoolData",
            "nameLocation": "901:17:6",
            "nodeType": "StructDefinition",
            "scope": 1420,
            "src": "894:215:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 891,
              "nodeType": "StructuredDocumentation",
              "src": "1169:85:6",
              "text": " @notice This mapping store liquidity pool data per token address"
            },
            "id": 896,
            "mutability": "mutable",
            "name": "liquidityPoolData",
            "nameLocation": "1298:17:6",
            "nodeType": "VariableDeclaration",
            "scope": 1420,
            "src": "1260:55:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidityPoolData_$890_storage_$",
              "typeString": "mapping(address => struct DeFiProtocol.LiquidityPoolData)"
            },
            "typeName": {
              "id": 895,
              "keyType": {
                "id": 892,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1268:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1260:37:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidityPoolData_$890_storage_$",
                "typeString": "mapping(address => struct DeFiProtocol.LiquidityPoolData)"
              },
              "valueType": {
                "id": 894,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 893,
                  "name": "LiquidityPoolData",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 890,
                  "src": "1279:17:6"
                },
                "referencedDeclaration": 890,
                "src": "1279:17:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_LiquidityPoolData_$890_storage_ptr",
                  "typeString": "struct DeFiProtocol.LiquidityPoolData"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 897,
              "nodeType": "StructuredDocumentation",
              "src": "1324:170:6",
              "text": " @notice Token multiplier to give a price on the Hwt token\n @dev As our Hwt token don't have any value on the market, we use a basic multiplier"
            },
            "functionSelector": "7cd9e6aa",
            "id": 900,
            "mutability": "mutable",
            "name": "hwtTokenUsdValue",
            "nameLocation": "1512:16:6",
            "nodeType": "VariableDeclaration",
            "scope": 1420,
            "src": "1500:49:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 898,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1500:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "393331353030303030303030303030303030",
              "id": 899,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1531:18:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_931500000000000000_by_1",
                "typeString": "int_const 931500000000000000"
              },
              "value": "931500000000000000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 901,
              "nodeType": "StructuredDocumentation",
              "src": "1558:170:6",
              "text": " @notice Token multiplier to give a price on the Flp token\n @dev As our Flp token don't have any value on the market, we use a basic multiplier"
            },
            "functionSelector": "8fd82e1b",
            "id": 904,
            "mutability": "mutable",
            "name": "flpTokenUsdValue",
            "nameLocation": "1746:16:6",
            "nodeType": "VariableDeclaration",
            "scope": 1420,
            "src": "1734:50:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 902,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1734:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "34393332313030303030303030303030303030",
              "id": 903,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1765:19:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_4932100000000000000_by_1",
                "typeString": "int_const 4932100000000000000"
              },
              "value": "4932100000000000000"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 918,
              "nodeType": "Block",
              "src": "1990:143:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 910,
                            "name": "liquidityPoolData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 896,
                            "src": "2009:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidityPoolData_$890_storage_$",
                              "typeString": "mapping(address => struct DeFiProtocol.LiquidityPoolData storage ref)"
                            }
                          },
                          "id": 912,
                          "indexExpression": {
                            "id": 911,
                            "name": "_tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 907,
                            "src": "2027:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2009:32:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LiquidityPoolData_$890_storage",
                            "typeString": "struct DeFiProtocol.LiquidityPoolData storage ref"
                          }
                        },
                        "id": 913,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isCreated",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 878,
                        "src": "2009:42:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920417574686f72697a656420746f6b656e20616464726573732063616e206265207573656420666f72207468697320616374696f6e",
                        "id": 914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2053:59:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a194696f04688286da56f78d8937d221aac74d579f9aa2107bb36cea4db90452",
                          "typeString": "literal_string \"Only Authorized token address can be used for this action\""
                        },
                        "value": "Only Authorized token address can be used for this action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a194696f04688286da56f78d8937d221aac74d579f9aa2107bb36cea4db90452",
                          "typeString": "literal_string \"Only Authorized token address can be used for this action\""
                        }
                      ],
                      "id": 909,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2001:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2001:112:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 916,
                  "nodeType": "ExpressionStatement",
                  "src": "2001:112:6"
                },
                {
                  "id": 917,
                  "nodeType": "PlaceholderStatement",
                  "src": "2124:1:6"
                }
              ]
            },
            "documentation": {
              "id": 905,
              "nodeType": "StructuredDocumentation",
              "src": "1844:88:6",
              "text": " @notice Modifier that allow only authorizedToken for liquidity pool"
            },
            "id": 919,
            "name": "onlyAuthorizedToken",
            "nameLocation": "1947:19:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 908,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 907,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "1975:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 919,
                  "src": "1967:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 906,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1967:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1966:23:6"
            },
            "src": "1938:195:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 932,
              "nodeType": "Block",
              "src": "2299:92:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 925,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 922,
                          "src": "2318:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2328:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2318:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920616d6f756e742061626f7665207a65726f2061726520617574686f72697a6564",
                        "id": 928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2331:39:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39",
                          "typeString": "literal_string \"Only amount above zero are authorized\""
                        },
                        "value": "Only amount above zero are authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39",
                          "typeString": "literal_string \"Only amount above zero are authorized\""
                        }
                      ],
                      "id": 924,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2310:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2310:61:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 930,
                  "nodeType": "ExpressionStatement",
                  "src": "2310:61:6"
                },
                {
                  "id": 931,
                  "nodeType": "PlaceholderStatement",
                  "src": "2382:1:6"
                }
              ]
            },
            "documentation": {
              "id": 920,
              "nodeType": "StructuredDocumentation",
              "src": "2141:103:6",
              "text": " @notice Modifier that allow only amount greater than zero to be staked or unstaked"
            },
            "id": 933,
            "name": "onlyAmountGreaterThanZero",
            "nameLocation": "2259:25:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 923,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 922,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2290:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 933,
                  "src": "2285:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 921,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2285:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2284:14:6"
            },
            "src": "2250:141:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 934,
              "nodeType": "StructuredDocumentation",
              "src": "2447:245:6",
              "text": " @notice Event informing the staked amount was updated\n @param sender The address that staked in the pool\n @param tokenAddress The liquidity pool token\n @param stakedAmount The amount that has been staked"
            },
            "eventSelector": "77ebbd26b0a6a22912eb21e90e3f366a25f7781d0d84076fb1bec335d226445a",
            "id": 942,
            "name": "StakedAmountUpdated",
            "nameLocation": "2704:19:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 941,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 936,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2733:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 942,
                  "src": "2725:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 935,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2725:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 938,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "2749:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 942,
                  "src": "2741:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 937,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2741:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 940,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "stakedAmount",
                  "nameLocation": "2768:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 942,
                  "src": "2763:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 939,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2763:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2724:57:6"
            },
            "src": "2698:84:6"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 943,
              "nodeType": "StructuredDocumentation",
              "src": "2790:240:6",
              "text": " @notice Event informing a reward was send\n @param sender The address that claim the reward\n @param tokenAddress The liquidity pool token\n @param rewardClaimedAmount The amount that has been offered"
            },
            "eventSelector": "35f857183a2efa264d1fc146dc0da7d7a01231dad386041857fb52b374481462",
            "id": 951,
            "name": "RewardOffered",
            "nameLocation": "3042:13:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 945,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "3065:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 951,
                  "src": "3057:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 944,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3057:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 947,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "3081:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 951,
                  "src": "3073:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 946,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3073:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 949,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rewardClaimedAmount",
                  "nameLocation": "3100:19:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 951,
                  "src": "3095:24:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 948,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3095:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3056:64:6"
            },
            "src": "3036:85:6"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 952,
              "nodeType": "StructuredDocumentation",
              "src": "3129:192:6",
              "text": " @notice Event informing a new liquidity pool is created\n @param tokenAddress The address of the pool token\n @param rewardPerSecond The reward rate per second"
            },
            "eventSelector": "641e49906554552c8c33d7e09e02d1270590f405bc1da0c7b99a9c2808abdd05",
            "id": 958,
            "name": "PoolCreated",
            "nameLocation": "3333:11:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 954,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "3354:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "3346:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 953,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3346:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 956,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rewardPerSecond",
                  "nameLocation": "3373:15:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "3368:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 955,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3368:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3345:44:6"
            },
            "src": "3327:63:6"
          },
          {
            "body": {
              "id": 1005,
              "nodeType": "Block",
              "src": "3884:399:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3903:43:6",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 971,
                              "name": "liquidityPoolData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 896,
                              "src": "3904:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidityPoolData_$890_storage_$",
                                "typeString": "mapping(address => struct DeFiProtocol.LiquidityPoolData storage ref)"
                              }
                            },
                            "id": 973,
                            "indexExpression": {
                              "id": 972,
                              "name": "_tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 961,
                              "src": "3922:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3904:32:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LiquidityPoolData_$890_storage",
                              "typeString": "struct DeFiProtocol.LiquidityPoolData storage ref"
                            }
                          },
                          "id": 974,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isCreated",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 878,
                          "src": "3904:42:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320706f6f6c20697320616c72656164792063726561746564",
                        "id": 976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3948:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7bb1d43e663da0f86542a4dab0fd93ef18fc8b2b622fee6e6d42583eb142b0f2",
                          "typeString": "literal_string \"This pool is already created\""
                        },
                        "value": "This pool is already created"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7bb1d43e663da0f86542a4dab0fd93ef18fc8b2b622fee6e6d42583eb142b0f2",
                          "typeString": "literal_string \"This pool is already created\""
                        }
                      ],
                      "id": 970,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3895:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3895:84:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 978,
                  "nodeType": "ExpressionStatement",
                  "src": "3895:84:6"
                },
                {
                  "expression": {
                    "id": 984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 979,
                          "name": "liquidityPoolData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 896,
                          "src": "3992:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidityPoolData_$890_storage_$",
                            "typeString": "mapping(address => struct DeFiProtocol.LiquidityPoolData storage ref)"
                          }
                        },
                        "id": 981,
                        "indexExpression": {
                          "id": 980,
                          "name": "_tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 961,
                          "src": "4010:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3992:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidityPoolData_$890_storage",
                          "typeString": "struct DeFiProtocol.LiquidityPoolData storage ref"
                        }
                      },
                      "id": 982,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardPerSecond",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 880,
                      "src": "3992:48:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 983,
                      "name": "_rewardPerSecond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 965,
                      "src": "4043:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3992:67:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 985,
                  "nodeType": "ExpressionStatement",
                  "src": "3992:67:6"
                },
                {
                  "expression": {
                    "id": 991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 986,
                          "name": "liquidityPoolData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 896,
                          "src": "4070:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidityPoolData_$890_storage_$",
                            "typeString": "mapping(address => struct DeFiProtocol.LiquidityPoolData storage ref)"
                          }
                        },
                        "id": 988,
                        "indexExpression": {
                          "id": 987,
                          "name": "_tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 961,
                          "src": "4088:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4070:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidityPoolData_$890_storage",
                          "typeString": "struct DeFiProtocol.LiquidityPoolData storage ref"
                        }
                      },
                      "id": 989,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "oracleAggregatorAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 882,
                      "src": "4070:56:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 990,
                      "name": "_oracleAggregatorAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 963,
                      "src": "4129:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4070:83:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 992,
                  "nodeType": "ExpressionStatement",
                  "src": "4070:83:6"
                },
                {
                  "expression": {
                    "id": 998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 993,
                          "name": "liquidityPoolData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 896,
                          "src": "4164:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidityPoolData_$890_storage_$",
                            "typeString": "mapping(address => struct DeFiProtocol.LiquidityPoolData storage ref)"
                          }
                        },
                        "id": 995,
                        "indexExpression": {
                          "id": 994,
                          "name": "_tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 961,
                          "src": "4182:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4164:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidityPoolData_$890_storage",
                          "typeString": "struct DeFiProtocol.LiquidityPoolData storage ref"
                        }
                      },
                      "id": 996,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isCreated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 878,
                      "src": "4164:42:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4209:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4164:49:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 999,
                  "nodeType": "ExpressionStatement",
                  "src": "4164:49:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1001,
                        "name": "_tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 961,
                        "src": "4243:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1002,
                        "name": "_rewardPerSecond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 965,
                        "src": "4258:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1000,
                      "name": "PoolCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 958,
                      "src": "4231:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4231:44:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1004,
                  "nodeType": "EmitStatement",
                  "src": "4226:49:6"
                }
              ]
            },
            "documentation": {
              "id": 959,
              "nodeType": "StructuredDocumentation",
              "src": "3447:303:6",
              "text": " @notice Create a new pool with an erc20 token\n @param _tokenAddress the erc20 token address\n @param _oracleAggregatorAddress The oracle aggregator address that will permit to get the token price in USD\n @param _rewardPerSecond The win rate of the liquidity pool"
            },
            "functionSelector": "78278e14",
            "id": 1006,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 968,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 967,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 92,
                  "src": "3874:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "3874:9:6"
              }
            ],
            "name": "createLiquidityPool",
            "nameLocation": "3765:19:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 961,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "3793:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1006,
                  "src": "3785:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 960,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3785:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 963,
                  "mutability": "mutable",
                  "name": "_oracleAggregatorAddress",
                  "nameLocation": "3816:24:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1006,
                  "src": "3808:32:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 962,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3808:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 965,
                  "mutability": "mutable",
                  "name": "_rewardPerSecond",
                  "nameLocation": "3847:16:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1006,
                  "src": "3842:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 964,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3842:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3784:80:6"
            },
            "returnParameters": {
              "id": 969,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3884:0:6"
            },
            "scope": 1420,
            "src": "3756:527:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1098,
              "nodeType": "Block",
              "src": "4743:995:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1024,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4799:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4799:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1028,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4819:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DeFiProtocol_$1420",
                              "typeString": "contract DeFiProtocol"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DeFiProtocol_$1420",
                              "typeString": "contract DeFiProtocol"
                            }
                          ],
                          "id": 1027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4811:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1026,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4811:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4811:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1030,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1011,
                        "src": "4826:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1021,
                            "name": "_tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1009,
                            "src": "4771:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1020,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 814,
                          "src": "4764:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$814_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4764:21:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$814",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 813,
                      "src": "4764:34:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4764:70:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1032,
                  "nodeType": "ExpressionStatement",
                  "src": "4764:70:6"
                },
                {
                  "assignments": [
                    1035
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1035,
                      "mutability": "mutable",
                      "name": "poolData",
                      "nameLocation": "4913:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1098,
                      "src": "4887:34:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityPoolData_$890_storage_ptr",
                        "typeString": "struct DeFiProtocol.LiquidityPoolData"
                      },
                      "typeName": {
                        "id": 1034,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1033,
                          "name": "LiquidityPoolData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 890,
                          "src": "4887:17:6"
                        },
                        "referencedDeclaration": 890,
                        "src": "4887:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidityPoolData_$890_storage_ptr",
                          "typeString": "struct DeFiProtocol.LiquidityPoolData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1039,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1036,
                      "name": "liquidityPoolData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 896,
                      "src": "4924:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidityPoolData_$890_storage_$",
                        "typeString": "mapping(address => struct DeFiProtocol.LiquidityPoolData storage ref)"
                      }
                    },
                    "id": 1038,
                    "indexExpression": {
                      "id": 1037,
                      "name": "_tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1009,
                      "src": "4942:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4924:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LiquidityPoolData_$890_storage",
                      "typeString": "struct DeFiProtocol.LiquidityPoolData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4887:69:6"
                },
                {
                  "assignments": [
                    1042
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1042,
                      "mutability": "mutable",
                      "name": "stakerData",
                      "nameLocation": "5018:10:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1098,
                      "src": "4999:29:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakerData_$876_storage_ptr",
                        "typeString": "struct DeFiProtocol.StakerData"
                      },
                      "typeName": {
                        "id": 1041,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1040,
                          "name": "StakerData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 876,
                          "src": "4999:10:6"
                        },
                        "referencedDeclaration": 876,
                        "src": "4999:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakerData_$876_storage_ptr",
                          "typeString": "struct DeFiProtocol.StakerData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1048,
                  "initialValue": {
                    "baseExpression": {
                      "expression": {
                        "id": 1043,
                        "name": "poolData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1035,
                        "src": "5031:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidityPoolData_$890_storage_ptr",
                          "typeString": "struct DeFiProtocol.LiquidityPoolData storage pointer"
                        }
                      },
                      "id": 1044,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stakerData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 889,
                      "src": "5031:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerData_$876_storage_$",
                        "typeString": "mapping(address => struct DeFiProtocol.StakerData storage ref)"
                      }
                    },
                    "id": 1047,
                    "indexExpression": {
                      "expression": {
                        "id": 1045,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "5051:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5051:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5031:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakerData_$876_storage",
                      "typeString": "struct DeFiProtocol.StakerData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4999:63:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1049,
                        "name": "stakerData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1042,
                        "src": "5155:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakerData_$876_storage_ptr",
                          "typeString": "struct DeFiProtocol.StakerData storage pointer"
                        }
                      },
                      "id": 1050,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stakedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 871,
                      "src": "5155:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5181:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5155:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1064,
                  "nodeType": "IfStatement",
                  "src": "5152:130:6",
                  "trueBody": {
                    "id": 1063,
                    "nodeType": "Block",
                    "src": "5184:98:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 1061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1053,
                              "name": "stakerData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1042,
                              "src": "5199:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakerData_$876_storage_ptr",
                                "typeString": "struct DeFiProtocol.StakerData storage pointer"
                              }
                            },
                            "id": 1055,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "reward",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 875,
                            "src": "5199:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1057,
                                "name": "stakerData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1042,
                                "src": "5233:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StakerData_$876_storage_ptr",
                                  "typeString": "struct DeFiProtocol.StakerData storage pointer"
                                }
                              },
                              {
                                "expression": {
                                  "id": 1058,
                                  "name": "poolData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1035,
                                  "src": "5245:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_LiquidityPoolData_$890_storage_ptr",
                                    "typeString": "struct DeFiProtocol.LiquidityPoolData storage pointer"
                                  }
                                },
                                "id": 1059,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "rewardPerSecond",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 880,
                                "src": "5245:24:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_StakerData_$876_storage_ptr",
                                  "typeString": "struct DeFiProtocol.StakerData storage pointer"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1056,
                              "name": "computeReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1318,
                              "src": "5219:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_struct$_StakerData_$876_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (struct DeFiProtocol.StakerData memory,uint256) view returns (uint256)"
                              }
                            },
                            "id": 1060,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5219:51:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5199:71:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1062,
                        "nodeType": "ExpressionStatement",
                        "src": "5199:71:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1065,
                        "name": "stakerData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1042,
                        "src": "5400:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakerData_$876_storage_ptr",
                          "typeString": "struct DeFiProtocol.StakerData storage pointer"
                        }
                      },
                      "id": 1067,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "stakedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 871,
                      "src": "5400:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1068,
                          "name": "stakerData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1042,
                          "src": "5426:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakerData_$876_storage_ptr",
                            "typeString": "struct DeFiProtocol.StakerData storage pointer"
                          }
                        },
                        "id": 1069,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stakedAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 871,
                        "src": "5426:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 1070,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1011,
                        "src": "5452:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5426:33:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5400:59:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1073,
                  "nodeType": "ExpressionStatement",
                  "src": "5400:59:6"
                },
                {
                  "expression": {
                    "id": 1079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1074,
                        "name": "stakerData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1042,
                        "src": "5470:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakerData_$876_storage_ptr",
                          "typeString": "struct DeFiProtocol.StakerData storage pointer"
                        }
                      },
                      "id": 1076,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "updateTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 873,
                      "src": "5470:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1077,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "5499:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "5499:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5470:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1080,
                  "nodeType": "ExpressionStatement",
                  "src": "5470:44:6"
                },
                {
                  "expression": {
                    "id": 1088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1081,
                        "name": "poolData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1035,
                        "src": "5577:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidityPoolData_$890_storage_ptr",
                          "typeString": "struct DeFiProtocol.LiquidityPoolData storage pointer"
                        }
                      },
                      "id": 1083,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalValueLocked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 884,
                      "src": "5577:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1084,
                          "name": "poolData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1035,
                          "src": "5605:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LiquidityPoolData_$890_storage_ptr",
                            "typeString": "struct DeFiProtocol.LiquidityPoolData storage pointer"
                          }
                        },
                        "id": 1085,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalValueLocked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 884,
                        "src": "5605:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 1086,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1011,
                        "src": "5634:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5605:36:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5577:64:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1089,
                  "nodeType": "ExpressionStatement",
                  "src": "5577:64:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1091,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5679:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5679:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1093,
                        "name": "_tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1009,
                        "src": "5691:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1094,
                          "name": "stakerData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1042,
                          "src": "5706:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakerData_$876_storage_ptr",
                            "typeString": "struct DeFiProtocol.StakerData storage pointer"
                          }
                        },
                        "id": 1095,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stakedAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 871,
                        "src": "5706:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1090,
                      "name": "StakedAmountUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 942,
                      "src": "5659:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5659:71:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1097,
                  "nodeType": "EmitStatement",
                  "src": "5654:76:6"
                }
              ]
            },
            "documentation": {
              "id": 1007,
              "nodeType": "StructuredDocumentation",
              "src": "4291:307:6",
              "text": " @notice Stake token in the Liquidity pool\n @dev Refresh the stored amount in the address mapping storedValuePerAddress and refresh the TVL\n @param _tokenAddress The token address to stake in liquidity pool\n @param _amount Total amount to store in the liquidity pool"
            },
            "functionSelector": "adc9772e",
            "id": 1099,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1014,
                    "name": "_tokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1009,
                    "src": "4693:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1015,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1013,
                  "name": "onlyAuthorizedToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 919,
                  "src": "4673:19:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "4673:34:6"
              },
              {
                "arguments": [
                  {
                    "id": 1017,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1011,
                    "src": "4734:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1018,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1016,
                  "name": "onlyAmountGreaterThanZero",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 933,
                  "src": "4708:25:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "4708:34:6"
              }
            ],
            "name": "stake",
            "nameLocation": "4613:5:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1009,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "4627:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1099,
                  "src": "4619:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1008,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4619:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1011,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4647:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1099,
                  "src": "4642:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1010,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4642:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4618:37:6"
            },
            "returnParameters": {
              "id": 1019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4743:0:6"
            },
            "scope": 1420,
            "src": "4604:1134:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1189,
              "nodeType": "Block",
              "src": "6249:1140:6",
              "statements": [
                {
                  "assignments": [
                    1115
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1115,
                      "mutability": "mutable",
                      "name": "poolData",
                      "nameLocation": "6336:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1189,
                      "src": "6310:34:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityPoolData_$890_storage_ptr",
                        "typeString": "struct DeFiProtocol.LiquidityPoolData"
                      },
                      "typeName": {
                        "id": 1114,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1113,
                          "name": "LiquidityPoolData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 890,
                          "src": "6310:17:6"
                        },
                        "referencedDeclaration": 890,
                        "src": "6310:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidityPoolData_$890_storage_ptr",
                          "typeString": "struct DeFiProtocol.LiquidityPoolData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1119,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1116,
                      "name": "liquidityPoolData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 896,
                      "src": "6347:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidityPoolData_$890_storage_$",
                        "typeString": "mapping(address => struct DeFiProtocol.LiquidityPoolData storage ref)"
                      }
                    },
                    "id": 1118,
                    "indexExpression": {
                      "id": 1117,
                      "name": "_tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1102,
                      "src": "6365:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6347:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LiquidityPoolData_$890_storage",
                      "typeString": "struct DeFiProtocol.LiquidityPoolData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6310:69:6"
                },
                {
                  "assignments": [
                    1122
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1122,
                      "mutability": "mutable",
                      "name": "stakerData",
                      "nameLocation": "6443:10:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1189,
                      "src": "6424:29:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakerData_$876_storage_ptr",
                        "typeString": "struct DeFiProtocol.StakerData"
                      },
                      "typeName": {
                        "id": 1121,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1120,
                          "name": "StakerData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 876,
                          "src": "6424:10:6"
                        },
                        "referencedDeclaration": 876,
                        "src": "6424:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakerData_$876_storage_ptr",
                          "typeString": "struct DeFiProtocol.StakerData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1128,
                  "initialValue": {
                    "baseExpression": {
                      "expression": {
                        "id": 1123,
                        "name": "poolData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1115,
                        "src": "6456:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidityPoolData_$890_storage_ptr",
                          "typeString": "struct DeFiProtocol.LiquidityPoolData storage pointer"
                        }
                      },
                      "id": 1124,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stakerData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 889,
                      "src": "6456:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerData_$876_storage_$",
                        "typeString": "mapping(address => struct DeFiProtocol.StakerData storage ref)"
                      }
                    },
                    "id": 1127,
                    "indexExpression": {
                      "expression": {
                        "id": 1125,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "6476:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6476:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6456:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakerData_$876_storage",
                      "typeString": "struct DeFiProtocol.StakerData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6424:63:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1130,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1104,
                          "src": "6573:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 1131,
                            "name": "stakerData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1122,
                            "src": "6584:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakerData_$876_storage_ptr",
                              "typeString": "struct DeFiProtocol.StakerData storage pointer"
                            }
                          },
                          "id": 1132,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakedAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 871,
                          "src": "6584:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6573:34:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206469646e27742073746f726564207468697320616d6f756e7420696e2074686520706f6f6c",
                        "id": 1134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6609:43:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9",
                          "typeString": "literal_string \"You didn't stored this amount in the pool\""
                        },
                        "value": "You didn't stored this amount in the pool"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9",
                          "typeString": "literal_string \"You didn't stored this amount in the pool\""
                        }
                      ],
                      "id": 1129,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6565:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6565:88:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1136,
                  "nodeType": "ExpressionStatement",
                  "src": "6565:88:6"
                },
                {
                  "expression": {
                    "id": 1145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1137,
                        "name": "stakerData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1122,
                        "src": "6744:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakerData_$876_storage_ptr",
                          "typeString": "struct DeFiProtocol.StakerData storage pointer"
                        }
                      },
                      "id": 1139,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "reward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 875,
                      "src": "6744:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1141,
                          "name": "stakerData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1122,
                          "src": "6778:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakerData_$876_storage_ptr",
                            "typeString": "struct DeFiProtocol.StakerData storage pointer"
                          }
                        },
                        {
                          "expression": {
                            "id": 1142,
                            "name": "poolData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1115,
                            "src": "6790:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LiquidityPoolData_$890_storage_ptr",
                              "typeString": "struct DeFiProtocol.LiquidityPoolData storage pointer"
                            }
                          },
                          "id": 1143,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rewardPerSecond",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 880,
                          "src": "6790:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_StakerData_$876_storage_ptr",
                            "typeString": "struct DeFiProtocol.StakerData storage pointer"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1140,
                        "name": "computeReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1318,
                        "src": "6764:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_StakerData_$876_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (struct DeFiProtocol.StakerData memory,uint256) view returns (uint256)"
                        }
                      },
                      "id": 1144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6764:51:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6744:71:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1146,
                  "nodeType": "ExpressionStatement",
                  "src": "6744:71:6"
                },
                {
                  "expression": {
                    "id": 1154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1147,
                        "name": "stakerData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1122,
                        "src": "6934:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakerData_$876_storage_ptr",
                          "typeString": "struct DeFiProtocol.StakerData storage pointer"
                        }
                      },
                      "id": 1149,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "stakedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 871,
                      "src": "6934:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1150,
                          "name": "stakerData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1122,
                          "src": "6960:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakerData_$876_storage_ptr",
                            "typeString": "struct DeFiProtocol.StakerData storage pointer"
                          }
                        },
                        "id": 1151,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stakedAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 871,
                        "src": "6960:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 1152,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1104,
                        "src": "6986:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6960:33:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6934:59:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1155,
                  "nodeType": "ExpressionStatement",
                  "src": "6934:59:6"
                },
                {
                  "expression": {
                    "id": 1161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1156,
                        "name": "stakerData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1122,
                        "src": "7004:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakerData_$876_storage_ptr",
                          "typeString": "struct DeFiProtocol.StakerData storage pointer"
                        }
                      },
                      "id": 1158,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "updateTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 873,
                      "src": "7004:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1159,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "7033:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "7033:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7004:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1162,
                  "nodeType": "ExpressionStatement",
                  "src": "7004:44:6"
                },
                {
                  "expression": {
                    "id": 1170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1163,
                        "name": "poolData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1115,
                        "src": "7110:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidityPoolData_$890_storage_ptr",
                          "typeString": "struct DeFiProtocol.LiquidityPoolData storage pointer"
                        }
                      },
                      "id": 1165,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalValueLocked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 884,
                      "src": "7110:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1166,
                          "name": "poolData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1115,
                          "src": "7138:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LiquidityPoolData_$890_storage_ptr",
                            "typeString": "struct DeFiProtocol.LiquidityPoolData storage pointer"
                          }
                        },
                        "id": 1167,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalValueLocked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 884,
                        "src": "7138:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 1168,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1104,
                        "src": "7167:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7138:36:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7110:64:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1171,
                  "nodeType": "ExpressionStatement",
                  "src": "7110:64:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1176,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7264:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7264:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1178,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1104,
                        "src": "7276:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1173,
                            "name": "_tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1102,
                            "src": "7240:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1172,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 814,
                          "src": "7233:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$814_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7233:21:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$814",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 781,
                      "src": "7233:30:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7233:51:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1180,
                  "nodeType": "ExpressionStatement",
                  "src": "7233:51:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1182,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7330:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7330:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1184,
                        "name": "_tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1102,
                        "src": "7342:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1185,
                          "name": "stakerData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1122,
                          "src": "7357:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakerData_$876_storage_ptr",
                            "typeString": "struct DeFiProtocol.StakerData storage pointer"
                          }
                        },
                        "id": 1186,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stakedAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 871,
                        "src": "7357:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1181,
                      "name": "StakedAmountUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 942,
                      "src": "7310:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7310:71:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1188,
                  "nodeType": "EmitStatement",
                  "src": "7305:76:6"
                }
              ]
            },
            "documentation": {
              "id": 1100,
              "nodeType": "StructuredDocumentation",
              "src": "5746:353:6",
              "text": " @notice Unstake the tokens in the Liquidity pool, user can retrieve their tokens\n @dev Refresh the stored amount in the address mapping stakerDataPerAddress and refresh the TVL\n @param _tokenAddress The token address to unstake from liquidity pool\n @param _amount Total amount to unstake from the liquidity pool"
            },
            "functionSelector": "c2a672e0",
            "id": 1190,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1107,
                    "name": "_tokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1102,
                    "src": "6199:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1108,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1106,
                  "name": "onlyAuthorizedToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 919,
                  "src": "6179:19:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "6179:34:6"
              },
              {
                "arguments": [
                  {
                    "id": 1110,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1104,
                    "src": "6240:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1111,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1109,
                  "name": "onlyAmountGreaterThanZero",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 933,
                  "src": "6214:25:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "6214:34:6"
              }
            ],
            "name": "unstake",
            "nameLocation": "6114:7:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1102,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "6130:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "6122:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1101,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6122:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1104,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "6153:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "6145:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1103,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6145:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6121:40:6"
            },
            "returnParameters": {
              "id": 1112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6249:0:6"
            },
            "scope": 1420,
            "src": "6105:1284:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1211,
              "nodeType": "Block",
              "src": "7732:95:6",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1201,
                                "name": "liquidityPoolData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 896,
                                "src": "7750:17:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidityPoolData_$890_storage_$",
                                  "typeString": "mapping(address => struct DeFiProtocol.LiquidityPoolData storage ref)"
                                }
                              },
                              "id": 1203,
                              "indexExpression": {
                                "id": 1202,
                                "name": "_tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1193,
                                "src": "7768:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7750:32:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LiquidityPoolData_$890_storage",
                                "typeString": "struct DeFiProtocol.LiquidityPoolData storage ref"
                              }
                            },
                            "id": 1204,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "stakerData",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 889,
                            "src": "7750:43:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerData_$876_storage_$",
                              "typeString": "mapping(address => struct DeFiProtocol.StakerData storage ref)"
                            }
                          },
                          "id": 1207,
                          "indexExpression": {
                            "expression": {
                              "id": 1205,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "7794:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1206,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7794:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7750:55:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakerData_$876_storage",
                            "typeString": "struct DeFiProtocol.StakerData storage ref"
                          }
                        },
                        "id": 1208,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stakedAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 871,
                        "src": "7750:68:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1209,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7749:70:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1200,
                  "id": 1210,
                  "nodeType": "Return",
                  "src": "7743:76:6"
                }
              ]
            },
            "documentation": {
              "id": 1191,
              "nodeType": "StructuredDocumentation",
              "src": "7397:204:6",
              "text": " @notice Get the msg.sender token staked amount\n @param _tokenAddress The address of the token to check for staked amount\n @return stakedAmount token staked by msg.sender"
            },
            "functionSelector": "4da6a556",
            "id": 1212,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1196,
                    "name": "_tokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1193,
                    "src": "7689:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1197,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1195,
                  "name": "onlyAuthorizedToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 919,
                  "src": "7669:19:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "7669:34:6"
              }
            ],
            "name": "getStakedAmount",
            "nameLocation": "7616:15:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1193,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "7640:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1212,
                  "src": "7632:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1192,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7632:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7631:23:6"
            },
            "returnParameters": {
              "id": 1200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1199,
                  "mutability": "mutable",
                  "name": "stakedAmount",
                  "nameLocation": "7718:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1212,
                  "src": "7713:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1198,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7713:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7712:19:6"
            },
            "scope": 1420,
            "src": "7607:220:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1246,
              "nodeType": "Block",
              "src": "8171:500:6",
              "statements": [
                {
                  "assignments": [
                    1224
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1224,
                      "mutability": "mutable",
                      "name": "oracleAddress",
                      "nameLocation": "8228:13:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1246,
                      "src": "8220:21:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1223,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8220:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1229,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 1225,
                        "name": "liquidityPoolData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 896,
                        "src": "8244:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidityPoolData_$890_storage_$",
                          "typeString": "mapping(address => struct DeFiProtocol.LiquidityPoolData storage ref)"
                        }
                      },
                      "id": 1227,
                      "indexExpression": {
                        "id": 1226,
                        "name": "_tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1215,
                        "src": "8262:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8244:32:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityPoolData_$890_storage",
                        "typeString": "struct DeFiProtocol.LiquidityPoolData storage ref"
                      }
                    },
                    "id": 1228,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "oracleAggregatorAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 882,
                    "src": "8244:56:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8220:80:6"
                },
                {
                  "assignments": [
                    1232
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1232,
                      "mutability": "mutable",
                      "name": "priceFeed",
                      "nameLocation": "8333:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1246,
                      "src": "8311:31:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                        "typeString": "contract AggregatorV3Interface"
                      },
                      "typeName": {
                        "id": 1231,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1230,
                          "name": "AggregatorV3Interface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 45,
                          "src": "8311:21:6"
                        },
                        "referencedDeclaration": 45,
                        "src": "8311:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1236,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1234,
                        "name": "oracleAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1224,
                        "src": "8367:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1233,
                      "name": "AggregatorV3Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "8345:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
                        "typeString": "type(contract AggregatorV3Interface)"
                      }
                    },
                    "id": 1235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8345:36:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8311:70:6"
                },
                {
                  "assignments": [
                    null,
                    1238,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 1238,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "8470:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1246,
                      "src": "8466:9:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 1237,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "8466:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 1242,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1239,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1232,
                        "src": "8610:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 1240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "8610:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 1241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8610:27:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8416:221:6"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 1243,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1238,
                        "src": "8657:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "id": 1244,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "8656:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 1222,
                  "id": 1245,
                  "nodeType": "Return",
                  "src": "8650:13:6"
                }
              ]
            },
            "documentation": {
              "id": 1213,
              "nodeType": "StructuredDocumentation",
              "src": "7835:221:6",
              "text": " @notice Get the token price in USD\n @dev USD Price is retrieved thanks to Chainlink\n @param _tokenAddress The authorized token address to get price\n @return int price of the token"
            },
            "functionSelector": "d02641a0",
            "id": 1247,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1218,
                    "name": "_tokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1215,
                    "src": "8142:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1219,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1217,
                  "name": "onlyAuthorizedToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 919,
                  "src": "8122:19:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "8122:34:6"
              }
            ],
            "name": "getTokenPrice",
            "nameLocation": "8071:13:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1215,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "8093:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1247,
                  "src": "8085:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1214,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8085:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8084:23:6"
            },
            "returnParameters": {
              "id": 1222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1221,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1247,
                  "src": "8166:3:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1220,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "8166:3:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8165:5:6"
            },
            "scope": 1420,
            "src": "8062:609:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1273,
              "nodeType": "Block",
              "src": "9011:147:6",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1259,
                                  "name": "liquidityPoolData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 896,
                                  "src": "9043:17:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidityPoolData_$890_storage_$",
                                    "typeString": "mapping(address => struct DeFiProtocol.LiquidityPoolData storage ref)"
                                  }
                                },
                                "id": 1261,
                                "indexExpression": {
                                  "id": 1260,
                                  "name": "_tokenAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1250,
                                  "src": "9061:13:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9043:32:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_LiquidityPoolData_$890_storage",
                                  "typeString": "struct DeFiProtocol.LiquidityPoolData storage ref"
                                }
                              },
                              "id": 1262,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "stakerData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 889,
                              "src": "9043:43:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerData_$876_storage_$",
                                "typeString": "mapping(address => struct DeFiProtocol.StakerData storage ref)"
                              }
                            },
                            "id": 1265,
                            "indexExpression": {
                              "expression": {
                                "id": 1263,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "9087:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1264,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9087:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9043:55:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakerData_$876_storage",
                              "typeString": "struct DeFiProtocol.StakerData storage ref"
                            }
                          },
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 1266,
                                "name": "liquidityPoolData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 896,
                                "src": "9100:17:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidityPoolData_$890_storage_$",
                                  "typeString": "mapping(address => struct DeFiProtocol.LiquidityPoolData storage ref)"
                                }
                              },
                              "id": 1268,
                              "indexExpression": {
                                "id": 1267,
                                "name": "_tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1250,
                                "src": "9118:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9100:32:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LiquidityPoolData_$890_storage",
                                "typeString": "struct DeFiProtocol.LiquidityPoolData storage ref"
                              }
                            },
                            "id": 1269,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rewardPerSecond",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 880,
                            "src": "9100:48:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_StakerData_$876_storage",
                              "typeString": "struct DeFiProtocol.StakerData storage ref"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1258,
                          "name": "computeReward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1318,
                          "src": "9029:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_StakerData_$876_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (struct DeFiProtocol.StakerData memory,uint256) view returns (uint256)"
                          }
                        },
                        "id": 1270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9029:120:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1271,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "9028:122:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1257,
                  "id": 1272,
                  "nodeType": "Return",
                  "src": "9022:128:6"
                }
              ]
            },
            "documentation": {
              "id": 1248,
              "nodeType": "StructuredDocumentation",
              "src": "8679:207:6",
              "text": " @notice Get the reward for msg.sender\n @param _tokenAddress The token address to get liquidity pool reward of this token\n @return reward The reward computed by the contract"
            },
            "functionSelector": "44a040f5",
            "id": 1274,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1253,
                    "name": "_tokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1250,
                    "src": "8974:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1254,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1252,
                  "name": "onlyAuthorizedToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 919,
                  "src": "8954:19:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "8954:34:6"
              }
            ],
            "name": "getRewardAmount",
            "nameLocation": "8901:15:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1250,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "8925:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1274,
                  "src": "8917:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1249,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8917:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8916:23:6"
            },
            "returnParameters": {
              "id": 1257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1256,
                  "mutability": "mutable",
                  "name": "reward",
                  "nameLocation": "9003:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1274,
                  "src": "8998:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1255,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8998:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8997:13:6"
            },
            "scope": 1420,
            "src": "8892:266:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1317,
              "nodeType": "Block",
              "src": "9514:302:6",
              "statements": [
                {
                  "assignments": [
                    1286
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1286,
                      "mutability": "mutable",
                      "name": "reward",
                      "nameLocation": "9540:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1317,
                      "src": "9535:11:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1285,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9535:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1299,
                  "initialValue": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1291,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1287,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967292,
                                    "src": "9551:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1288,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "9551:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1289,
                                    "name": "_stakerData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1278,
                                    "src": "9569:11:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_StakerData_$876_memory_ptr",
                                      "typeString": "struct DeFiProtocol.StakerData memory"
                                    }
                                  },
                                  "id": 1290,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "updateTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 873,
                                  "src": "9569:27:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9551:45:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1292,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9550:47:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1293,
                            "name": "_rewardPerSecond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1280,
                            "src": "9600:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9550:66:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "expression": {
                            "id": 1295,
                            "name": "_stakerData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1278,
                            "src": "9619:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakerData_$876_memory_ptr",
                              "typeString": "struct DeFiProtocol.StakerData memory"
                            }
                          },
                          "id": 1296,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakedAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 871,
                          "src": "9619:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9550:93:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1298,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "9549:95:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9535:109:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1300,
                      "name": "reward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1286,
                      "src": "9660:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9669:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9660:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1315,
                    "nodeType": "Block",
                    "src": "9757:52:6",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1312,
                            "name": "_stakerData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1278,
                            "src": "9779:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakerData_$876_memory_ptr",
                              "typeString": "struct DeFiProtocol.StakerData memory"
                            }
                          },
                          "id": 1313,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reward",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 875,
                          "src": "9779:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1284,
                        "id": 1314,
                        "nodeType": "Return",
                        "src": "9772:25:6"
                      }
                    ]
                  },
                  "id": 1316,
                  "nodeType": "IfStatement",
                  "src": "9657:152:6",
                  "trueBody": {
                    "id": 1311,
                    "nodeType": "Block",
                    "src": "9672:70:6",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1303,
                              "name": "_stakerData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1278,
                              "src": "9694:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakerData_$876_memory_ptr",
                                "typeString": "struct DeFiProtocol.StakerData memory"
                              }
                            },
                            "id": 1304,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "reward",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 875,
                            "src": "9694:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1307,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1305,
                                  "name": "reward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1286,
                                  "src": "9716:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "31653138",
                                  "id": 1306,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9725:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "value": "1e18"
                                },
                                "src": "9716:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1308,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9715:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9694:36:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1284,
                        "id": 1310,
                        "nodeType": "Return",
                        "src": "9687:43:6"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1275,
              "nodeType": "StructuredDocumentation",
              "src": "9166:225:6",
              "text": " @notice Compute the reward depending on time and existant reward\n @dev Timestamp are in seconds\n @param _stakerData Data of the staker\n @return rewardAmount The computed reward amount"
            },
            "id": 1318,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "computeReward",
            "nameLocation": "9406:13:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1278,
                  "mutability": "mutable",
                  "name": "_stakerData",
                  "nameLocation": "9438:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1318,
                  "src": "9420:29:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakerData_$876_memory_ptr",
                    "typeString": "struct DeFiProtocol.StakerData"
                  },
                  "typeName": {
                    "id": 1277,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1276,
                      "name": "StakerData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 876,
                      "src": "9420:10:6"
                    },
                    "referencedDeclaration": 876,
                    "src": "9420:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakerData_$876_storage_ptr",
                      "typeString": "struct DeFiProtocol.StakerData"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1280,
                  "mutability": "mutable",
                  "name": "_rewardPerSecond",
                  "nameLocation": "9456:16:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1318,
                  "src": "9451:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1279,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9451:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9419:54:6"
            },
            "returnParameters": {
              "id": 1284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1283,
                  "mutability": "mutable",
                  "name": "rewardAmount",
                  "nameLocation": "9500:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1318,
                  "src": "9495:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1282,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9495:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9494:19:6"
            },
            "scope": 1420,
            "src": "9397:419:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1384,
              "nodeType": "Block",
              "src": "10058:657:6",
              "statements": [
                {
                  "assignments": [
                    1329
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1329,
                      "mutability": "mutable",
                      "name": "stakerData",
                      "nameLocation": "10122:10:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1384,
                      "src": "10103:29:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakerData_$876_storage_ptr",
                        "typeString": "struct DeFiProtocol.StakerData"
                      },
                      "typeName": {
                        "id": 1328,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1327,
                          "name": "StakerData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 876,
                          "src": "10103:10:6"
                        },
                        "referencedDeclaration": 876,
                        "src": "10103:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakerData_$876_storage_ptr",
                          "typeString": "struct DeFiProtocol.StakerData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1337,
                  "initialValue": {
                    "baseExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1330,
                          "name": "liquidityPoolData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 896,
                          "src": "10135:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidityPoolData_$890_storage_$",
                            "typeString": "mapping(address => struct DeFiProtocol.LiquidityPoolData storage ref)"
                          }
                        },
                        "id": 1332,
                        "indexExpression": {
                          "id": 1331,
                          "name": "_tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1321,
                          "src": "10153:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10135:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidityPoolData_$890_storage",
                          "typeString": "struct DeFiProtocol.LiquidityPoolData storage ref"
                        }
                      },
                      "id": 1333,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stakerData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 889,
                      "src": "10135:43:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerData_$876_storage_$",
                        "typeString": "mapping(address => struct DeFiProtocol.StakerData storage ref)"
                      }
                    },
                    "id": 1336,
                    "indexExpression": {
                      "expression": {
                        "id": 1334,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "10179:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "10179:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10135:55:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakerData_$876_storage",
                      "typeString": "struct DeFiProtocol.StakerData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10103:87:6"
                },
                {
                  "assignments": [
                    1339
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1339,
                      "mutability": "mutable",
                      "name": "reward",
                      "nameLocation": "10239:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1384,
                      "src": "10234:11:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1338,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10234:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1347,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1341,
                        "name": "stakerData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1329,
                        "src": "10262:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakerData_$876_storage_ptr",
                          "typeString": "struct DeFiProtocol.StakerData storage pointer"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1342,
                            "name": "liquidityPoolData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 896,
                            "src": "10274:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidityPoolData_$890_storage_$",
                              "typeString": "mapping(address => struct DeFiProtocol.LiquidityPoolData storage ref)"
                            }
                          },
                          "id": 1344,
                          "indexExpression": {
                            "id": 1343,
                            "name": "_tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1321,
                            "src": "10292:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10274:32:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LiquidityPoolData_$890_storage",
                            "typeString": "struct DeFiProtocol.LiquidityPoolData storage ref"
                          }
                        },
                        "id": 1345,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rewardPerSecond",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 880,
                        "src": "10274:48:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_StakerData_$876_storage_ptr",
                          "typeString": "struct DeFiProtocol.StakerData storage pointer"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1340,
                      "name": "computeReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1318,
                      "src": "10248:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_StakerData_$876_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (struct DeFiProtocol.StakerData memory,uint256) view returns (uint256)"
                      }
                    },
                    "id": 1346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10248:75:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10234:89:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1349,
                          "name": "reward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1339,
                          "src": "10344:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10353:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10344:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2072657761726420746f20636c61696d",
                        "id": 1352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10356:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655",
                          "typeString": "literal_string \"No reward to claim\""
                        },
                        "value": "No reward to claim"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655",
                          "typeString": "literal_string \"No reward to claim\""
                        }
                      ],
                      "id": 1348,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10336:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10336:41:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1354,
                  "nodeType": "ExpressionStatement",
                  "src": "10336:41:6"
                },
                {
                  "expression": {
                    "id": 1360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1355,
                        "name": "stakerData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1329,
                        "src": "10453:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakerData_$876_storage_ptr",
                          "typeString": "struct DeFiProtocol.StakerData storage pointer"
                        }
                      },
                      "id": 1357,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "updateTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 873,
                      "src": "10453:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1358,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "10482:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "10482:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10453:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1361,
                  "nodeType": "ExpressionStatement",
                  "src": "10453:44:6"
                },
                {
                  "expression": {
                    "id": 1366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1362,
                        "name": "stakerData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1329,
                        "src": "10508:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakerData_$876_storage_ptr",
                          "typeString": "struct DeFiProtocol.StakerData storage pointer"
                        }
                      },
                      "id": 1364,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "reward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 875,
                      "src": "10508:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10528:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10508:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1367,
                  "nodeType": "ExpressionStatement",
                  "src": "10508:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1372,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10622:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10622:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1374,
                        "name": "reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1339,
                        "src": "10634:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1369,
                            "name": "_tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1321,
                            "src": "10598:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1368,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 814,
                          "src": "10591:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$814_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10591:21:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$814",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 781,
                      "src": "10591:30:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10591:50:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1376,
                  "nodeType": "ExpressionStatement",
                  "src": "10591:50:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1378,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10673:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10673:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1380,
                        "name": "_tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1321,
                        "src": "10685:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1381,
                        "name": "reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1339,
                        "src": "10700:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1377,
                      "name": "RewardOffered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 951,
                      "src": "10659:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10659:48:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1383,
                  "nodeType": "EmitStatement",
                  "src": "10654:53:6"
                }
              ]
            },
            "documentation": {
              "id": 1319,
              "nodeType": "StructuredDocumentation",
              "src": "9824:140:6",
              "text": " @notice Send then reward to the msg.sender\n @param _tokenAddress The token address to claim reward from the pool"
            },
            "functionSelector": "d279c191",
            "id": 1385,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1324,
                    "name": "_tokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1321,
                    "src": "10043:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1325,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1323,
                  "name": "onlyAuthorizedToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 919,
                  "src": "10023:19:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "10023:34:6"
              }
            ],
            "name": "claimReward",
            "nameLocation": "9979:11:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1321,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "9999:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1385,
                  "src": "9991:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9991:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9990:23:6"
            },
            "returnParameters": {
              "id": 1326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10058:0:6"
            },
            "scope": 1420,
            "src": "9970:745:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1401,
              "nodeType": "Block",
              "src": "11031:77:6",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 1396,
                        "name": "liquidityPoolData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 896,
                        "src": "11051:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidityPoolData_$890_storage_$",
                          "typeString": "mapping(address => struct DeFiProtocol.LiquidityPoolData storage ref)"
                        }
                      },
                      "id": 1398,
                      "indexExpression": {
                        "id": 1397,
                        "name": "_tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1388,
                        "src": "11069:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11051:32:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityPoolData_$890_storage",
                        "typeString": "struct DeFiProtocol.LiquidityPoolData storage ref"
                      }
                    },
                    "id": 1399,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "totalValueLocked",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 884,
                    "src": "11051:49:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1395,
                  "id": 1400,
                  "nodeType": "Return",
                  "src": "11044:56:6"
                }
              ]
            },
            "documentation": {
              "id": 1386,
              "nodeType": "StructuredDocumentation",
              "src": "10723:186:6",
              "text": " @notice Get the total value Locked of a liquidity pool\n @param _tokenAddress The token address for the liquidity pool\n @return uint The TVL of the pool"
            },
            "functionSelector": "69dae6c6",
            "id": 1402,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1391,
                    "name": "_tokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1388,
                    "src": "11001:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1392,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1390,
                  "name": "onlyAuthorizedToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 919,
                  "src": "10981:19:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "10981:34:6"
              }
            ],
            "name": "getTotalValueLocked",
            "nameLocation": "10924:19:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1388,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "10952:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1402,
                  "src": "10944:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1387,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10944:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10943:23:6"
            },
            "returnParameters": {
              "id": 1395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1394,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1402,
                  "src": "11025:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1393,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11025:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11024:6:6"
            },
            "scope": 1420,
            "src": "10915:193:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1418,
              "nodeType": "Block",
              "src": "11422:76:6",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 1413,
                        "name": "liquidityPoolData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 896,
                        "src": "11442:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidityPoolData_$890_storage_$",
                          "typeString": "mapping(address => struct DeFiProtocol.LiquidityPoolData storage ref)"
                        }
                      },
                      "id": 1415,
                      "indexExpression": {
                        "id": 1414,
                        "name": "_tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1405,
                        "src": "11460:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11442:32:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityPoolData_$890_storage",
                        "typeString": "struct DeFiProtocol.LiquidityPoolData storage ref"
                      }
                    },
                    "id": 1416,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "rewardPerSecond",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 880,
                    "src": "11442:48:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1412,
                  "id": 1417,
                  "nodeType": "Return",
                  "src": "11435:55:6"
                }
              ]
            },
            "documentation": {
              "id": 1403,
              "nodeType": "StructuredDocumentation",
              "src": "11116:185:6",
              "text": " @notice Get the reward rate per second\n @param _tokenAddress The token address for the liquidity pool\n @return uint The Reward per second for the pool"
            },
            "functionSelector": "d7357d34",
            "id": 1419,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1408,
                    "name": "_tokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1405,
                    "src": "11392:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1409,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1407,
                  "name": "onlyAuthorizedToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 919,
                  "src": "11372:19:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "11372:34:6"
              }
            ],
            "name": "getRewardPerSecond",
            "nameLocation": "11316:18:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1405,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "11343:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1419,
                  "src": "11335:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1404,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11335:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11334:23:6"
            },
            "returnParameters": {
              "id": 1412,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1411,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1419,
                  "src": "11416:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1410,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11416:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11415:6:6"
            },
            "scope": 1420,
            "src": "11307:191:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1421,
        "src": "457:11044:6",
        "usedErrors": []
      }
    ],
    "src": "39:11462:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {
    "42": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x35f857183a2efa264d1fc146dc0da7d7a01231dad386041857fb52b374481462": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "rewardClaimedAmount",
              "type": "uint256"
            }
          ],
          "name": "RewardOffered",
          "type": "event"
        },
        "0x77ebbd26b0a6a22912eb21e90e3f366a25f7781d0d84076fb1bec335d226445a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "stakedAmount",
              "type": "uint256"
            }
          ],
          "name": "StakedAmountUpdated",
          "type": "event"
        },
        "0xbdf196ae57b6e7ab1b9f8cc23008ea79648c7dbb7a25d8b705d1fdb8fac805ce": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "rewardPerSecond",
              "type": "uint256"
            }
          ],
          "name": "TokenAuthorized",
          "type": "event"
        },
        "0x641e49906554552c8c33d7e09e02d1270590f405bc1da0c7b99a9c2808abdd05": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "rewardPerSecond",
              "type": "uint256"
            }
          ],
          "name": "PoolCreated",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x9D7896e6140C610A4e3e1A22a3624Ae135068D78",
      "transactionHash": "0xdb7a3f8cd1437432080f9cfe11851cc776cf01e4e9fe60736f0263125503340a"
    },
    "1651956336293": {
      "events": {},
      "links": {},
      "address": "0x137C124e55348e487a0e0822Cc666F18996fc09B",
      "transactionHash": "0xc76f54f98daa687bffb99b27e9b83e5a23f19ef8ec01dbe1b504512a235b56c5"
    },
    "1651998282979": {
      "events": {},
      "links": {},
      "address": "0x9270b2329Ab0E3f83CCC70073E460f686a79219D",
      "transactionHash": "0xaed5320b863362a679ae551d6d06b71599eef9adabcb889a49931aa56b008133"
    },
    "1652022495239": {
      "events": {},
      "links": {},
      "address": "0x5F8884eE134709D8E9e17c2e1842381B41d478E3",
      "transactionHash": "0x49ff61957ef1afd64444ac0587cfb6b02a24a898f99893808d1c5e1279a0bc50"
    },
    "1652111751903": {
      "events": {
        "0xd8e1da2ea55fa9c4413c33f029c3f3fb5289e22eb1cab9d922ffb18f5d9a273e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "stakedAmount",
              "type": "uint256"
            }
          ],
          "name": "AmountStaked",
          "type": "event"
        },
        "0x2f8effe7ffe0e306b06e4755a1a92f6d3bc946de9c4f6a406dbc132c86eb36d4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "unstakedAmount",
              "type": "uint256"
            }
          ],
          "name": "AmountUnstaked",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x39a5d140e3e3a18613a91b12d365dc0c589797b664f414f85ff68161ac6fbbb6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "rewardClaimedAmount",
              "type": "uint256"
            }
          ],
          "name": "RewardOffered",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x36894F8f476597E8441923293a53b83a5594437e",
      "transactionHash": "0x03c9a7bd1d3d8982a76f6ec4bac4e6003bef3dbc892ad6458f7656ff19d3e17b"
    },
    "1652202321193": {
      "events": {},
      "links": {},
      "address": "0x87b30381C36acC6b45677c38DeF3ff72FfbDA596",
      "transactionHash": "0x9c95bee76059846a62015c9dbe88475439ff13b732ecfd9d87081a4ad246e0a5"
    },
    "1652203794972": {
      "events": {},
      "links": {},
      "address": "0xc850f957200a8547eb7F361b26c224e1d0619b49",
      "transactionHash": "0x69a9809345e60142e0b68b7f54a28c1d40597200a272d2ec762a1263e278d5ec"
    },
    "1652207077346": {
      "events": {},
      "links": {},
      "address": "0x2d174F9b8AE33c8F71861ee0131C7a711DEbD44E",
      "transactionHash": "0x134c823605a40e97157c02d106d1fe7050861e9afe677f8745f2ea3d215a29cd"
    },
    "1652283128589": {
      "events": {},
      "links": {},
      "address": "0xce9CBECf8Ee204aa3FE4CD0638A4906A2360Eb42",
      "transactionHash": "0x09e43a01fb4d7cb2bf76e16c103d20e65f2567420103a1d945d550048a92d409"
    },
    "1652288082358": {
      "events": {
        "0xd8e1da2ea55fa9c4413c33f029c3f3fb5289e22eb1cab9d922ffb18f5d9a273e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "stakedAmount",
              "type": "uint256"
            }
          ],
          "name": "AmountStaked",
          "type": "event"
        },
        "0x2f8effe7ffe0e306b06e4755a1a92f6d3bc946de9c4f6a406dbc132c86eb36d4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "unstakedAmount",
              "type": "uint256"
            }
          ],
          "name": "AmountUnstaked",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x39a5d140e3e3a18613a91b12d365dc0c589797b664f414f85ff68161ac6fbbb6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "rewardClaimedAmount",
              "type": "uint256"
            }
          ],
          "name": "RewardOffered",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xf93Ca36aA0F258f1817012D8fd19C3c16Eab6376",
      "transactionHash": "0xa386d93cd585d6c9f7f17c2a3e09a30f27e397999d5e38d3541d2edea2dacaac"
    },
    "1652343544623": {
      "events": {
        "0x3d38832b715af529dbcd52809af95a3d65307ee7464f4e451c3c468b49442df7": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "stakedAmount",
              "type": "uint256"
            }
          ],
          "name": "AmountStaked",
          "type": "event"
        },
        "0x3425a37fe438dba566444a6c4d5ac2d0e3c39e0e1685eed68b0bac0f8d45758b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "unstakedAmount",
              "type": "uint256"
            }
          ],
          "name": "AmountUnstaked",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xec02ca3930a27a7d88abbec47376889212e464616c7e4a441c4fdd727f15d59e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "rewardClaimedAmount",
              "type": "uint256"
            }
          ],
          "name": "RewardOffered",
          "type": "event"
        },
        "0xbdf196ae57b6e7ab1b9f8cc23008ea79648c7dbb7a25d8b705d1fdb8fac805ce": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "rewardPerSecond",
              "type": "uint256"
            }
          ],
          "name": "TokenAuthorized",
          "type": "event"
        },
        "0x3e79b9ddbf03ce1f5b0c0533095fa4dcdc1e7076d43ed6a3c83d069aed2525d6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "stakedAmount",
              "type": "uint256"
            }
          ],
          "name": "AmountStaked",
          "type": "event"
        },
        "0x784b29833e91847e3404cb1cc5916d4a528b06a4b9a7947e5f3c53d97d02e95e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "unstakedAmount",
              "type": "uint256"
            }
          ],
          "name": "AmountUnstaked",
          "type": "event"
        },
        "0x35f857183a2efa264d1fc146dc0da7d7a01231dad386041857fb52b374481462": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "rewardClaimedAmount",
              "type": "uint256"
            }
          ],
          "name": "RewardOffered",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x7BDC31B3c21719d4Dd3974b9F89D69639B38c84F",
      "transactionHash": "0x4b11222f860fcc824a9758c1a45995166faacbfcdaf0fdbc99590d1d170f6ab6"
    },
    "1652427143302": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x35f857183a2efa264d1fc146dc0da7d7a01231dad386041857fb52b374481462": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "rewardClaimedAmount",
              "type": "uint256"
            }
          ],
          "name": "RewardOffered",
          "type": "event"
        },
        "0x77ebbd26b0a6a22912eb21e90e3f366a25f7781d0d84076fb1bec335d226445a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "stakedAmount",
              "type": "uint256"
            }
          ],
          "name": "StakedAmountUpdated",
          "type": "event"
        },
        "0xbdf196ae57b6e7ab1b9f8cc23008ea79648c7dbb7a25d8b705d1fdb8fac805ce": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "rewardPerSecond",
              "type": "uint256"
            }
          ],
          "name": "TokenAuthorized",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x82bA497a016287394807dD50081e3665923e112e",
      "transactionHash": "0xf7fb4f646d47b8d8f4066a6bf8cf1913d0dc020f0906324e92593b6e9157e696"
    },
    "1652429526412": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x35f857183a2efa264d1fc146dc0da7d7a01231dad386041857fb52b374481462": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "rewardClaimedAmount",
              "type": "uint256"
            }
          ],
          "name": "RewardOffered",
          "type": "event"
        },
        "0x77ebbd26b0a6a22912eb21e90e3f366a25f7781d0d84076fb1bec335d226445a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "stakedAmount",
              "type": "uint256"
            }
          ],
          "name": "StakedAmountUpdated",
          "type": "event"
        },
        "0xbdf196ae57b6e7ab1b9f8cc23008ea79648c7dbb7a25d8b705d1fdb8fac805ce": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "rewardPerSecond",
              "type": "uint256"
            }
          ],
          "name": "TokenAuthorized",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xe14b401317fdB9c8104f26fC3e49254D1323A019",
      "transactionHash": "0xe47c99bce7c378e82cf9c52dac4ad241acad4a9eaff9b48669fb7c665a9024f5"
    },
    "1652461838564": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x35f857183a2efa264d1fc146dc0da7d7a01231dad386041857fb52b374481462": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "rewardClaimedAmount",
              "type": "uint256"
            }
          ],
          "name": "RewardOffered",
          "type": "event"
        },
        "0x77ebbd26b0a6a22912eb21e90e3f366a25f7781d0d84076fb1bec335d226445a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "stakedAmount",
              "type": "uint256"
            }
          ],
          "name": "StakedAmountUpdated",
          "type": "event"
        },
        "0xbdf196ae57b6e7ab1b9f8cc23008ea79648c7dbb7a25d8b705d1fdb8fac805ce": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "rewardPerSecond",
              "type": "uint256"
            }
          ],
          "name": "TokenAuthorized",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x0034fdabb30842B8A78FE40F706ac988A0D660CC",
      "transactionHash": "0xd2119cab31da8161231307b13854689fb38cf01d18fe2448344d5638de989efb"
    },
    "1652463661902": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x35f857183a2efa264d1fc146dc0da7d7a01231dad386041857fb52b374481462": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "rewardClaimedAmount",
              "type": "uint256"
            }
          ],
          "name": "RewardOffered",
          "type": "event"
        },
        "0x77ebbd26b0a6a22912eb21e90e3f366a25f7781d0d84076fb1bec335d226445a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "stakedAmount",
              "type": "uint256"
            }
          ],
          "name": "StakedAmountUpdated",
          "type": "event"
        },
        "0xbdf196ae57b6e7ab1b9f8cc23008ea79648c7dbb7a25d8b705d1fdb8fac805ce": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "rewardPerSecond",
              "type": "uint256"
            }
          ],
          "name": "TokenAuthorized",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xCAF369Cc5e715B9AdDe44BFd1D27e8cB210C9396",
      "transactionHash": "0xc75f38bdab00787dc63288010df244b3c97a1dd21aba541996722fe4c3f11305"
    },
    "1652528895468": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x641e49906554552c8c33d7e09e02d1270590f405bc1da0c7b99a9c2808abdd05": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "rewardPerSecond",
              "type": "uint256"
            }
          ],
          "name": "PoolCreated",
          "type": "event"
        },
        "0x35f857183a2efa264d1fc146dc0da7d7a01231dad386041857fb52b374481462": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "rewardClaimedAmount",
              "type": "uint256"
            }
          ],
          "name": "RewardOffered",
          "type": "event"
        },
        "0x77ebbd26b0a6a22912eb21e90e3f366a25f7781d0d84076fb1bec335d226445a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "stakedAmount",
              "type": "uint256"
            }
          ],
          "name": "StakedAmountUpdated",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xC155787D68421C5468272782A896771D040377DA",
      "transactionHash": "0x5afcdbf678414a1774192b42a3f05c1fba71accda6881f2848f02b712e7a5e44"
    }
  },
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-05-14T13:26:10.822Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "The Hello World Team",
    "events": {
      "PoolCreated(address,uint256)": {
        "params": {
          "rewardPerSecond": "The reward rate per second",
          "tokenAddress": "The address of the pool token"
        }
      },
      "RewardOffered(address,address,uint256)": {
        "params": {
          "rewardClaimedAmount": "The amount that has been offered",
          "sender": "The address that claim the reward",
          "tokenAddress": "The liquidity pool token"
        }
      },
      "StakedAmountUpdated(address,address,uint256)": {
        "params": {
          "sender": "The address that staked in the pool",
          "stakedAmount": "The amount that has been staked",
          "tokenAddress": "The liquidity pool token"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "claimReward(address)": {
        "params": {
          "_tokenAddress": "The token address to claim reward from the pool"
        }
      },
      "createLiquidityPool(address,address,uint256)": {
        "params": {
          "_oracleAggregatorAddress": "The oracle aggregator address that will permit to get the token price in USD",
          "_rewardPerSecond": "The win rate of the liquidity pool",
          "_tokenAddress": "the erc20 token address"
        }
      },
      "getRewardAmount(address)": {
        "params": {
          "_tokenAddress": "The token address to get liquidity pool reward of this token"
        },
        "returns": {
          "reward": "The reward computed by the contract"
        }
      },
      "getRewardPerSecond(address)": {
        "params": {
          "_tokenAddress": "The token address for the liquidity pool"
        },
        "returns": {
          "_0": "uint The Reward per second for the pool"
        }
      },
      "getStakedAmount(address)": {
        "params": {
          "_tokenAddress": "The address of the token to check for staked amount"
        },
        "returns": {
          "stakedAmount": "token staked by msg.sender"
        }
      },
      "getTokenPrice(address)": {
        "details": "USD Price is retrieved thanks to Chainlink",
        "params": {
          "_tokenAddress": "The authorized token address to get price"
        },
        "returns": {
          "_0": "int price of the token"
        }
      },
      "getTotalValueLocked(address)": {
        "params": {
          "_tokenAddress": "The token address for the liquidity pool"
        },
        "returns": {
          "_0": "uint The TVL of the pool"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "stake(address,uint256)": {
        "details": "Refresh the stored amount in the address mapping storedValuePerAddress and refresh the TVL",
        "params": {
          "_amount": "Total amount to store in the liquidity pool",
          "_tokenAddress": "The token address to stake in liquidity pool"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unstake(address,uint256)": {
        "details": "Refresh the stored amount in the address mapping stakerDataPerAddress and refresh the TVL",
        "params": {
          "_amount": "Total amount to unstake from the liquidity pool",
          "_tokenAddress": "The token address to unstake from liquidity pool"
        }
      }
    },
    "stateVariables": {
      "flpTokenUsdValue": {
        "details": "As our Flp token don't have any value on the market, we use a basic multiplier"
      },
      "hwtTokenUsdValue": {
        "details": "As our Hwt token don't have any value on the market, we use a basic multiplier"
      }
    },
    "title": "Hello World DeFi Protocol",
    "version": 1
  },
  "userdoc": {
    "events": {
      "PoolCreated(address,uint256)": {
        "notice": "Event informing a new liquidity pool is created"
      },
      "RewardOffered(address,address,uint256)": {
        "notice": "Event informing a reward was send"
      },
      "StakedAmountUpdated(address,address,uint256)": {
        "notice": "Event informing the staked amount was updated"
      }
    },
    "kind": "user",
    "methods": {
      "claimReward(address)": {
        "notice": "Send then reward to the msg.sender"
      },
      "createLiquidityPool(address,address,uint256)": {
        "notice": "Create a new pool with an erc20 token"
      },
      "flpTokenUsdValue()": {
        "notice": "Token multiplier to give a price on the Flp token"
      },
      "getRewardAmount(address)": {
        "notice": "Get the reward for msg.sender"
      },
      "getRewardPerSecond(address)": {
        "notice": "Get the reward rate per second"
      },
      "getStakedAmount(address)": {
        "notice": "Get the msg.sender token staked amount"
      },
      "getTokenPrice(address)": {
        "notice": "Get the token price in USD"
      },
      "getTotalValueLocked(address)": {
        "notice": "Get the total value Locked of a liquidity pool"
      },
      "hwtTokenUsdValue()": {
        "notice": "Token multiplier to give a price on the Hwt token"
      },
      "stake(address,uint256)": {
        "notice": "Stake token in the Liquidity pool"
      },
      "unstake(address,uint256)": {
        "notice": "Unstake the tokens in the Liquidity pool, user can retrieve their tokens"
      }
    },
    "notice": "This contract offer the possibility to stake ERC20 in Liquidity Pools to receive Hello World Token rewards",
    "version": 1
  }
}