{
  "contractName": "DeFiProtocol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "stakedAmount",
          "type": "uint256"
        }
      ],
      "name": "AmountStaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "unstakedAmount",
          "type": "uint256"
        }
      ],
      "name": "AmountUnstaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalValueLocked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "unstake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "getStakedAmountAndPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "total",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "price",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"}],\"name\":\"AmountStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakedAmount\",\"type\":\"uint256\"}],\"name\":\"AmountUnstaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getStakedAmountAndPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalValueLocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"The Hello World Team\",\"events\":{\"AmountStaked(address,uint256)\":{\"params\":{\"stakedAmount\":\"The amount that has been staked\",\"staker\":\"The address that staked\"}},\"AmountUnstaked(address,uint256)\":{\"params\":{\"staker\":\"The address that unstaked\",\"unstakedAmount\":\"The amount that has been unstaked\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_tokenAddress\":\"the smart contract address of the erc20 token\"}},\"getStakedAmountAndPrice()\":{\"details\":\"USD Price is retrieved thanks to Chainlink\",\"returns\":{\"price\":\"of the amount\",\"total\":\"token staked by msg.sender\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"stake(uint256)\":{\"details\":\"Refresh the stored amount in the address mapping storedValuePerAddress and refresh the TVL\",\"params\":{\"_amount\":\"Total amount to store in the liquidity pool\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unstake(uint256)\":{\"details\":\"Refresh the stored amount in the address mapping storedValuePerAddress and refresh the TVL\",\"params\":{\"_amount\":\"Total amount to unstake from the liquidity pool\"}}},\"stateVariables\":{\"customTokenMultiplier\":{\"details\":\"As our Hwt token don't have any value on the market, we use a basic multiplier\"},\"priceFeed\":{\"details\":\"Use Chainlink to retrieve the USD price of the token\"},\"token\":{\"details\":\"Initialized on the constructor\"},\"totalValueLocked\":{\"details\":\"The TVL is public because front may want to display it\"}},\"title\":\"Hello World DeFi Protocol\",\"version\":1},\"userdoc\":{\"events\":{\"AmountStaked(address,uint256)\":{\"notice\":\"Event informing an amount was staked in the Liquidity Pool\"},\"AmountUnstaked(address,uint256)\":{\"notice\":\"Event informing an amount was unstaked in the Liquidity Pool\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Create erc20 instance that will be used for the liquidity pool\"},\"getStakedAmountAndPrice()\":{\"notice\":\"Get the token staked amount and the price in USD\"},\"stake(uint256)\":{\"notice\":\"Stake token in the Liquidity pool\"},\"totalValueLocked()\":{\"notice\":\"The Total Value Locked(TVL) of the liquidity pool\"},\"unstake(uint256)\":{\"notice\":\"Unstake the tokens in the Liquidity pool, user can retrieve their tokens\"}},\"notice\":\"This contract offer the possibility to stake ERC20 in Liquidity Pools to receive Hello World Token rewards\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/DeFiProtocol.sol\":\"DeFiProtocol\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/DeFiProtocol.sol\":{\"keccak256\":\"0xd7eb18bf6ba8cf37767185985185242a7681f2653d5bb2603801c98f58af5aa7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://65bc95d073503ba87a56112db5d60a990f57a71830ade2c2eb7ee1f3a00648fa\",\"dweb:/ipfs/QmXVjKyghW8pVmzP1oBFybsVctemmUzchcyosa6Y8ZQZtu\"]}},\"version\":1}",
  "bytecode": "0x60806040526000600255670b1a2bc2ec500000600460146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055503480156200004757600080fd5b50604051620013783803806200137883398181016040528101906200006d919062000260565b6200008d620000816200012a60201b60201c565b6200013260201b60201c565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550739326bfa02add2366b30bacb125260af641031331600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000292565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200022882620001fb565b9050919050565b6200023a816200021b565b81146200024657600080fd5b50565b6000815190506200025a816200022f565b92915050565b600060208284031215620002795762000278620001f6565b5b6000620002898482850162000249565b91505092915050565b6110d680620002a26000396000f3fe6080604052600436106100705760003560e01c80638da5cb5b1161004e5780638da5cb5b146100d4578063a694fc3a146100ff578063ec18154e1461011b578063f2fde38b1461014657610070565b8063125c01e7146100755780632e17de78146100a1578063715018a6146100bd575b600080fd5b34801561008157600080fd5b5061008a61016f565b604051610098929190610950565b60405180910390f35b6100bb60048036038101906100b691906109aa565b610217565b005b3480156100c957600080fd5b506100d261045d565b005b3480156100e057600080fd5b506100e96104e5565b6040516100f69190610a18565b60405180910390f35b610119600480360381019061011491906109aa565b61050e565b005b34801561012757600080fd5b50610130610755565b60405161013d9190610a33565b60405180910390f35b34801561015257600080fd5b5061016d60048036038101906101689190610a7a565b61075b565b005b6000806000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156101e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102059190610b2a565b50505091505060008192509250509091565b806000811161025b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025290610c28565b60405180910390fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156102dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d490610cba565b60405180910390fd5b816002546102eb9190610d09565b60028190555081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461033c9190610d09565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016103dc929190610d3d565b6020604051808303816000875af11580156103fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041f9190610d9e565b507f3425a37fe438dba566444a6c4d5ac2d0e3c39e0e1685eed68b0bac0f8d45758b3383604051610451929190610d3d565b60405180910390a15050565b610465610852565b73ffffffffffffffffffffffffffffffffffffffff166104836104e5565b73ffffffffffffffffffffffffffffffffffffffff16146104d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d090610e17565b60405180910390fd5b6104e3600061085a565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b8060008111610552576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054990610c28565b60405180910390fd5b60008211610595576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058c90610ea9565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016105f493929190610ec9565b6020604051808303816000875af1158015610613573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106379190610d9e565b610676576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066d90610f98565b60405180910390fd5b816002546106849190610fb8565b60028190555081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106d59190610fb8565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f3d38832b715af529dbcd52809af95a3d65307ee7464f4e451c3c468b49442df73383604051610749929190610d3d565b60405180910390a15050565b60025481565b610763610852565b73ffffffffffffffffffffffffffffffffffffffff166107816104e5565b73ffffffffffffffffffffffffffffffffffffffff16146107d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ce90610e17565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610846576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083d90611080565b60405180910390fd5b61084f8161085a565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000819050919050565b6109318161091e565b82525050565b6000819050919050565b61094a81610937565b82525050565b60006040820190506109656000830185610928565b6109726020830184610941565b9392505050565b600080fd5b6109878161091e565b811461099257600080fd5b50565b6000813590506109a48161097e565b92915050565b6000602082840312156109c0576109bf610979565b5b60006109ce84828501610995565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a02826109d7565b9050919050565b610a12816109f7565b82525050565b6000602082019050610a2d6000830184610a09565b92915050565b6000602082019050610a486000830184610928565b92915050565b610a57816109f7565b8114610a6257600080fd5b50565b600081359050610a7481610a4e565b92915050565b600060208284031215610a9057610a8f610979565b5b6000610a9e84828501610a65565b91505092915050565b600069ffffffffffffffffffff82169050919050565b610ac681610aa7565b8114610ad157600080fd5b50565b600081519050610ae381610abd565b92915050565b610af281610937565b8114610afd57600080fd5b50565b600081519050610b0f81610ae9565b92915050565b600081519050610b248161097e565b92915050565b600080600080600060a08688031215610b4657610b45610979565b5b6000610b5488828901610ad4565b9550506020610b6588828901610b00565b9450506040610b7688828901610b15565b9350506060610b8788828901610b15565b9250506080610b9888828901610ad4565b9150509295509295909350565b600082825260208201905092915050565b7f4f6e6c7920616d6f756e742061626f7665207a65726f2061726520617574686f60008201527f72697a6564000000000000000000000000000000000000000000000000000000602082015250565b6000610c12602583610ba5565b9150610c1d82610bb6565b604082019050919050565b60006020820190508181036000830152610c4181610c05565b9050919050565b7f596f75206469646e27742073746f726564207468697320616d6f756e7420696e60008201527f2074686520706f6f6c0000000000000000000000000000000000000000000000602082015250565b6000610ca4602983610ba5565b9150610caf82610c48565b604082019050919050565b60006020820190508181036000830152610cd381610c97565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d148261091e565b9150610d1f8361091e565b925082821015610d3257610d31610cda565b5b828203905092915050565b6000604082019050610d526000830185610a09565b610d5f6020830184610928565b9392505050565b60008115159050919050565b610d7b81610d66565b8114610d8657600080fd5b50565b600081519050610d9881610d72565b92915050565b600060208284031215610db457610db3610979565b5b6000610dc284828501610d89565b91505092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610e01602083610ba5565b9150610e0c82610dcb565b602082019050919050565b60006020820190508181036000830152610e3081610df4565b9050919050565b7f596f752063616e206f6e6c7920696e7365727420612076616c7565206772656160008201527f746572207468616e203000000000000000000000000000000000000000000000602082015250565b6000610e93602a83610ba5565b9150610e9e82610e37565b604082019050919050565b60006020820190508181036000830152610ec281610e86565b9050919050565b6000606082019050610ede6000830186610a09565b610eeb6020830185610a09565b610ef86040830184610928565b949350505050565b7f596f75206d7573742068617665207468652062616c616e636520696e20796f7560008201527f722077616c6c657420616e6420617070726f7665207468697320636f6e74726160208201527f6374000000000000000000000000000000000000000000000000000000000000604082015250565b6000610f82604283610ba5565b9150610f8d82610f00565b606082019050919050565b60006020820190508181036000830152610fb181610f75565b9050919050565b6000610fc38261091e565b9150610fce8361091e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561100357611002610cda565b5b828201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061106a602683610ba5565b91506110758261100e565b604082019050919050565b600060208201905081810360008301526110998161105d565b905091905056fea264697066735822122005d7d14255fb0c2895d908c8168858c2e3265b965a6183348ad8acfdaa19f69564736f6c634300080d0033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c80638da5cb5b1161004e5780638da5cb5b146100d4578063a694fc3a146100ff578063ec18154e1461011b578063f2fde38b1461014657610070565b8063125c01e7146100755780632e17de78146100a1578063715018a6146100bd575b600080fd5b34801561008157600080fd5b5061008a61016f565b604051610098929190610950565b60405180910390f35b6100bb60048036038101906100b691906109aa565b610217565b005b3480156100c957600080fd5b506100d261045d565b005b3480156100e057600080fd5b506100e96104e5565b6040516100f69190610a18565b60405180910390f35b610119600480360381019061011491906109aa565b61050e565b005b34801561012757600080fd5b50610130610755565b60405161013d9190610a33565b60405180910390f35b34801561015257600080fd5b5061016d60048036038101906101689190610a7a565b61075b565b005b6000806000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156101e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102059190610b2a565b50505091505060008192509250509091565b806000811161025b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025290610c28565b60405180910390fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156102dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d490610cba565b60405180910390fd5b816002546102eb9190610d09565b60028190555081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461033c9190610d09565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016103dc929190610d3d565b6020604051808303816000875af11580156103fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041f9190610d9e565b507f3425a37fe438dba566444a6c4d5ac2d0e3c39e0e1685eed68b0bac0f8d45758b3383604051610451929190610d3d565b60405180910390a15050565b610465610852565b73ffffffffffffffffffffffffffffffffffffffff166104836104e5565b73ffffffffffffffffffffffffffffffffffffffff16146104d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d090610e17565b60405180910390fd5b6104e3600061085a565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b8060008111610552576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054990610c28565b60405180910390fd5b60008211610595576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058c90610ea9565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016105f493929190610ec9565b6020604051808303816000875af1158015610613573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106379190610d9e565b610676576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066d90610f98565b60405180910390fd5b816002546106849190610fb8565b60028190555081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106d59190610fb8565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f3d38832b715af529dbcd52809af95a3d65307ee7464f4e451c3c468b49442df73383604051610749929190610d3d565b60405180910390a15050565b60025481565b610763610852565b73ffffffffffffffffffffffffffffffffffffffff166107816104e5565b73ffffffffffffffffffffffffffffffffffffffff16146107d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ce90610e17565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610846576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083d90611080565b60405180910390fd5b61084f8161085a565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000819050919050565b6109318161091e565b82525050565b6000819050919050565b61094a81610937565b82525050565b60006040820190506109656000830185610928565b6109726020830184610941565b9392505050565b600080fd5b6109878161091e565b811461099257600080fd5b50565b6000813590506109a48161097e565b92915050565b6000602082840312156109c0576109bf610979565b5b60006109ce84828501610995565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a02826109d7565b9050919050565b610a12816109f7565b82525050565b6000602082019050610a2d6000830184610a09565b92915050565b6000602082019050610a486000830184610928565b92915050565b610a57816109f7565b8114610a6257600080fd5b50565b600081359050610a7481610a4e565b92915050565b600060208284031215610a9057610a8f610979565b5b6000610a9e84828501610a65565b91505092915050565b600069ffffffffffffffffffff82169050919050565b610ac681610aa7565b8114610ad157600080fd5b50565b600081519050610ae381610abd565b92915050565b610af281610937565b8114610afd57600080fd5b50565b600081519050610b0f81610ae9565b92915050565b600081519050610b248161097e565b92915050565b600080600080600060a08688031215610b4657610b45610979565b5b6000610b5488828901610ad4565b9550506020610b6588828901610b00565b9450506040610b7688828901610b15565b9350506060610b8788828901610b15565b9250506080610b9888828901610ad4565b9150509295509295909350565b600082825260208201905092915050565b7f4f6e6c7920616d6f756e742061626f7665207a65726f2061726520617574686f60008201527f72697a6564000000000000000000000000000000000000000000000000000000602082015250565b6000610c12602583610ba5565b9150610c1d82610bb6565b604082019050919050565b60006020820190508181036000830152610c4181610c05565b9050919050565b7f596f75206469646e27742073746f726564207468697320616d6f756e7420696e60008201527f2074686520706f6f6c0000000000000000000000000000000000000000000000602082015250565b6000610ca4602983610ba5565b9150610caf82610c48565b604082019050919050565b60006020820190508181036000830152610cd381610c97565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d148261091e565b9150610d1f8361091e565b925082821015610d3257610d31610cda565b5b828203905092915050565b6000604082019050610d526000830185610a09565b610d5f6020830184610928565b9392505050565b60008115159050919050565b610d7b81610d66565b8114610d8657600080fd5b50565b600081519050610d9881610d72565b92915050565b600060208284031215610db457610db3610979565b5b6000610dc284828501610d89565b91505092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610e01602083610ba5565b9150610e0c82610dcb565b602082019050919050565b60006020820190508181036000830152610e3081610df4565b9050919050565b7f596f752063616e206f6e6c7920696e7365727420612076616c7565206772656160008201527f746572207468616e203000000000000000000000000000000000000000000000602082015250565b6000610e93602a83610ba5565b9150610e9e82610e37565b604082019050919050565b60006020820190508181036000830152610ec281610e86565b9050919050565b6000606082019050610ede6000830186610a09565b610eeb6020830185610a09565b610ef86040830184610928565b949350505050565b7f596f75206d7573742068617665207468652062616c616e636520696e20796f7560008201527f722077616c6c657420616e6420617070726f7665207468697320636f6e74726160208201527f6374000000000000000000000000000000000000000000000000000000000000604082015250565b6000610f82604283610ba5565b9150610f8d82610f00565b606082019050919050565b60006020820190508181036000830152610fb181610f75565b9050919050565b6000610fc38261091e565b9150610fce8361091e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561100357611002610cda565b5b828201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061106a602683610ba5565b91506110758261100e565b604082019050919050565b600060208201905081810360008301526110998161105d565b905091905056fea264697066735822122005d7d14255fb0c2895d908c8168858c2e3265b965a6183348ad8acfdaa19f69564736f6c634300080d0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1199:5",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:5",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:5",
                "type": ""
              }
            ],
            "src": "7:75:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:5",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:5"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:5",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:5"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:5",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:5",
                "type": ""
              }
            ],
            "src": "334:126:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:5",
                "type": ""
              }
            ],
            "src": "466:96:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:5"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:5"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:5"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:5",
                "type": ""
              }
            ],
            "src": "568:122:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "759:80:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "769:22:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "784:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "778:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "778:13:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "769:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "827:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "800:26:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "800:33:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "800:33:5"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "737:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "745:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "753:5:5",
                "type": ""
              }
            ],
            "src": "696:143:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "922:274:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "968:83:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "970:77:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "970:79:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "970:79:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "943:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "952:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "939:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "939:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "964:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "935:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "935:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "932:119:5"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1061:128:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1076:15:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1090:1:5",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1080:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1105:74:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1151:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1162:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1147:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1147:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1171:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1115:31:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1115:64:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1105:6:5"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "892:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "903:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "915:6:5",
                "type": ""
              }
            ],
            "src": "845:351:5"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 5,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:13451:5",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:32:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:16:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "73:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:5",
                "type": ""
              }
            ],
            "src": "7:77:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "155:53:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "172:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "195:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "177:17:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "177:24:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "165:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:37:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "165:37:5"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "143:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "150:3:5",
                "type": ""
              }
            ],
            "src": "90:118:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "258:32:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "268:16:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "279:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "268:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "240:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "250:7:5",
                "type": ""
              }
            ],
            "src": "214:76:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "359:52:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "376:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "398:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_int256",
                          "nodeType": "YulIdentifier",
                          "src": "381:16:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "381:23:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "369:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "369:36:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "369:36:5"
                }
              ]
            },
            "name": "abi_encode_t_int256_to_t_int256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "347:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "354:3:5",
                "type": ""
              }
            ],
            "src": "296:115:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "541:204:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "551:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "563:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "574:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "559:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "559:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "551:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "631:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "644:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "655:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "640:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "640:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "587:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "587:71:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "587:71:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "710:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "723:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "734:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "719:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "719:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_int256_to_t_int256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "668:41:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "668:70:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "668:70:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_int256__to_t_uint256_t_int256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "505:9:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "517:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "525:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "536:4:5",
                "type": ""
              }
            ],
            "src": "417:328:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "791:35:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "801:19:5",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "817:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "811:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "811:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "801:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "784:6:5",
                "type": ""
              }
            ],
            "src": "751:75:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "921:28:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "938:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "941:1:5",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "931:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "931:12:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "931:12:5"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "832:117:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1044:28:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1061:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1064:1:5",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1054:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1054:12:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1054:12:5"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "955:117:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1121:79:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1178:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1187:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1190:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1180:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1180:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1180:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1144:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1169:5:5"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "1151:17:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1151:24:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1141:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1141:35:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1134:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1134:43:5"
                  },
                  "nodeType": "YulIf",
                  "src": "1131:63:5"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1114:5:5",
                "type": ""
              }
            ],
            "src": "1078:122:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1258:87:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1268:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1290:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1277:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1277:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1268:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1333:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1306:26:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1306:33:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1306:33:5"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1236:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1244:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1252:5:5",
                "type": ""
              }
            ],
            "src": "1206:139:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1417:263:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1463:83:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1465:77:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1465:79:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1465:79:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1438:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1447:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1434:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1434:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1459:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1430:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1430:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "1427:119:5"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1556:117:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1571:15:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1585:1:5",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1575:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1600:63:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1635:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1646:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1631:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1631:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1655:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1610:20:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1610:53:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1600:6:5"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1387:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1398:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1410:6:5",
                "type": ""
              }
            ],
            "src": "1351:329:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1731:81:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1741:65:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1756:5:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1763:42:5",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1752:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1752:54:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1741:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1713:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1723:7:5",
                "type": ""
              }
            ],
            "src": "1686:126:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1863:51:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1873:35:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1902:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1884:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1884:24:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1873:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1845:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1855:7:5",
                "type": ""
              }
            ],
            "src": "1818:96:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1985:53:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2002:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2025:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2007:17:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2007:24:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1995:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1995:37:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1995:37:5"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1973:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1980:3:5",
                "type": ""
              }
            ],
            "src": "1920:118:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2142:124:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2152:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2164:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2175:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2160:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2160:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2152:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2232:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2245:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2256:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2241:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2241:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2188:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2188:71:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2188:71:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2114:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2126:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2137:4:5",
                "type": ""
              }
            ],
            "src": "2044:222:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2370:124:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2380:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2392:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2403:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2388:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2388:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2380:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2460:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2473:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2484:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2469:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2469:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2416:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2416:71:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2416:71:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2342:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2354:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2365:4:5",
                "type": ""
              }
            ],
            "src": "2272:222:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2543:79:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2600:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2609:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2612:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2602:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2602:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2602:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2566:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2591:5:5"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2573:17:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2573:24:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2563:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2563:35:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2556:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2556:43:5"
                  },
                  "nodeType": "YulIf",
                  "src": "2553:63:5"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2536:5:5",
                "type": ""
              }
            ],
            "src": "2500:122:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2680:87:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2690:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2712:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2699:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2699:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2690:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2755:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2728:26:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2728:33:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2728:33:5"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2658:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2666:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2674:5:5",
                "type": ""
              }
            ],
            "src": "2628:139:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2839:263:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2885:83:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2887:77:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2887:79:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2887:79:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2860:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2869:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2856:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2856:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2881:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2852:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2852:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "2849:119:5"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2978:117:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2993:15:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3007:1:5",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2997:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3022:63:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3057:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3068:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3053:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3053:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3077:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3032:20:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3032:53:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3022:6:5"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2809:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2820:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2832:6:5",
                "type": ""
              }
            ],
            "src": "2773:329:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3152:61:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3162:45:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3177:5:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3184:22:5",
                        "type": "",
                        "value": "0xffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3173:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3173:34:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3162:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint80",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3134:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3144:7:5",
                "type": ""
              }
            ],
            "src": "3108:105:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3261:78:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3317:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3326:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3329:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3319:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3319:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3319:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3284:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3308:5:5"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint80",
                              "nodeType": "YulIdentifier",
                              "src": "3291:16:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3291:23:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3281:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3281:34:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3274:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3274:42:5"
                  },
                  "nodeType": "YulIf",
                  "src": "3271:62:5"
                }
              ]
            },
            "name": "validator_revert_t_uint80",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3254:5:5",
                "type": ""
              }
            ],
            "src": "3219:120:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3407:79:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3417:22:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3432:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3426:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3426:13:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "3417:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3474:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint80",
                      "nodeType": "YulIdentifier",
                      "src": "3448:25:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3448:32:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3448:32:5"
                }
              ]
            },
            "name": "abi_decode_t_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3385:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3393:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3401:5:5",
                "type": ""
              }
            ],
            "src": "3345:141:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3534:78:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3590:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3599:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3602:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3592:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3592:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3592:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3557:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3581:5:5"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_int256",
                              "nodeType": "YulIdentifier",
                              "src": "3564:16:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3564:23:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3554:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3554:34:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3547:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3547:42:5"
                  },
                  "nodeType": "YulIf",
                  "src": "3544:62:5"
                }
              ]
            },
            "name": "validator_revert_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3527:5:5",
                "type": ""
              }
            ],
            "src": "3492:120:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3680:79:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3690:22:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3705:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3699:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3699:13:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "3690:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3747:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "3721:25:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3721:32:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3721:32:5"
                }
              ]
            },
            "name": "abi_decode_t_int256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3658:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3666:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3674:5:5",
                "type": ""
              }
            ],
            "src": "3618:141:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3828:80:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3838:22:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3853:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3847:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3847:13:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "3838:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3896:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3869:26:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3869:33:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3869:33:5"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3806:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3814:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3822:5:5",
                "type": ""
              }
            ],
            "src": "3765:143:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4056:829:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4103:83:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4105:77:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4105:79:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4105:79:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4077:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4086:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4073:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4073:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4098:3:5",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4069:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4069:33:5"
                  },
                  "nodeType": "YulIf",
                  "src": "4066:120:5"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4196:127:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4211:15:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4225:1:5",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4215:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4240:73:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4285:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4296:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4281:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4281:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4305:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint80_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "4250:30:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4250:63:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4240:6:5"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4333:128:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4348:16:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4362:2:5",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4352:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4378:73:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4423:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4434:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4419:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4419:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4443:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_int256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "4388:30:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4388:63:5"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4378:6:5"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4471:129:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4486:16:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4500:2:5",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4490:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4516:74:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4562:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4573:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4558:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4558:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4582:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "4526:31:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4526:64:5"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "4516:6:5"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4610:129:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4625:16:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4639:2:5",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4629:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4655:74:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4701:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4712:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4697:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4697:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4721:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "4665:31:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4665:64:5"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "4655:6:5"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4749:129:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4764:17:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4778:3:5",
                        "type": "",
                        "value": "128"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4768:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4795:73:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4840:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4851:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4836:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4836:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4860:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint80_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "4805:30:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4805:63:5"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "4795:6:5"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3994:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4005:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4017:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4025:6:5",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4033:6:5",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4041:6:5",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "4049:6:5",
                "type": ""
              }
            ],
            "src": "3914:971:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4987:73:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5004:3:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5009:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4997:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4997:19:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4997:19:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5025:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5044:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5049:4:5",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5040:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5040:14:5"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "5025:11:5"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4959:3:5",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4964:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "4975:11:5",
                "type": ""
              }
            ],
            "src": "4891:169:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5172:118:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5194:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5202:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5190:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5190:14:5"
                      },
                      {
                        "hexValue": "4f6e6c7920616d6f756e742061626f7665207a65726f2061726520617574686f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5206:34:5",
                        "type": "",
                        "value": "Only amount above zero are autho"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5183:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5183:58:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5183:58:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5262:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5270:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5258:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5258:15:5"
                      },
                      {
                        "hexValue": "72697a6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5275:7:5",
                        "type": "",
                        "value": "rized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5251:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5251:32:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5251:32:5"
                }
              ]
            },
            "name": "store_literal_in_memory_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5164:6:5",
                "type": ""
              }
            ],
            "src": "5066:224:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5442:220:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5452:74:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5518:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5523:2:5",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5459:58:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5459:67:5"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5452:3:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5624:3:5"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39",
                      "nodeType": "YulIdentifier",
                      "src": "5535:88:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5535:93:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5535:93:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5637:19:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5648:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5653:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5644:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5644:12:5"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5637:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5430:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5438:3:5",
                "type": ""
              }
            ],
            "src": "5296:366:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5839:248:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5849:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5861:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5872:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5857:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5857:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5849:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5896:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5907:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5892:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5892:17:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5915:4:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5921:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5911:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5911:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5885:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5885:47:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5885:47:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5941:139:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6075:4:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5949:124:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5949:131:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5941:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5819:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5834:4:5",
                "type": ""
              }
            ],
            "src": "5668:419:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6199:122:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6221:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6229:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6217:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6217:14:5"
                      },
                      {
                        "hexValue": "596f75206469646e27742073746f726564207468697320616d6f756e7420696e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6233:34:5",
                        "type": "",
                        "value": "You didn't stored this amount in"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6210:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6210:58:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6210:58:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6289:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6297:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6285:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6285:15:5"
                      },
                      {
                        "hexValue": "2074686520706f6f6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6302:11:5",
                        "type": "",
                        "value": " the pool"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6278:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6278:36:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6278:36:5"
                }
              ]
            },
            "name": "store_literal_in_memory_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6191:6:5",
                "type": ""
              }
            ],
            "src": "6093:228:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6473:220:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6483:74:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6549:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6554:2:5",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6490:58:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6490:67:5"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6483:3:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6655:3:5"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9",
                      "nodeType": "YulIdentifier",
                      "src": "6566:88:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6566:93:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6566:93:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6668:19:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6679:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6684:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6675:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6675:12:5"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6668:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6461:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6469:3:5",
                "type": ""
              }
            ],
            "src": "6327:366:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6870:248:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6880:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6892:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6903:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6888:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6888:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6880:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6927:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6938:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6923:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6923:17:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6946:4:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6952:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6942:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6942:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6916:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6916:47:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6916:47:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6972:139:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7106:4:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6980:124:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6980:131:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6972:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6850:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6865:4:5",
                "type": ""
              }
            ],
            "src": "6699:419:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7152:152:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7169:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7172:77:5",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7162:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7162:88:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7162:88:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7266:1:5",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7269:4:5",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7259:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7259:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7259:15:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7290:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7293:4:5",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7283:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7283:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7283:15:5"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "7124:180:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7355:146:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7365:25:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7388:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7370:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7370:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "7365:1:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7399:25:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7422:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7404:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7404:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "7399:1:5"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7446:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7448:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7448:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7448:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7440:1:5"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7443:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "7437:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7437:8:5"
                  },
                  "nodeType": "YulIf",
                  "src": "7434:34:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7478:17:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7490:1:5"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7493:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7486:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7486:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "7478:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7341:1:5",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7344:1:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "7350:4:5",
                "type": ""
              }
            ],
            "src": "7310:191:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7633:206:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7643:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7655:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7666:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7651:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7651:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7643:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7723:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7736:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7747:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7732:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7732:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7679:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7679:71:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7679:71:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7804:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7817:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7828:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7813:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7813:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7760:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7760:72:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7760:72:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7597:9:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7609:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7617:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7628:4:5",
                "type": ""
              }
            ],
            "src": "7507:332:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7887:48:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7897:32:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7922:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "7915:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7915:13:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7908:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7908:21:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7897:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7869:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7879:7:5",
                "type": ""
              }
            ],
            "src": "7845:90:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7981:76:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8035:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8044:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8047:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8037:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8037:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8037:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8004:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8026:5:5"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "8011:14:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8011:21:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8001:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8001:32:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7994:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7994:40:5"
                  },
                  "nodeType": "YulIf",
                  "src": "7991:60:5"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7974:5:5",
                "type": ""
              }
            ],
            "src": "7941:116:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8123:77:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8133:22:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "8148:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8142:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8142:13:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "8133:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8188:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "8164:23:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8164:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8164:30:5"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "8101:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8109:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8117:5:5",
                "type": ""
              }
            ],
            "src": "8063:137:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8280:271:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8326:83:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "8328:77:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8328:79:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8328:79:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8301:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8310:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8297:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8297:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8322:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8293:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8293:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "8290:119:5"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8419:125:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8434:15:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8448:1:5",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "8438:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8463:71:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8506:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8517:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8502:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8502:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8526:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "8473:28:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8473:61:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "8463:6:5"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8250:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8261:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8273:6:5",
                "type": ""
              }
            ],
            "src": "8206:345:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8663:76:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8685:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8693:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8681:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8681:14:5"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8697:34:5",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8674:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8674:58:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8674:58:5"
                }
              ]
            },
            "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8655:6:5",
                "type": ""
              }
            ],
            "src": "8557:182:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8891:220:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8901:74:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8967:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8972:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8908:58:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8908:67:5"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8901:3:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9073:3:5"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                      "nodeType": "YulIdentifier",
                      "src": "8984:88:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8984:93:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8984:93:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9086:19:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9097:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9102:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9093:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9093:12:5"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9086:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8879:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8887:3:5",
                "type": ""
              }
            ],
            "src": "8745:366:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9288:248:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9298:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9310:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9321:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9306:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9306:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9298:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9345:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9356:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9341:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9341:17:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9364:4:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9370:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9360:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9360:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9334:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9334:47:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9334:47:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9390:139:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9524:4:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9398:124:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9398:131:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9390:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9268:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9283:4:5",
                "type": ""
              }
            ],
            "src": "9117:419:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9648:123:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9670:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9678:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9666:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9666:14:5"
                      },
                      {
                        "hexValue": "596f752063616e206f6e6c7920696e7365727420612076616c75652067726561",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9682:34:5",
                        "type": "",
                        "value": "You can only insert a value grea"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9659:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9659:58:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9659:58:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9738:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9746:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9734:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9734:15:5"
                      },
                      {
                        "hexValue": "746572207468616e2030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9751:12:5",
                        "type": "",
                        "value": "ter than 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9727:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9727:37:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9727:37:5"
                }
              ]
            },
            "name": "store_literal_in_memory_3ea53b8c1e96face02f4faaa58de9d934e15e0121d92de244dedd951895cc45a",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "9640:6:5",
                "type": ""
              }
            ],
            "src": "9542:229:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9923:220:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9933:74:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9999:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10004:2:5",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9940:58:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9940:67:5"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9933:3:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10105:3:5"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_3ea53b8c1e96face02f4faaa58de9d934e15e0121d92de244dedd951895cc45a",
                      "nodeType": "YulIdentifier",
                      "src": "10016:88:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10016:93:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10016:93:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10118:19:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10129:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10134:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10125:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10125:12:5"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10118:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_3ea53b8c1e96face02f4faaa58de9d934e15e0121d92de244dedd951895cc45a_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9911:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9919:3:5",
                "type": ""
              }
            ],
            "src": "9777:366:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10320:248:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10330:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10342:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10353:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10338:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10338:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10330:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10377:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10388:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10373:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10373:17:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10396:4:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10402:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10392:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10392:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10366:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10366:47:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10366:47:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10422:139:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10556:4:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_3ea53b8c1e96face02f4faaa58de9d934e15e0121d92de244dedd951895cc45a_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10430:124:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10430:131:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10422:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3ea53b8c1e96face02f4faaa58de9d934e15e0121d92de244dedd951895cc45a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10300:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10315:4:5",
                "type": ""
              }
            ],
            "src": "10149:419:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10728:288:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10738:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10750:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10761:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10746:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10746:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10738:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10818:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10831:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10842:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10827:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10827:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10774:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10774:71:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10774:71:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10899:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10912:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10923:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10908:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10908:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10855:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10855:72:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10855:72:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "10981:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10994:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11005:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10990:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10990:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10937:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10937:72:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10937:72:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10684:9:5",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "10696:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10704:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10712:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10723:4:5",
                "type": ""
              }
            ],
            "src": "10574:442:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11128:184:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11150:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11158:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11146:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11146:14:5"
                      },
                      {
                        "hexValue": "596f75206d7573742068617665207468652062616c616e636520696e20796f75",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11162:34:5",
                        "type": "",
                        "value": "You must have the balance in you"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11139:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11139:58:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11139:58:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11218:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11226:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11214:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11214:15:5"
                      },
                      {
                        "hexValue": "722077616c6c657420616e6420617070726f7665207468697320636f6e747261",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11231:34:5",
                        "type": "",
                        "value": "r wallet and approve this contra"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11207:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11207:59:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11207:59:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11287:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11295:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11283:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11283:15:5"
                      },
                      {
                        "hexValue": "6374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11300:4:5",
                        "type": "",
                        "value": "ct"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11276:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11276:29:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11276:29:5"
                }
              ]
            },
            "name": "store_literal_in_memory_fa003688d4927f6231f75893f596b02836dcfd1e207a1e5d6b4c7b36a6be7768",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "11120:6:5",
                "type": ""
              }
            ],
            "src": "11022:290:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11464:220:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11474:74:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11540:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11545:2:5",
                        "type": "",
                        "value": "66"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11481:58:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11481:67:5"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "11474:3:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11646:3:5"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_fa003688d4927f6231f75893f596b02836dcfd1e207a1e5d6b4c7b36a6be7768",
                      "nodeType": "YulIdentifier",
                      "src": "11557:88:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11557:93:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11557:93:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11659:19:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11670:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11675:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11666:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11666:12:5"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11659:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_fa003688d4927f6231f75893f596b02836dcfd1e207a1e5d6b4c7b36a6be7768_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11452:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11460:3:5",
                "type": ""
              }
            ],
            "src": "11318:366:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11861:248:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11871:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11883:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11894:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11879:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11879:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11871:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11918:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11929:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11914:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11914:17:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11937:4:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11943:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11933:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11933:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11907:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11907:47:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11907:47:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11963:139:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12097:4:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_fa003688d4927f6231f75893f596b02836dcfd1e207a1e5d6b4c7b36a6be7768_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11971:124:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11971:131:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11963:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fa003688d4927f6231f75893f596b02836dcfd1e207a1e5d6b4c7b36a6be7768__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11841:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11856:4:5",
                "type": ""
              }
            ],
            "src": "11690:419:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12159:261:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12169:25:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12192:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "12174:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12174:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "12169:1:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12203:25:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12226:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "12208:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12208:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "12203:1:5"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12366:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12368:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12368:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12368:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12287:1:5"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12294:66:5",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "12362:1:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12290:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12290:74:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12284:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12284:81:5"
                  },
                  "nodeType": "YulIf",
                  "src": "12281:107:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12398:16:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12409:1:5"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12412:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12405:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12405:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "12398:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12146:1:5",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12149:1:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "12155:3:5",
                "type": ""
              }
            ],
            "src": "12115:305:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12532:119:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12554:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12562:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12550:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12550:14:5"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12566:34:5",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12543:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12543:58:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12543:58:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12622:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12630:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12618:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12618:15:5"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12635:8:5",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12611:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12611:33:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12611:33:5"
                }
              ]
            },
            "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "12524:6:5",
                "type": ""
              }
            ],
            "src": "12426:225:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12803:220:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12813:74:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12879:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12884:2:5",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12820:58:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12820:67:5"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "12813:3:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12985:3:5"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                      "nodeType": "YulIdentifier",
                      "src": "12896:88:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12896:93:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12896:93:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12998:19:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13009:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13014:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13005:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13005:12:5"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "12998:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12791:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12799:3:5",
                "type": ""
              }
            ],
            "src": "12657:366:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13200:248:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13210:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13222:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13233:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13218:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13218:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13210:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13257:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13268:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13253:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13253:17:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13276:4:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13282:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13272:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13272:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13246:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13246:47:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13246:47:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13302:139:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13436:4:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13310:124:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13310:131:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13302:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13180:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13195:4:5",
                "type": ""
              }
            ],
            "src": "13029:419:5"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_int256__to_t_uint256_t_int256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_int256_to_t_int256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only amount above zero are autho\")\n\n        mstore(add(memPtr, 32), \"rized\")\n\n    }\n\n    function abi_encode_t_stringliteral_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9(memPtr) {\n\n        mstore(add(memPtr, 0), \"You didn't stored this amount in\")\n\n        mstore(add(memPtr, 32), \" the pool\")\n\n    }\n\n    function abi_encode_t_stringliteral_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3ea53b8c1e96face02f4faaa58de9d934e15e0121d92de244dedd951895cc45a(memPtr) {\n\n        mstore(add(memPtr, 0), \"You can only insert a value grea\")\n\n        mstore(add(memPtr, 32), \"ter than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_3ea53b8c1e96face02f4faaa58de9d934e15e0121d92de244dedd951895cc45a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_3ea53b8c1e96face02f4faaa58de9d934e15e0121d92de244dedd951895cc45a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3ea53b8c1e96face02f4faaa58de9d934e15e0121d92de244dedd951895cc45a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3ea53b8c1e96face02f4faaa58de9d934e15e0121d92de244dedd951895cc45a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_fa003688d4927f6231f75893f596b02836dcfd1e207a1e5d6b4c7b36a6be7768(memPtr) {\n\n        mstore(add(memPtr, 0), \"You must have the balance in you\")\n\n        mstore(add(memPtr, 32), \"r wallet and approve this contra\")\n\n        mstore(add(memPtr, 64), \"ct\")\n\n    }\n\n    function abi_encode_t_stringliteral_fa003688d4927f6231f75893f596b02836dcfd1e207a1e5d6b4c7b36a6be7768_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 66)\n        store_literal_in_memory_fa003688d4927f6231f75893f596b02836dcfd1e207a1e5d6b4c7b36a6be7768(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fa003688d4927f6231f75893f596b02836dcfd1e207a1e5d6b4c7b36a6be7768__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fa003688d4927f6231f75893f596b02836dcfd1e207a1e5d6b4c7b36a6be7768_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 5,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "457:4690:4:-:0;;;883:1;849:35;;1418:18;1387:49;;;;;;;;;;;;;;;;;;;;2568:171;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:1;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;2629:13:4;2614:5;;:29;;;;;;;;;;;;;;;;;;2688:42;2654:9;;:77;;;;;;;;;;;;;;;;;;2568:171;457:4690;;640:96:3;693:7;719:10;712:17;;640:96;:::o;2270:187:1:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;457:4690:4:-;;;;;;;",
  "deployedSourceMap": "457:4690:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4805:339;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3907:666;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1668:101:1;;;;;;;;;;;;;:::i;:::-;;1036:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2986:631:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;849:35;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1918:198:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4805:339:4;4863:13;4878:9;4950;5080;;;;;;;;;;;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4902:205;;;;;;5127:1;5130:5;5120:16;;;;;4805:339;;:::o;3907:666::-;3984:7;1686:1;1676:7;:11;1668:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;4106:7:::1;4069:21;:33;4091:10;4069:33;;;;;;;;;;;;;;;;:44;;4061:98;;;;;;;;;;;;:::i;:::-;;;;;;;;;4260:7;4240:16;;:27;;;;:::i;:::-;4221:16;:46;;;;4403:7;4367:21;:33;4389:10;4367:33;;;;;;;;;;;;;;;;:43;;;;:::i;:::-;4331:21;:33;4353:10;4331:33;;;;;;;;;;;;;;;:79;;;;4469:5;;;;;;;;;;;:14;;;4484:10;4496:7;4469:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4530;4545:10;4557:7;4530:35;;;;;;;:::i;:::-;;;;;;;;3907:666:::0;;:::o;1668:101:1:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;2986:631:4:-;3061:7;1686:1;1676:7;:11;1668:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;3099:1:::1;3089:7;:11;3081:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;3166:5;;;;;;;;;;;:18;;;3185:10;3205:4;3212:7;3166:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3158:133;;;;;;;;;;;;:::i;:::-;;;;;;;;;3400:7;3380:16;;:27;;;;:::i;:::-;3361:16;:46;;;;3543:7;3507:21;:33;3529:10;3507:33;;;;;;;;;;;;;;;;:43;;;;:::i;:::-;3471:21;:33;3493:10;3471:33;;;;;;;;;;;;;;;:79;;;;3576:33;3589:10;3601:7;3576:33;;;;;;;:::i;:::-;;;;;;;;2986:631:::0;;:::o;849:35::-;;;;:::o;1918:198:1:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;::::0;1998:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;2270:187:1:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;7:77:5:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:76::-;250:7;279:5;268:16;;214:76;;;:::o;296:115::-;381:23;398:5;381:23;:::i;:::-;376:3;369:36;296:115;;:::o;417:328::-;536:4;574:2;563:9;559:18;551:26;;587:71;655:1;644:9;640:17;631:6;587:71;:::i;:::-;668:70;734:2;723:9;719:18;710:6;668:70;:::i;:::-;417:328;;;;;:::o;832:117::-;941:1;938;931:12;1078:122;1151:24;1169:5;1151:24;:::i;:::-;1144:5;1141:35;1131:63;;1190:1;1187;1180:12;1131:63;1078:122;:::o;1206:139::-;1252:5;1290:6;1277:20;1268:29;;1306:33;1333:5;1306:33;:::i;:::-;1206:139;;;;:::o;1351:329::-;1410:6;1459:2;1447:9;1438:7;1434:23;1430:32;1427:119;;;1465:79;;:::i;:::-;1427:119;1585:1;1610:53;1655:7;1646:6;1635:9;1631:22;1610:53;:::i;:::-;1600:63;;1556:117;1351:329;;;;:::o;1686:126::-;1723:7;1763:42;1756:5;1752:54;1741:65;;1686:126;;;:::o;1818:96::-;1855:7;1884:24;1902:5;1884:24;:::i;:::-;1873:35;;1818:96;;;:::o;1920:118::-;2007:24;2025:5;2007:24;:::i;:::-;2002:3;1995:37;1920:118;;:::o;2044:222::-;2137:4;2175:2;2164:9;2160:18;2152:26;;2188:71;2256:1;2245:9;2241:17;2232:6;2188:71;:::i;:::-;2044:222;;;;:::o;2272:::-;2365:4;2403:2;2392:9;2388:18;2380:26;;2416:71;2484:1;2473:9;2469:17;2460:6;2416:71;:::i;:::-;2272:222;;;;:::o;2500:122::-;2573:24;2591:5;2573:24;:::i;:::-;2566:5;2563:35;2553:63;;2612:1;2609;2602:12;2553:63;2500:122;:::o;2628:139::-;2674:5;2712:6;2699:20;2690:29;;2728:33;2755:5;2728:33;:::i;:::-;2628:139;;;;:::o;2773:329::-;2832:6;2881:2;2869:9;2860:7;2856:23;2852:32;2849:119;;;2887:79;;:::i;:::-;2849:119;3007:1;3032:53;3077:7;3068:6;3057:9;3053:22;3032:53;:::i;:::-;3022:63;;2978:117;2773:329;;;;:::o;3108:105::-;3144:7;3184:22;3177:5;3173:34;3162:45;;3108:105;;;:::o;3219:120::-;3291:23;3308:5;3291:23;:::i;:::-;3284:5;3281:34;3271:62;;3329:1;3326;3319:12;3271:62;3219:120;:::o;3345:141::-;3401:5;3432:6;3426:13;3417:22;;3448:32;3474:5;3448:32;:::i;:::-;3345:141;;;;:::o;3492:120::-;3564:23;3581:5;3564:23;:::i;:::-;3557:5;3554:34;3544:62;;3602:1;3599;3592:12;3544:62;3492:120;:::o;3618:141::-;3674:5;3705:6;3699:13;3690:22;;3721:32;3747:5;3721:32;:::i;:::-;3618:141;;;;:::o;3765:143::-;3822:5;3853:6;3847:13;3838:22;;3869:33;3896:5;3869:33;:::i;:::-;3765:143;;;;:::o;3914:971::-;4017:6;4025;4033;4041;4049;4098:3;4086:9;4077:7;4073:23;4069:33;4066:120;;;4105:79;;:::i;:::-;4066:120;4225:1;4250:63;4305:7;4296:6;4285:9;4281:22;4250:63;:::i;:::-;4240:73;;4196:127;4362:2;4388:63;4443:7;4434:6;4423:9;4419:22;4388:63;:::i;:::-;4378:73;;4333:128;4500:2;4526:64;4582:7;4573:6;4562:9;4558:22;4526:64;:::i;:::-;4516:74;;4471:129;4639:2;4665:64;4721:7;4712:6;4701:9;4697:22;4665:64;:::i;:::-;4655:74;;4610:129;4778:3;4805:63;4860:7;4851:6;4840:9;4836:22;4805:63;:::i;:::-;4795:73;;4749:129;3914:971;;;;;;;;:::o;4891:169::-;4975:11;5009:6;5004:3;4997:19;5049:4;5044:3;5040:14;5025:29;;4891:169;;;;:::o;5066:224::-;5206:34;5202:1;5194:6;5190:14;5183:58;5275:7;5270:2;5262:6;5258:15;5251:32;5066:224;:::o;5296:366::-;5438:3;5459:67;5523:2;5518:3;5459:67;:::i;:::-;5452:74;;5535:93;5624:3;5535:93;:::i;:::-;5653:2;5648:3;5644:12;5637:19;;5296:366;;;:::o;5668:419::-;5834:4;5872:2;5861:9;5857:18;5849:26;;5921:9;5915:4;5911:20;5907:1;5896:9;5892:17;5885:47;5949:131;6075:4;5949:131;:::i;:::-;5941:139;;5668:419;;;:::o;6093:228::-;6233:34;6229:1;6221:6;6217:14;6210:58;6302:11;6297:2;6289:6;6285:15;6278:36;6093:228;:::o;6327:366::-;6469:3;6490:67;6554:2;6549:3;6490:67;:::i;:::-;6483:74;;6566:93;6655:3;6566:93;:::i;:::-;6684:2;6679:3;6675:12;6668:19;;6327:366;;;:::o;6699:419::-;6865:4;6903:2;6892:9;6888:18;6880:26;;6952:9;6946:4;6942:20;6938:1;6927:9;6923:17;6916:47;6980:131;7106:4;6980:131;:::i;:::-;6972:139;;6699:419;;;:::o;7124:180::-;7172:77;7169:1;7162:88;7269:4;7266:1;7259:15;7293:4;7290:1;7283:15;7310:191;7350:4;7370:20;7388:1;7370:20;:::i;:::-;7365:25;;7404:20;7422:1;7404:20;:::i;:::-;7399:25;;7443:1;7440;7437:8;7434:34;;;7448:18;;:::i;:::-;7434:34;7493:1;7490;7486:9;7478:17;;7310:191;;;;:::o;7507:332::-;7628:4;7666:2;7655:9;7651:18;7643:26;;7679:71;7747:1;7736:9;7732:17;7723:6;7679:71;:::i;:::-;7760:72;7828:2;7817:9;7813:18;7804:6;7760:72;:::i;:::-;7507:332;;;;;:::o;7845:90::-;7879:7;7922:5;7915:13;7908:21;7897:32;;7845:90;;;:::o;7941:116::-;8011:21;8026:5;8011:21;:::i;:::-;8004:5;8001:32;7991:60;;8047:1;8044;8037:12;7991:60;7941:116;:::o;8063:137::-;8117:5;8148:6;8142:13;8133:22;;8164:30;8188:5;8164:30;:::i;:::-;8063:137;;;;:::o;8206:345::-;8273:6;8322:2;8310:9;8301:7;8297:23;8293:32;8290:119;;;8328:79;;:::i;:::-;8290:119;8448:1;8473:61;8526:7;8517:6;8506:9;8502:22;8473:61;:::i;:::-;8463:71;;8419:125;8206:345;;;;:::o;8557:182::-;8697:34;8693:1;8685:6;8681:14;8674:58;8557:182;:::o;8745:366::-;8887:3;8908:67;8972:2;8967:3;8908:67;:::i;:::-;8901:74;;8984:93;9073:3;8984:93;:::i;:::-;9102:2;9097:3;9093:12;9086:19;;8745:366;;;:::o;9117:419::-;9283:4;9321:2;9310:9;9306:18;9298:26;;9370:9;9364:4;9360:20;9356:1;9345:9;9341:17;9334:47;9398:131;9524:4;9398:131;:::i;:::-;9390:139;;9117:419;;;:::o;9542:229::-;9682:34;9678:1;9670:6;9666:14;9659:58;9751:12;9746:2;9738:6;9734:15;9727:37;9542:229;:::o;9777:366::-;9919:3;9940:67;10004:2;9999:3;9940:67;:::i;:::-;9933:74;;10016:93;10105:3;10016:93;:::i;:::-;10134:2;10129:3;10125:12;10118:19;;9777:366;;;:::o;10149:419::-;10315:4;10353:2;10342:9;10338:18;10330:26;;10402:9;10396:4;10392:20;10388:1;10377:9;10373:17;10366:47;10430:131;10556:4;10430:131;:::i;:::-;10422:139;;10149:419;;;:::o;10574:442::-;10723:4;10761:2;10750:9;10746:18;10738:26;;10774:71;10842:1;10831:9;10827:17;10818:6;10774:71;:::i;:::-;10855:72;10923:2;10912:9;10908:18;10899:6;10855:72;:::i;:::-;10937;11005:2;10994:9;10990:18;10981:6;10937:72;:::i;:::-;10574:442;;;;;;:::o;11022:290::-;11162:34;11158:1;11150:6;11146:14;11139:58;11231:34;11226:2;11218:6;11214:15;11207:59;11300:4;11295:2;11287:6;11283:15;11276:29;11022:290;:::o;11318:366::-;11460:3;11481:67;11545:2;11540:3;11481:67;:::i;:::-;11474:74;;11557:93;11646:3;11557:93;:::i;:::-;11675:2;11670:3;11666:12;11659:19;;11318:366;;;:::o;11690:419::-;11856:4;11894:2;11883:9;11879:18;11871:26;;11943:9;11937:4;11933:20;11929:1;11918:9;11914:17;11907:47;11971:131;12097:4;11971:131;:::i;:::-;11963:139;;11690:419;;;:::o;12115:305::-;12155:3;12174:20;12192:1;12174:20;:::i;:::-;12169:25;;12208:20;12226:1;12208:20;:::i;:::-;12203:25;;12362:1;12294:66;12290:74;12287:1;12284:81;12281:107;;;12368:18;;:::i;:::-;12281:107;12412:1;12409;12405:9;12398:16;;12115:305;;;;:::o;12426:225::-;12566:34;12562:1;12554:6;12550:14;12543:58;12635:8;12630:2;12622:6;12618:15;12611:33;12426:225;:::o;12657:366::-;12799:3;12820:67;12884:2;12879:3;12820:67;:::i;:::-;12813:74;;12896:93;12985:3;12896:93;:::i;:::-;13014:2;13009:3;13005:12;12998:19;;12657:366;;;:::o;13029:419::-;13195:4;13233:2;13222:9;13218:18;13210:26;;13282:9;13276:4;13272:20;13268:1;13257:9;13253:17;13246:47;13310:131;13436:4;13310:131;:::i;:::-;13302:139;;13029:419;;;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity 0.8.13;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\n\r\n/**\r\n * @title Hello World DeFi Protocol\r\n * @author The Hello World Team\r\n * @notice This contract offer the possibility to stake ERC20 in Liquidity Pools to receive Hello World Token rewards\r\n */\r\ncontract DeFiProtocol is Ownable {\r\n\r\n    // ::::::::::::: Properties ::::::::::::: //\r\n\r\n    /**\r\n     * @notice This mapping store the amount of liquidity by address\r\n     */\r\n    mapping(address => uint256) storedValuePerAddress;\r\n\r\n    /**\r\n     * @notice The Total Value Locked(TVL) of the liquidity pool\r\n     * @dev The TVL is public because front may want to display it\r\n     */\r\n    uint256 public totalValueLocked = 0;\r\n    \r\n    /**\r\n     * @notice The Token to store in the liquidity pool\r\n     * @dev Initialized on the constructor\r\n     */\r\n    IERC20 token;\r\n\r\n    /**\r\n     * @notice Retrieve the token price\r\n     * @dev Use Chainlink to retrieve the USD price of the token\r\n     */\r\n    AggregatorV3Interface internal priceFeed;\r\n\r\n    /**\r\n     * @notice Token multiplier to give a price on the Hwt token\r\n     * @dev As our Hwt token don't have any value on the market, we use a basic multiplier\r\n     */\r\n    uint64 customTokenMultiplier = 800000000000000000;\r\n\r\n    // ::::::::::::: Modifiers ::::::::::::: //\r\n\r\n    /**\r\n     * @notice Modifier that allow only amount greater than zero to be staked or unstaked\r\n     */\r\n    modifier onlyAmountGreaterThanZero(uint256 _amount) {\r\n        require(_amount > 0, \"Only amount above zero are authorized\");\r\n        _;\r\n    }\r\n\r\n    // ::::::::::::: Events ::::::::::::: //\r\n\r\n    /**\r\n     * @notice Event informing an amount was staked in the Liquidity Pool\r\n     * @param staker The address that staked\r\n     * @param stakedAmount The amount that has been staked\r\n     */\r\n    event AmountStaked (address staker, uint256 stakedAmount);\r\n\r\n    /**\r\n     * @notice Event informing an amount was unstaked in the Liquidity Pool\r\n     * @param staker The address that unstaked\r\n     * @param unstakedAmount The amount that has been unstaked\r\n     */\r\n    event AmountUnstaked (address staker, uint256 unstakedAmount);\r\n\r\n    // ::::::::::::: Methods ::::::::::::: //\r\n\r\n    /**\r\n     * @notice Create erc20 instance that will be used for the liquidity pool\r\n     * @param _tokenAddress the smart contract address of the erc20 token\r\n     */\r\n    constructor(address _tokenAddress) {\r\n        token = IERC20(_tokenAddress);\r\n        priceFeed = AggregatorV3Interface(0x9326BFA02ADD2366b30bacB125260Af641031331);\r\n    }\r\n\r\n    /**\r\n     * @notice Stake token in the Liquidity pool\r\n     * @dev Refresh the stored amount in the address mapping storedValuePerAddress and refresh the TVL\r\n     * @param _amount Total amount to store in the liquidity pool\r\n     */\r\n    function stake(uint256 _amount) payable external onlyAmountGreaterThanZero(_amount) {\r\n        require(_amount > 0, \"You can only insert a value greater than 0\");\r\n        require(token.transferFrom(msg.sender, address(this), _amount), \"You must have the balance in your wallet and approve this contract\");\r\n        \r\n        // Update the tvl of the liquidity pool\r\n        totalValueLocked = totalValueLocked  + _amount;\r\n\r\n        // Update the locked amount of the sender\r\n        storedValuePerAddress[msg.sender] = storedValuePerAddress[msg.sender] + _amount;\r\n        \r\n        emit AmountStaked(msg.sender, _amount);\r\n    }\r\n\r\n    /**\r\n     * @notice Unstake the tokens in the Liquidity pool, user can retrieve their tokens\r\n     * @dev Refresh the stored amount in the address mapping storedValuePerAddress and refresh the TVL\r\n     * @param _amount Total amount to unstake from the liquidity pool\r\n     */\r\n    function unstake(uint256 _amount) payable external onlyAmountGreaterThanZero(_amount) {\r\n        // Check if the sender have this amount in pool\r\n        require(storedValuePerAddress[msg.sender] >= _amount, \"You didn't stored this amount in the pool\");\r\n\r\n        // Update the tvl of the liquidity pool\r\n        totalValueLocked = totalValueLocked  - _amount;\r\n\r\n        // Update the locked amount of the sender\r\n        storedValuePerAddress[msg.sender] = storedValuePerAddress[msg.sender] - _amount;\r\n\r\n        // Send the token back to the sender\r\n        token.transfer(msg.sender, _amount);\r\n        \r\n        emit AmountUnstaked(msg.sender, _amount);\r\n    }\r\n\r\n    /**\r\n     * @notice Get the token staked amount and the price in USD\r\n     * @dev USD Price is retrieved thanks to Chainlink\r\n     * @return total token staked by msg.sender\r\n     * @return price of the amount\r\n     */\r\n    function getStakedAmountAndPrice() external view returns (uint256 total, int price) {\r\n\r\n        (\r\n            /*uint80 roundID*/,\r\n            int price,\r\n            /*uint startedAt*/,\r\n            /*uint timeStamp*/,\r\n            /*uint80 answeredInRound*/\r\n        ) = priceFeed.latestRoundData();\r\n\r\n        return(0, price);\r\n    }\r\n}",
  "sourcePath": "/mnt/d/Alyra/DeFi-Liquidity-Pool/contracts/DeFiProtocol.sol",
  "ast": {
    "absolutePath": "project:/contracts/DeFiProtocol.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        45
      ],
      "Context": [
        250
      ],
      "DeFiProtocol": [
        453
      ],
      "IERC20": [
        228
      ],
      "Ownable": [
        150
      ]
    },
    "id": 454,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 252,
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:4"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 253,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 454,
        "sourceUnit": 151,
        "src": "66:52:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 254,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 454,
        "sourceUnit": 229,
        "src": "120:56:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 255,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 454,
        "sourceUnit": 46,
        "src": "178:76:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 257,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 150,
              "src": "482:7:4"
            },
            "id": 258,
            "nodeType": "InheritanceSpecifier",
            "src": "482:7:4"
          }
        ],
        "canonicalName": "DeFiProtocol",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 256,
          "nodeType": "StructuredDocumentation",
          "src": "258:197:4",
          "text": " @title Hello World DeFi Protocol\n @author The Hello World Team\n @notice This contract offer the possibility to stake ERC20 in Liquidity Pools to receive Hello World Token rewards"
        },
        "fullyImplemented": true,
        "id": 453,
        "linearizedBaseContracts": [
          453,
          150,
          250
        ],
        "name": "DeFiProtocol",
        "nameLocation": "466:12:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 259,
              "nodeType": "StructuredDocumentation",
              "src": "551:82:4",
              "text": " @notice This mapping store the amount of liquidity by address"
            },
            "id": 263,
            "mutability": "mutable",
            "name": "storedValuePerAddress",
            "nameLocation": "667:21:4",
            "nodeType": "VariableDeclaration",
            "scope": 453,
            "src": "639:49:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 262,
              "keyType": {
                "id": 260,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "647:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "639:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 261,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "658:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 264,
              "nodeType": "StructuredDocumentation",
              "src": "697:146:4",
              "text": " @notice The Total Value Locked(TVL) of the liquidity pool\n @dev The TVL is public because front may want to display it"
            },
            "functionSelector": "ec18154e",
            "id": 267,
            "mutability": "mutable",
            "name": "totalValueLocked",
            "nameLocation": "864:16:4",
            "nodeType": "VariableDeclaration",
            "scope": 453,
            "src": "849:35:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 265,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "849:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 266,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "883:1:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 268,
              "nodeType": "StructuredDocumentation",
              "src": "897:113:4",
              "text": " @notice The Token to store in the liquidity pool\n @dev Initialized on the constructor"
            },
            "id": 271,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "1023:5:4",
            "nodeType": "VariableDeclaration",
            "scope": 453,
            "src": "1016:12:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$228",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 270,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 269,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 228,
                "src": "1016:6:4"
              },
              "referencedDeclaration": 228,
              "src": "1016:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$228",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 272,
              "nodeType": "StructuredDocumentation",
              "src": "1037:119:4",
              "text": " @notice Retrieve the token price\n @dev Use Chainlink to retrieve the USD price of the token"
            },
            "id": 275,
            "mutability": "mutable",
            "name": "priceFeed",
            "nameLocation": "1193:9:4",
            "nodeType": "VariableDeclaration",
            "scope": 453,
            "src": "1162:40:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 274,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 273,
                "name": "AggregatorV3Interface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45,
                "src": "1162:21:4"
              },
              "referencedDeclaration": 45,
              "src": "1162:21:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 276,
              "nodeType": "StructuredDocumentation",
              "src": "1211:170:4",
              "text": " @notice Token multiplier to give a price on the Hwt token\n @dev As our Hwt token don't have any value on the market, we use a basic multiplier"
            },
            "id": 279,
            "mutability": "mutable",
            "name": "customTokenMultiplier",
            "nameLocation": "1394:21:4",
            "nodeType": "VariableDeclaration",
            "scope": 453,
            "src": "1387:49:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 277,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "1387:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "hexValue": "383030303030303030303030303030303030",
              "id": 278,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1418:18:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_800000000000000000_by_1",
                "typeString": "int_const 800000000000000000"
              },
              "value": "800000000000000000"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 292,
              "nodeType": "Block",
              "src": "1657:92:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 285,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 282,
                          "src": "1676:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1686:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1676:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920616d6f756e742061626f7665207a65726f2061726520617574686f72697a6564",
                        "id": 288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1689:39:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39",
                          "typeString": "literal_string \"Only amount above zero are authorized\""
                        },
                        "value": "Only amount above zero are authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39",
                          "typeString": "literal_string \"Only amount above zero are authorized\""
                        }
                      ],
                      "id": 284,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1668:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1668:61:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 290,
                  "nodeType": "ExpressionStatement",
                  "src": "1668:61:4"
                },
                {
                  "id": 291,
                  "nodeType": "PlaceholderStatement",
                  "src": "1740:1:4"
                }
              ]
            },
            "documentation": {
              "id": 280,
              "nodeType": "StructuredDocumentation",
              "src": "1496:103:4",
              "text": " @notice Modifier that allow only amount greater than zero to be staked or unstaked"
            },
            "id": 293,
            "name": "onlyAmountGreaterThanZero",
            "nameLocation": "1614:25:4",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 282,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1648:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 293,
                  "src": "1640:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1640:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1639:17:4"
            },
            "src": "1605:144:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 294,
              "nodeType": "StructuredDocumentation",
              "src": "1805:193:4",
              "text": " @notice Event informing an amount was staked in the Liquidity Pool\n @param staker The address that staked\n @param stakedAmount The amount that has been staked"
            },
            "eventSelector": "3d38832b715af529dbcd52809af95a3d65307ee7464f4e451c3c468b49442df7",
            "id": 300,
            "name": "AmountStaked",
            "nameLocation": "2010:12:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 296,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "2032:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "2024:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 295,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2024:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 298,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "stakedAmount",
                  "nameLocation": "2048:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "2040:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 297,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2040:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2023:38:4"
            },
            "src": "2004:58:4"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 301,
              "nodeType": "StructuredDocumentation",
              "src": "2070:201:4",
              "text": " @notice Event informing an amount was unstaked in the Liquidity Pool\n @param staker The address that unstaked\n @param unstakedAmount The amount that has been unstaked"
            },
            "eventSelector": "3425a37fe438dba566444a6c4d5ac2d0e3c39e0e1685eed68b0bac0f8d45758b",
            "id": 307,
            "name": "AmountUnstaked",
            "nameLocation": "2283:14:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 303,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "2307:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 307,
                  "src": "2299:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 302,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2299:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 305,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "unstakedAmount",
                  "nameLocation": "2323:14:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 307,
                  "src": "2315:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 304,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2315:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2298:40:4"
            },
            "src": "2277:62:4"
          },
          {
            "body": {
              "id": 325,
              "nodeType": "Block",
              "src": "2603:136:4",
              "statements": [
                {
                  "expression": {
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 313,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 271,
                      "src": "2614:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$228",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 315,
                          "name": "_tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 310,
                          "src": "2629:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 314,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "2622:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$228_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2622:21:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$228",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2614:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$228",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 318,
                  "nodeType": "ExpressionStatement",
                  "src": "2614:29:4"
                },
                {
                  "expression": {
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 319,
                      "name": "priceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 275,
                      "src": "2654:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307839333236424641303241444432333636623330626163423132353236304166363431303331333331",
                          "id": 321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2688:42:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x9326BFA02ADD2366b30bacB125260Af641031331"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 320,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "2666:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2666:65:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "2654:77:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 324,
                  "nodeType": "ExpressionStatement",
                  "src": "2654:77:4"
                }
              ]
            },
            "documentation": {
              "id": 308,
              "nodeType": "StructuredDocumentation",
              "src": "2396:166:4",
              "text": " @notice Create erc20 instance that will be used for the liquidity pool\n @param _tokenAddress the smart contract address of the erc20 token"
            },
            "id": 326,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 310,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "2588:13:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 326,
                  "src": "2580:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 309,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2580:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2579:23:4"
            },
            "returnParameters": {
              "id": 312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2603:0:4"
            },
            "scope": 453,
            "src": "2568:171:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 380,
              "nodeType": "Block",
              "src": "3070:547:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 336,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 329,
                          "src": "3089:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3099:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3089:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e206f6e6c7920696e7365727420612076616c75652067726561746572207468616e2030",
                        "id": 339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3102:44:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3ea53b8c1e96face02f4faaa58de9d934e15e0121d92de244dedd951895cc45a",
                          "typeString": "literal_string \"You can only insert a value greater than 0\""
                        },
                        "value": "You can only insert a value greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3ea53b8c1e96face02f4faaa58de9d934e15e0121d92de244dedd951895cc45a",
                          "typeString": "literal_string \"You can only insert a value greater than 0\""
                        }
                      ],
                      "id": 335,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3081:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3081:66:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 341,
                  "nodeType": "ExpressionStatement",
                  "src": "3081:66:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 345,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3185:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3185:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 349,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "3205:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DeFiProtocol_$453",
                                  "typeString": "contract DeFiProtocol"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DeFiProtocol_$453",
                                  "typeString": "contract DeFiProtocol"
                                }
                              ],
                              "id": 348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3197:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 347,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3197:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3197:13:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 351,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 329,
                            "src": "3212:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 343,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 271,
                            "src": "3166:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$228",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 227,
                          "src": "3166:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3166:54:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206d7573742068617665207468652062616c616e636520696e20796f75722077616c6c657420616e6420617070726f7665207468697320636f6e7472616374",
                        "id": 353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3222:68:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa003688d4927f6231f75893f596b02836dcfd1e207a1e5d6b4c7b36a6be7768",
                          "typeString": "literal_string \"You must have the balance in your wallet and approve this contract\""
                        },
                        "value": "You must have the balance in your wallet and approve this contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa003688d4927f6231f75893f596b02836dcfd1e207a1e5d6b4c7b36a6be7768",
                          "typeString": "literal_string \"You must have the balance in your wallet and approve this contract\""
                        }
                      ],
                      "id": 342,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3158:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3158:133:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 355,
                  "nodeType": "ExpressionStatement",
                  "src": "3158:133:4"
                },
                {
                  "expression": {
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 356,
                      "name": "totalValueLocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 267,
                      "src": "3361:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 357,
                        "name": "totalValueLocked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 267,
                        "src": "3380:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 358,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 329,
                        "src": "3400:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3380:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3361:46:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 361,
                  "nodeType": "ExpressionStatement",
                  "src": "3361:46:4"
                },
                {
                  "expression": {
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 362,
                        "name": "storedValuePerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 263,
                        "src": "3471:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 365,
                      "indexExpression": {
                        "expression": {
                          "id": 363,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3493:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3493:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3471:33:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 366,
                          "name": "storedValuePerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 263,
                          "src": "3507:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 369,
                        "indexExpression": {
                          "expression": {
                            "id": 367,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3529:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3529:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3507:33:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 370,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 329,
                        "src": "3543:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3507:43:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3471:79:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 373,
                  "nodeType": "ExpressionStatement",
                  "src": "3471:79:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 375,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3589:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3589:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 377,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 329,
                        "src": "3601:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 374,
                      "name": "AmountStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 300,
                      "src": "3576:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3576:33:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 379,
                  "nodeType": "EmitStatement",
                  "src": "3571:38:4"
                }
              ]
            },
            "documentation": {
              "id": 327,
              "nodeType": "StructuredDocumentation",
              "src": "2747:233:4",
              "text": " @notice Stake token in the Liquidity pool\n @dev Refresh the stored amount in the address mapping storedValuePerAddress and refresh the TVL\n @param _amount Total amount to store in the liquidity pool"
            },
            "functionSelector": "a694fc3a",
            "id": 381,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 332,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 329,
                    "src": "3061:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 333,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 331,
                  "name": "onlyAmountGreaterThanZero",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 293,
                  "src": "3035:25:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "3035:34:4"
              }
            ],
            "name": "stake",
            "nameLocation": "2995:5:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 329,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3009:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 381,
                  "src": "3001:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 328,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3001:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3000:17:4"
            },
            "returnParameters": {
              "id": 334,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3070:0:4"
            },
            "scope": 453,
            "src": "2986:631:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 432,
              "nodeType": "Block",
              "src": "3993:580:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 391,
                            "name": "storedValuePerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 263,
                            "src": "4069:21:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 394,
                          "indexExpression": {
                            "expression": {
                              "id": 392,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4091:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4091:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4069:33:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 395,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 384,
                          "src": "4106:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4069:44:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206469646e27742073746f726564207468697320616d6f756e7420696e2074686520706f6f6c",
                        "id": 397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4115:43:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9",
                          "typeString": "literal_string \"You didn't stored this amount in the pool\""
                        },
                        "value": "You didn't stored this amount in the pool"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9",
                          "typeString": "literal_string \"You didn't stored this amount in the pool\""
                        }
                      ],
                      "id": 390,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4061:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4061:98:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 399,
                  "nodeType": "ExpressionStatement",
                  "src": "4061:98:4"
                },
                {
                  "expression": {
                    "id": 404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 400,
                      "name": "totalValueLocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 267,
                      "src": "4221:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 401,
                        "name": "totalValueLocked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 267,
                        "src": "4240:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 402,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 384,
                        "src": "4260:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4240:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4221:46:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 405,
                  "nodeType": "ExpressionStatement",
                  "src": "4221:46:4"
                },
                {
                  "expression": {
                    "id": 416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 406,
                        "name": "storedValuePerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 263,
                        "src": "4331:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 409,
                      "indexExpression": {
                        "expression": {
                          "id": 407,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4353:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4353:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4331:33:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 410,
                          "name": "storedValuePerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 263,
                          "src": "4367:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 413,
                        "indexExpression": {
                          "expression": {
                            "id": 411,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4389:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4389:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4367:33:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 414,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 384,
                        "src": "4403:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4367:43:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4331:79:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 417,
                  "nodeType": "ExpressionStatement",
                  "src": "4331:79:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 421,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4484:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4484:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 423,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 384,
                        "src": "4496:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 418,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 271,
                        "src": "4469:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$228",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 195,
                      "src": "4469:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4469:35:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 425,
                  "nodeType": "ExpressionStatement",
                  "src": "4469:35:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 427,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4545:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4545:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 429,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 384,
                        "src": "4557:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 426,
                      "name": "AmountUnstaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 307,
                      "src": "4530:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4530:35:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 431,
                  "nodeType": "EmitStatement",
                  "src": "4525:40:4"
                }
              ]
            },
            "documentation": {
              "id": 382,
              "nodeType": "StructuredDocumentation",
              "src": "3625:276:4",
              "text": " @notice Unstake the tokens in the Liquidity pool, user can retrieve their tokens\n @dev Refresh the stored amount in the address mapping storedValuePerAddress and refresh the TVL\n @param _amount Total amount to unstake from the liquidity pool"
            },
            "functionSelector": "2e17de78",
            "id": 433,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 387,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 384,
                    "src": "3984:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 388,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 386,
                  "name": "onlyAmountGreaterThanZero",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 293,
                  "src": "3958:25:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "3958:34:4"
              }
            ],
            "name": "unstake",
            "nameLocation": "3916:7:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 384,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3932:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 433,
                  "src": "3924:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 383,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3924:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3923:17:4"
            },
            "returnParameters": {
              "id": 389,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3993:0:4"
            },
            "scope": 453,
            "src": "3907:666:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 451,
              "nodeType": "Block",
              "src": "4889:255:4",
              "statements": [
                {
                  "assignments": [
                    null,
                    442,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 442,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "4954:5:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 451,
                      "src": "4950:9:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 441,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "4950:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 446,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 443,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 275,
                        "src": "5080:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "5080:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5080:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4902:205:4"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "30",
                        "id": 447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5127:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 448,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 442,
                        "src": "5130:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "id": 449,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5126:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_int256_$",
                      "typeString": "tuple(int_const 0,int256)"
                    }
                  },
                  "functionReturnParameters": 440,
                  "id": 450,
                  "nodeType": "Return",
                  "src": "5120:16:4"
                }
              ]
            },
            "documentation": {
              "id": 434,
              "nodeType": "StructuredDocumentation",
              "src": "4581:218:4",
              "text": " @notice Get the token staked amount and the price in USD\n @dev USD Price is retrieved thanks to Chainlink\n @return total token staked by msg.sender\n @return price of the amount"
            },
            "functionSelector": "125c01e7",
            "id": 452,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakedAmountAndPrice",
            "nameLocation": "4814:23:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 435,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4837:2:4"
            },
            "returnParameters": {
              "id": 440,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 437,
                  "mutability": "mutable",
                  "name": "total",
                  "nameLocation": "4871:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 452,
                  "src": "4863:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 436,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4863:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 439,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "4882:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 452,
                  "src": "4878:9:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 438,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "4878:3:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4862:26:4"
            },
            "scope": 453,
            "src": "4805:339:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 454,
        "src": "457:4690:4",
        "usedErrors": []
      }
    ],
    "src": "39:5108:4"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/DeFiProtocol.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        45
      ],
      "Context": [
        250
      ],
      "DeFiProtocol": [
        453
      ],
      "IERC20": [
        228
      ],
      "Ownable": [
        150
      ]
    },
    "id": 454,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 252,
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:4"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 253,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 454,
        "sourceUnit": 151,
        "src": "66:52:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 254,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 454,
        "sourceUnit": 229,
        "src": "120:56:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 255,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 454,
        "sourceUnit": 46,
        "src": "178:76:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 257,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 150,
              "src": "482:7:4"
            },
            "id": 258,
            "nodeType": "InheritanceSpecifier",
            "src": "482:7:4"
          }
        ],
        "canonicalName": "DeFiProtocol",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 256,
          "nodeType": "StructuredDocumentation",
          "src": "258:197:4",
          "text": " @title Hello World DeFi Protocol\n @author The Hello World Team\n @notice This contract offer the possibility to stake ERC20 in Liquidity Pools to receive Hello World Token rewards"
        },
        "fullyImplemented": true,
        "id": 453,
        "linearizedBaseContracts": [
          453,
          150,
          250
        ],
        "name": "DeFiProtocol",
        "nameLocation": "466:12:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 259,
              "nodeType": "StructuredDocumentation",
              "src": "551:82:4",
              "text": " @notice This mapping store the amount of liquidity by address"
            },
            "id": 263,
            "mutability": "mutable",
            "name": "storedValuePerAddress",
            "nameLocation": "667:21:4",
            "nodeType": "VariableDeclaration",
            "scope": 453,
            "src": "639:49:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 262,
              "keyType": {
                "id": 260,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "647:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "639:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 261,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "658:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 264,
              "nodeType": "StructuredDocumentation",
              "src": "697:146:4",
              "text": " @notice The Total Value Locked(TVL) of the liquidity pool\n @dev The TVL is public because front may want to display it"
            },
            "functionSelector": "ec18154e",
            "id": 267,
            "mutability": "mutable",
            "name": "totalValueLocked",
            "nameLocation": "864:16:4",
            "nodeType": "VariableDeclaration",
            "scope": 453,
            "src": "849:35:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 265,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "849:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 266,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "883:1:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 268,
              "nodeType": "StructuredDocumentation",
              "src": "897:113:4",
              "text": " @notice The Token to store in the liquidity pool\n @dev Initialized on the constructor"
            },
            "id": 271,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "1023:5:4",
            "nodeType": "VariableDeclaration",
            "scope": 453,
            "src": "1016:12:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$228",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 270,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 269,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 228,
                "src": "1016:6:4"
              },
              "referencedDeclaration": 228,
              "src": "1016:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$228",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 272,
              "nodeType": "StructuredDocumentation",
              "src": "1037:119:4",
              "text": " @notice Retrieve the token price\n @dev Use Chainlink to retrieve the USD price of the token"
            },
            "id": 275,
            "mutability": "mutable",
            "name": "priceFeed",
            "nameLocation": "1193:9:4",
            "nodeType": "VariableDeclaration",
            "scope": 453,
            "src": "1162:40:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 274,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 273,
                "name": "AggregatorV3Interface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45,
                "src": "1162:21:4"
              },
              "referencedDeclaration": 45,
              "src": "1162:21:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 276,
              "nodeType": "StructuredDocumentation",
              "src": "1211:170:4",
              "text": " @notice Token multiplier to give a price on the Hwt token\n @dev As our Hwt token don't have any value on the market, we use a basic multiplier"
            },
            "id": 279,
            "mutability": "mutable",
            "name": "customTokenMultiplier",
            "nameLocation": "1394:21:4",
            "nodeType": "VariableDeclaration",
            "scope": 453,
            "src": "1387:49:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 277,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "1387:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "hexValue": "383030303030303030303030303030303030",
              "id": 278,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1418:18:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_800000000000000000_by_1",
                "typeString": "int_const 800000000000000000"
              },
              "value": "800000000000000000"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 292,
              "nodeType": "Block",
              "src": "1657:92:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 285,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 282,
                          "src": "1676:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1686:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1676:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920616d6f756e742061626f7665207a65726f2061726520617574686f72697a6564",
                        "id": 288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1689:39:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39",
                          "typeString": "literal_string \"Only amount above zero are authorized\""
                        },
                        "value": "Only amount above zero are authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39",
                          "typeString": "literal_string \"Only amount above zero are authorized\""
                        }
                      ],
                      "id": 284,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1668:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1668:61:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 290,
                  "nodeType": "ExpressionStatement",
                  "src": "1668:61:4"
                },
                {
                  "id": 291,
                  "nodeType": "PlaceholderStatement",
                  "src": "1740:1:4"
                }
              ]
            },
            "documentation": {
              "id": 280,
              "nodeType": "StructuredDocumentation",
              "src": "1496:103:4",
              "text": " @notice Modifier that allow only amount greater than zero to be staked or unstaked"
            },
            "id": 293,
            "name": "onlyAmountGreaterThanZero",
            "nameLocation": "1614:25:4",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 282,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1648:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 293,
                  "src": "1640:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1640:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1639:17:4"
            },
            "src": "1605:144:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 294,
              "nodeType": "StructuredDocumentation",
              "src": "1805:193:4",
              "text": " @notice Event informing an amount was staked in the Liquidity Pool\n @param staker The address that staked\n @param stakedAmount The amount that has been staked"
            },
            "eventSelector": "3d38832b715af529dbcd52809af95a3d65307ee7464f4e451c3c468b49442df7",
            "id": 300,
            "name": "AmountStaked",
            "nameLocation": "2010:12:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 296,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "2032:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "2024:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 295,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2024:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 298,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "stakedAmount",
                  "nameLocation": "2048:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "2040:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 297,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2040:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2023:38:4"
            },
            "src": "2004:58:4"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 301,
              "nodeType": "StructuredDocumentation",
              "src": "2070:201:4",
              "text": " @notice Event informing an amount was unstaked in the Liquidity Pool\n @param staker The address that unstaked\n @param unstakedAmount The amount that has been unstaked"
            },
            "eventSelector": "3425a37fe438dba566444a6c4d5ac2d0e3c39e0e1685eed68b0bac0f8d45758b",
            "id": 307,
            "name": "AmountUnstaked",
            "nameLocation": "2283:14:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 303,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "2307:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 307,
                  "src": "2299:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 302,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2299:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 305,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "unstakedAmount",
                  "nameLocation": "2323:14:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 307,
                  "src": "2315:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 304,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2315:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2298:40:4"
            },
            "src": "2277:62:4"
          },
          {
            "body": {
              "id": 325,
              "nodeType": "Block",
              "src": "2603:136:4",
              "statements": [
                {
                  "expression": {
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 313,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 271,
                      "src": "2614:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$228",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 315,
                          "name": "_tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 310,
                          "src": "2629:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 314,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "2622:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$228_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2622:21:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$228",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2614:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$228",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 318,
                  "nodeType": "ExpressionStatement",
                  "src": "2614:29:4"
                },
                {
                  "expression": {
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 319,
                      "name": "priceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 275,
                      "src": "2654:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307839333236424641303241444432333636623330626163423132353236304166363431303331333331",
                          "id": 321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2688:42:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x9326BFA02ADD2366b30bacB125260Af641031331"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 320,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "2666:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2666:65:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "2654:77:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 324,
                  "nodeType": "ExpressionStatement",
                  "src": "2654:77:4"
                }
              ]
            },
            "documentation": {
              "id": 308,
              "nodeType": "StructuredDocumentation",
              "src": "2396:166:4",
              "text": " @notice Create erc20 instance that will be used for the liquidity pool\n @param _tokenAddress the smart contract address of the erc20 token"
            },
            "id": 326,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 310,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "2588:13:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 326,
                  "src": "2580:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 309,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2580:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2579:23:4"
            },
            "returnParameters": {
              "id": 312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2603:0:4"
            },
            "scope": 453,
            "src": "2568:171:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 380,
              "nodeType": "Block",
              "src": "3070:547:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 336,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 329,
                          "src": "3089:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3099:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3089:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e206f6e6c7920696e7365727420612076616c75652067726561746572207468616e2030",
                        "id": 339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3102:44:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3ea53b8c1e96face02f4faaa58de9d934e15e0121d92de244dedd951895cc45a",
                          "typeString": "literal_string \"You can only insert a value greater than 0\""
                        },
                        "value": "You can only insert a value greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3ea53b8c1e96face02f4faaa58de9d934e15e0121d92de244dedd951895cc45a",
                          "typeString": "literal_string \"You can only insert a value greater than 0\""
                        }
                      ],
                      "id": 335,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3081:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3081:66:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 341,
                  "nodeType": "ExpressionStatement",
                  "src": "3081:66:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 345,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3185:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3185:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 349,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "3205:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DeFiProtocol_$453",
                                  "typeString": "contract DeFiProtocol"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DeFiProtocol_$453",
                                  "typeString": "contract DeFiProtocol"
                                }
                              ],
                              "id": 348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3197:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 347,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3197:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3197:13:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 351,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 329,
                            "src": "3212:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 343,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 271,
                            "src": "3166:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$228",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 227,
                          "src": "3166:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3166:54:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206d7573742068617665207468652062616c616e636520696e20796f75722077616c6c657420616e6420617070726f7665207468697320636f6e7472616374",
                        "id": 353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3222:68:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa003688d4927f6231f75893f596b02836dcfd1e207a1e5d6b4c7b36a6be7768",
                          "typeString": "literal_string \"You must have the balance in your wallet and approve this contract\""
                        },
                        "value": "You must have the balance in your wallet and approve this contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa003688d4927f6231f75893f596b02836dcfd1e207a1e5d6b4c7b36a6be7768",
                          "typeString": "literal_string \"You must have the balance in your wallet and approve this contract\""
                        }
                      ],
                      "id": 342,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3158:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3158:133:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 355,
                  "nodeType": "ExpressionStatement",
                  "src": "3158:133:4"
                },
                {
                  "expression": {
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 356,
                      "name": "totalValueLocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 267,
                      "src": "3361:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 357,
                        "name": "totalValueLocked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 267,
                        "src": "3380:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 358,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 329,
                        "src": "3400:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3380:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3361:46:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 361,
                  "nodeType": "ExpressionStatement",
                  "src": "3361:46:4"
                },
                {
                  "expression": {
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 362,
                        "name": "storedValuePerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 263,
                        "src": "3471:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 365,
                      "indexExpression": {
                        "expression": {
                          "id": 363,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3493:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3493:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3471:33:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 366,
                          "name": "storedValuePerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 263,
                          "src": "3507:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 369,
                        "indexExpression": {
                          "expression": {
                            "id": 367,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3529:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3529:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3507:33:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 370,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 329,
                        "src": "3543:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3507:43:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3471:79:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 373,
                  "nodeType": "ExpressionStatement",
                  "src": "3471:79:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 375,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3589:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3589:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 377,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 329,
                        "src": "3601:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 374,
                      "name": "AmountStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 300,
                      "src": "3576:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3576:33:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 379,
                  "nodeType": "EmitStatement",
                  "src": "3571:38:4"
                }
              ]
            },
            "documentation": {
              "id": 327,
              "nodeType": "StructuredDocumentation",
              "src": "2747:233:4",
              "text": " @notice Stake token in the Liquidity pool\n @dev Refresh the stored amount in the address mapping storedValuePerAddress and refresh the TVL\n @param _amount Total amount to store in the liquidity pool"
            },
            "functionSelector": "a694fc3a",
            "id": 381,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 332,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 329,
                    "src": "3061:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 333,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 331,
                  "name": "onlyAmountGreaterThanZero",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 293,
                  "src": "3035:25:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "3035:34:4"
              }
            ],
            "name": "stake",
            "nameLocation": "2995:5:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 329,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3009:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 381,
                  "src": "3001:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 328,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3001:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3000:17:4"
            },
            "returnParameters": {
              "id": 334,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3070:0:4"
            },
            "scope": 453,
            "src": "2986:631:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 432,
              "nodeType": "Block",
              "src": "3993:580:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 391,
                            "name": "storedValuePerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 263,
                            "src": "4069:21:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 394,
                          "indexExpression": {
                            "expression": {
                              "id": 392,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4091:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4091:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4069:33:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 395,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 384,
                          "src": "4106:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4069:44:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206469646e27742073746f726564207468697320616d6f756e7420696e2074686520706f6f6c",
                        "id": 397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4115:43:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9",
                          "typeString": "literal_string \"You didn't stored this amount in the pool\""
                        },
                        "value": "You didn't stored this amount in the pool"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9",
                          "typeString": "literal_string \"You didn't stored this amount in the pool\""
                        }
                      ],
                      "id": 390,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4061:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4061:98:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 399,
                  "nodeType": "ExpressionStatement",
                  "src": "4061:98:4"
                },
                {
                  "expression": {
                    "id": 404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 400,
                      "name": "totalValueLocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 267,
                      "src": "4221:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 401,
                        "name": "totalValueLocked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 267,
                        "src": "4240:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 402,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 384,
                        "src": "4260:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4240:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4221:46:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 405,
                  "nodeType": "ExpressionStatement",
                  "src": "4221:46:4"
                },
                {
                  "expression": {
                    "id": 416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 406,
                        "name": "storedValuePerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 263,
                        "src": "4331:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 409,
                      "indexExpression": {
                        "expression": {
                          "id": 407,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4353:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4353:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4331:33:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 410,
                          "name": "storedValuePerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 263,
                          "src": "4367:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 413,
                        "indexExpression": {
                          "expression": {
                            "id": 411,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4389:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4389:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4367:33:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 414,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 384,
                        "src": "4403:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4367:43:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4331:79:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 417,
                  "nodeType": "ExpressionStatement",
                  "src": "4331:79:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 421,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4484:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4484:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 423,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 384,
                        "src": "4496:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 418,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 271,
                        "src": "4469:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$228",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 195,
                      "src": "4469:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4469:35:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 425,
                  "nodeType": "ExpressionStatement",
                  "src": "4469:35:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 427,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4545:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4545:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 429,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 384,
                        "src": "4557:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 426,
                      "name": "AmountUnstaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 307,
                      "src": "4530:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4530:35:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 431,
                  "nodeType": "EmitStatement",
                  "src": "4525:40:4"
                }
              ]
            },
            "documentation": {
              "id": 382,
              "nodeType": "StructuredDocumentation",
              "src": "3625:276:4",
              "text": " @notice Unstake the tokens in the Liquidity pool, user can retrieve their tokens\n @dev Refresh the stored amount in the address mapping storedValuePerAddress and refresh the TVL\n @param _amount Total amount to unstake from the liquidity pool"
            },
            "functionSelector": "2e17de78",
            "id": 433,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 387,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 384,
                    "src": "3984:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 388,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 386,
                  "name": "onlyAmountGreaterThanZero",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 293,
                  "src": "3958:25:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "3958:34:4"
              }
            ],
            "name": "unstake",
            "nameLocation": "3916:7:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 384,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3932:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 433,
                  "src": "3924:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 383,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3924:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3923:17:4"
            },
            "returnParameters": {
              "id": 389,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3993:0:4"
            },
            "scope": 453,
            "src": "3907:666:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 451,
              "nodeType": "Block",
              "src": "4889:255:4",
              "statements": [
                {
                  "assignments": [
                    null,
                    442,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 442,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "4954:5:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 451,
                      "src": "4950:9:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 441,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "4950:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 446,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 443,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 275,
                        "src": "5080:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "5080:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5080:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4902:205:4"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "30",
                        "id": 447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5127:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 448,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 442,
                        "src": "5130:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "id": 449,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5126:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_int256_$",
                      "typeString": "tuple(int_const 0,int256)"
                    }
                  },
                  "functionReturnParameters": 440,
                  "id": 450,
                  "nodeType": "Return",
                  "src": "5120:16:4"
                }
              ]
            },
            "documentation": {
              "id": 434,
              "nodeType": "StructuredDocumentation",
              "src": "4581:218:4",
              "text": " @notice Get the token staked amount and the price in USD\n @dev USD Price is retrieved thanks to Chainlink\n @return total token staked by msg.sender\n @return price of the amount"
            },
            "functionSelector": "125c01e7",
            "id": 452,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakedAmountAndPrice",
            "nameLocation": "4814:23:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 435,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4837:2:4"
            },
            "returnParameters": {
              "id": 440,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 437,
                  "mutability": "mutable",
                  "name": "total",
                  "nameLocation": "4871:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 452,
                  "src": "4863:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 436,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4863:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 439,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "4882:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 452,
                  "src": "4878:9:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 438,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "4878:3:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4862:26:4"
            },
            "scope": 453,
            "src": "4805:339:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 454,
        "src": "457:4690:4",
        "usedErrors": []
      }
    ],
    "src": "39:5108:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {
    "42": {
      "events": {
        "0x3d38832b715af529dbcd52809af95a3d65307ee7464f4e451c3c468b49442df7": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "stakedAmount",
              "type": "uint256"
            }
          ],
          "name": "AmountStaked",
          "type": "event"
        },
        "0x3425a37fe438dba566444a6c4d5ac2d0e3c39e0e1685eed68b0bac0f8d45758b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "unstakedAmount",
              "type": "uint256"
            }
          ],
          "name": "AmountUnstaked",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x298586ADb402007F58eb0016666cb19936388258",
      "transactionHash": "0xf9ad99eb2be06532c864e16dda32ffca7ae152fe0588d10653cdaa6c64fefcc4"
    }
  },
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-05-06T16:17:17.078Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "The Hello World Team",
    "events": {
      "AmountStaked(address,uint256)": {
        "params": {
          "stakedAmount": "The amount that has been staked",
          "staker": "The address that staked"
        }
      },
      "AmountUnstaked(address,uint256)": {
        "params": {
          "staker": "The address that unstaked",
          "unstakedAmount": "The amount that has been unstaked"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_tokenAddress": "the smart contract address of the erc20 token"
        }
      },
      "getStakedAmountAndPrice()": {
        "details": "USD Price is retrieved thanks to Chainlink",
        "returns": {
          "price": "of the amount",
          "total": "token staked by msg.sender"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "stake(uint256)": {
        "details": "Refresh the stored amount in the address mapping storedValuePerAddress and refresh the TVL",
        "params": {
          "_amount": "Total amount to store in the liquidity pool"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unstake(uint256)": {
        "details": "Refresh the stored amount in the address mapping storedValuePerAddress and refresh the TVL",
        "params": {
          "_amount": "Total amount to unstake from the liquidity pool"
        }
      }
    },
    "stateVariables": {
      "customTokenMultiplier": {
        "details": "As our Hwt token don't have any value on the market, we use a basic multiplier"
      },
      "priceFeed": {
        "details": "Use Chainlink to retrieve the USD price of the token"
      },
      "token": {
        "details": "Initialized on the constructor"
      },
      "totalValueLocked": {
        "details": "The TVL is public because front may want to display it"
      }
    },
    "title": "Hello World DeFi Protocol",
    "version": 1
  },
  "userdoc": {
    "events": {
      "AmountStaked(address,uint256)": {
        "notice": "Event informing an amount was staked in the Liquidity Pool"
      },
      "AmountUnstaked(address,uint256)": {
        "notice": "Event informing an amount was unstaked in the Liquidity Pool"
      }
    },
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Create erc20 instance that will be used for the liquidity pool"
      },
      "getStakedAmountAndPrice()": {
        "notice": "Get the token staked amount and the price in USD"
      },
      "stake(uint256)": {
        "notice": "Stake token in the Liquidity pool"
      },
      "totalValueLocked()": {
        "notice": "The Total Value Locked(TVL) of the liquidity pool"
      },
      "unstake(uint256)": {
        "notice": "Unstake the tokens in the Liquidity pool, user can retrieve their tokens"
      }
    },
    "notice": "This contract offer the possibility to stake ERC20 in Liquidity Pools to receive Hello World Token rewards",
    "version": 1
  }
}