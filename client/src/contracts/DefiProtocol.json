{
  "contractName": "DeFiProtocol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "stakedAmount",
          "type": "uint256"
        }
      ],
      "name": "AmountStaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "unstakedAmount",
          "type": "uint256"
        }
      ],
      "name": "AmountUnstaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardClaimedAmount",
          "type": "uint256"
        }
      ],
      "name": "RewardOffered",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "hwtTokenUsdValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalValueLocked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "unstake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "getStakedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stakedAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getTimeStamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "actualStamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "userStamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getTokenPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "tokenPrice",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getRewardAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "claimReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"}],\"name\":\"AmountStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakedAmount\",\"type\":\"uint256\"}],\"name\":\"AmountUnstaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardClaimedAmount\",\"type\":\"uint256\"}],\"name\":\"RewardOffered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"actualStamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userStamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"tokenPrice\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hwtTokenUsdValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalValueLocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"The Hello World Team\",\"events\":{\"AmountStaked(uint256)\":{\"params\":{\"stakedAmount\":\"The amount that has been staked\"}},\"AmountUnstaked(uint256)\":{\"params\":{\"unstakedAmount\":\"The amount that has been unstaked\"}},\"RewardOffered(uint256)\":{\"params\":{\"rewardClaimedAmount\":\"The amount that has been offered\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_tokenAddress\":\"the smart contract address of the erc20 token\"}},\"getRewardAmount()\":{\"returns\":{\"reward\":\"The reward computed by the contract\"}},\"getStakedAmount()\":{\"returns\":{\"stakedAmount\":\"token staked by msg.sender\"}},\"getTokenPrice()\":{\"details\":\"USD Price is retrieved thanks to ChainlinkCan't be unit tested because of Ganache\",\"returns\":{\"tokenPrice\":\"price of the token\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"stake(uint256)\":{\"details\":\"Refresh the stored amount in the address mapping storedValuePerAddress and refresh the TVL\",\"params\":{\"_amount\":\"Total amount to store in the liquidity pool\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unstake(uint256)\":{\"details\":\"Refresh the stored amount in the address mapping stakerDataPerAddress and refresh the TVL\",\"params\":{\"_amount\":\"Total amount to unstake from the liquidity pool\"}}},\"stateVariables\":{\"hwtTokenUsdValue\":{\"details\":\"As our Hwt token don't have any value on the market, we use a basic multiplier\"},\"priceFeed\":{\"details\":\"Use Chainlink to retrieve the USD price of the token\"},\"token\":{\"details\":\"Initialized on the constructor\"},\"totalValueLocked\":{\"details\":\"The TVL is public because front may want to display it\"}},\"title\":\"Hello World DeFi Protocol\",\"version\":1},\"userdoc\":{\"events\":{\"AmountStaked(uint256)\":{\"notice\":\"Event informing total amount staked in the Liquidity Pool\"},\"AmountUnstaked(uint256)\":{\"notice\":\"Event informing an amount was unstaked in the Liquidity Pool\"},\"RewardOffered(uint256)\":{\"notice\":\"Event informing a reward was send\"}},\"kind\":\"user\",\"methods\":{\"claimReward()\":{\"notice\":\"Send then reward to the msg.sender\"},\"constructor\":{\"notice\":\"Create erc20 instance that will be used for the liquidity pool\"},\"getRewardAmount()\":{\"notice\":\"Get the reward for msg.sender\"},\"getStakedAmount()\":{\"notice\":\"Get the msg.sender token staked amount\"},\"getTokenPrice()\":{\"notice\":\"Get the token price in USD\"},\"hwtTokenUsdValue()\":{\"notice\":\"Token multiplier to give a price on the Hwt token\"},\"stake(uint256)\":{\"notice\":\"Stake token in the Liquidity pool\"},\"totalValueLocked()\":{\"notice\":\"The Total Value Locked(TVL) of the liquidity pool\"},\"unstake(uint256)\":{\"notice\":\"Unstake the tokens in the Liquidity pool, user can retrieve their tokens\"}},\"notice\":\"This contract offer the possibility to stake ERC20 in Liquidity Pools to receive Hello World Token rewards\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/DeFiProtocol.sol\":\"DeFiProtocol\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/DeFiProtocol.sol\":{\"keccak256\":\"0x1de286d4bc0b33960016d2a7540636e80a91a2c3f69e718fa6ec0126de627c50\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e04b2d514c3c2eb8248cd50a46a37a4871d3a0a7b2f4cc31606c7e92786d087e\",\"dweb:/ipfs/QmQAkVZKnRcGoMq4GavHXeaVAJZ6FtRLY6htfGN7XmKqfx\"]}},\"version\":1}",
  "bytecode": "0x60806040526000600255670ced5a509046c00060055564d7957c64256006553480156200002b57600080fd5b50604051620016ee380380620016ee833981810160405281019062000051919062000244565b62000071620000656200010e60201b60201c565b6200011660201b60201c565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550732c1d072e956affc0d435cb7ac38ef18d24d9127c600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000276565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200020c82620001df565b9050919050565b6200021e81620001ff565b81146200022a57600080fd5b50565b6000815190506200023e8162000213565b92915050565b6000602082840312156200025d576200025c620001da565b5b60006200026d848285016200022d565b91505092915050565b61146880620002866000396000f3fe6080604052600436106100a75760003560e01c8063a4e15db911610064578063a4e15db91461018b578063a694fc3a146101b6578063b88a802f146101d2578063da235b22146101e9578063ec18154e14610215578063f2fde38b14610240576100a7565b806309a69f57146100ac5780632e17de78146100d75780634b94f50e146100f3578063715018a61461011e5780637cd9e6aa146101355780638da5cb5b14610160575b600080fd5b3480156100b857600080fd5b506100c1610269565b6040516100ce9190610cd2565b60405180910390f35b6100f160048036038101906100ec9190610d1e565b6102e0565b005b3480156100ff57600080fd5b506101086104fa565b6040516101159190610d64565b60405180910390f35b34801561012a57600080fd5b5061013361059b565b005b34801561014157600080fd5b5061014a610623565b6040516101579190610cd2565b60405180910390f35b34801561016c57600080fd5b50610175610629565b6040516101829190610dc0565b60405180910390f35b34801561019757600080fd5b506101a0610652565b6040516101ad9190610cd2565b60405180910390f35b6101d060048036038101906101cb9190610d1e565b61069c565b005b3480156101de57600080fd5b506101e7610883565b005b3480156101f557600080fd5b506101fe610a2e565b60405161020c929190610ddb565b60405180910390f35b34801561022157600080fd5b5061022a610a7d565b6040516102379190610cd2565b60405180910390f35b34801561024c57600080fd5b5061026760048036038101906102629190610e30565b610a83565b005b60006102db600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820154815260200160018201548152602001600282015481525050610b7a565b905090565b8060008111610324576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031b90610ee0565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080600001548311156103ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a590610f72565b60405180910390fd5b6103e0816040518060600160405290816000820154815260200160018201548152602001600282015481525050610b7a565b81600201819055508281600001546103f89190610fc1565b8160000181905550428160010181905550826002546104179190610fc1565b600281905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b815260040161047a929190610ff5565b6020604051808303816000875af1158015610499573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104bd9190611056565b507f2f8effe7ffe0e306b06e4755a1a92f6d3bc946de9c4f6a406dbc132c86eb36d4836040516104ed9190610cd2565b60405180910390a1505050565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561056a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058e9190611106565b5050509150508091505090565b6105a3610bed565b73ffffffffffffffffffffffffffffffffffffffff166105c1610629565b73ffffffffffffffffffffffffffffffffffffffff1614610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e906111cd565b60405180910390fd5b6106216000610bf5565b565b60055481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b80600081116106e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d790610ee0565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161073f939291906111ed565b6020604051808303816000875af115801561075e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107829190611056565b506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160000154111561080e57610805816040518060600160405290816000820154815260200160018201548152602001600282015481525050610b7a565b81600201819055505b82816000015461081e9190611224565b81600001819055504281600101819055508260025461083d9190611224565b6002819055507fd8e1da2ea55fa9c4413c33f029c3f3fb5289e22eb1cab9d922ffb18f5d9a273e81600001546040516108769190610cd2565b60405180910390a1505050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060006108fa826040518060600160405290816000820154815260200160018201548152602001600282015481525050610b7a565b90506000811161093f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610936906112c6565b60405180910390fd5b42826001018190555060008260020181905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016109af929190610ff5565b6020604051808303816000875af11580156109ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f29190611056565b507f39a5d140e3e3a18613a91b12d365dc0c589797b664f414f85ff68161ac6fbbb681604051610a229190610cd2565b60405180910390a15050565b60008042600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154915091509091565b60025481565b610a8b610bed565b73ffffffffffffffffffffffffffffffffffffffff16610aa9610629565b73ffffffffffffffffffffffffffffffffffffffff1614610aff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af6906111cd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6590611358565b60405180910390fd5b610b7781610bf5565b50565b6000808260000151600654846020015142610b959190610fc1565b610b9f9190611378565b610ba99190611378565b90506000811115610bdf57670de0b6b3a764000081610bc89190611401565b8360400151610bd79190611224565b915050610be8565b82604001519150505b919050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000819050919050565b610ccc81610cb9565b82525050565b6000602082019050610ce76000830184610cc3565b92915050565b600080fd5b610cfb81610cb9565b8114610d0657600080fd5b50565b600081359050610d1881610cf2565b92915050565b600060208284031215610d3457610d33610ced565b5b6000610d4284828501610d09565b91505092915050565b6000819050919050565b610d5e81610d4b565b82525050565b6000602082019050610d796000830184610d55565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610daa82610d7f565b9050919050565b610dba81610d9f565b82525050565b6000602082019050610dd56000830184610db1565b92915050565b6000604082019050610df06000830185610cc3565b610dfd6020830184610cc3565b9392505050565b610e0d81610d9f565b8114610e1857600080fd5b50565b600081359050610e2a81610e04565b92915050565b600060208284031215610e4657610e45610ced565b5b6000610e5484828501610e1b565b91505092915050565b600082825260208201905092915050565b7f4f6e6c7920616d6f756e742061626f7665207a65726f2061726520617574686f60008201527f72697a6564000000000000000000000000000000000000000000000000000000602082015250565b6000610eca602583610e5d565b9150610ed582610e6e565b604082019050919050565b60006020820190508181036000830152610ef981610ebd565b9050919050565b7f596f75206469646e27742073746f726564207468697320616d6f756e7420696e60008201527f2074686520706f6f6c0000000000000000000000000000000000000000000000602082015250565b6000610f5c602983610e5d565b9150610f6782610f00565b604082019050919050565b60006020820190508181036000830152610f8b81610f4f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610fcc82610cb9565b9150610fd783610cb9565b925082821015610fea57610fe9610f92565b5b828203905092915050565b600060408201905061100a6000830185610db1565b6110176020830184610cc3565b9392505050565b60008115159050919050565b6110338161101e565b811461103e57600080fd5b50565b6000815190506110508161102a565b92915050565b60006020828403121561106c5761106b610ced565b5b600061107a84828501611041565b91505092915050565b600069ffffffffffffffffffff82169050919050565b6110a281611083565b81146110ad57600080fd5b50565b6000815190506110bf81611099565b92915050565b6110ce81610d4b565b81146110d957600080fd5b50565b6000815190506110eb816110c5565b92915050565b60008151905061110081610cf2565b92915050565b600080600080600060a0868803121561112257611121610ced565b5b6000611130888289016110b0565b9550506020611141888289016110dc565b9450506040611152888289016110f1565b9350506060611163888289016110f1565b9250506080611174888289016110b0565b9150509295509295909350565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006111b7602083610e5d565b91506111c282611181565b602082019050919050565b600060208201905081810360008301526111e6816111aa565b9050919050565b60006060820190506112026000830186610db1565b61120f6020830185610db1565b61121c6040830184610cc3565b949350505050565b600061122f82610cb9565b915061123a83610cb9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561126f5761126e610f92565b5b828201905092915050565b7f4e6f2072657761726420746f20636c61696d0000000000000000000000000000600082015250565b60006112b0601283610e5d565b91506112bb8261127a565b602082019050919050565b600060208201905081810360008301526112df816112a3565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611342602683610e5d565b915061134d826112e6565b604082019050919050565b6000602082019050818103600083015261137181611335565b9050919050565b600061138382610cb9565b915061138e83610cb9565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156113c7576113c6610f92565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061140c82610cb9565b915061141783610cb9565b925082611427576114266113d2565b5b82820490509291505056fea2646970667358221220b727e4c226a7579eb915367ab42ceae024b3ec5c979631bb054f876db6af185d64736f6c634300080d0033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1199:5",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:5",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:5",
                "type": ""
              }
            ],
            "src": "7:75:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:5",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:5"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:5",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:5"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:5",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:5",
                "type": ""
              }
            ],
            "src": "334:126:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:5",
                "type": ""
              }
            ],
            "src": "466:96:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:5"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:5"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:5"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:5",
                "type": ""
              }
            ],
            "src": "568:122:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "759:80:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "769:22:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "784:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "778:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "778:13:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "769:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "827:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "800:26:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "800:33:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "800:33:5"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "737:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "745:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "753:5:5",
                "type": ""
              }
            ],
            "src": "696:143:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "922:274:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "968:83:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "970:77:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "970:79:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "970:79:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "943:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "952:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "939:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "939:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "964:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "935:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "935:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "932:119:5"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1061:128:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1076:15:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1090:1:5",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1080:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1105:74:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1151:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1162:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1147:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1147:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1171:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1115:31:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1115:64:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1105:6:5"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "892:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "903:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "915:6:5",
                "type": ""
              }
            ],
            "src": "845:351:5"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 5,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:13256:5",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:32:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:16:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "73:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:5",
                "type": ""
              }
            ],
            "src": "7:77:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "155:53:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "172:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "195:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "177:17:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "177:24:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "165:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:37:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "165:37:5"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "143:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "150:3:5",
                "type": ""
              }
            ],
            "src": "90:118:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "312:124:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "322:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "334:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "345:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "330:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "330:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "322:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "402:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "415:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "426:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "411:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "411:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "358:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "358:71:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "358:71:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "284:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "296:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "307:4:5",
                "type": ""
              }
            ],
            "src": "214:222:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "482:35:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "492:19:5",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "508:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "502:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "502:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "492:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "475:6:5",
                "type": ""
              }
            ],
            "src": "442:75:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "612:28:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "629:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "632:1:5",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "622:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "622:12:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "622:12:5"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "523:117:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "735:28:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "752:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "755:1:5",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "745:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "745:12:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "745:12:5"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "646:117:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "812:79:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "869:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "878:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "881:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "871:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "871:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "871:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "835:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "860:5:5"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "842:17:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "842:24:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "832:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "832:35:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "825:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "825:43:5"
                  },
                  "nodeType": "YulIf",
                  "src": "822:63:5"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "805:5:5",
                "type": ""
              }
            ],
            "src": "769:122:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "949:87:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "959:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "981:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "968:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "968:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "959:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1024:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "997:26:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "997:33:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "997:33:5"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "927:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "935:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "943:5:5",
                "type": ""
              }
            ],
            "src": "897:139:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1108:263:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1154:83:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1156:77:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1156:79:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1156:79:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1129:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1138:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1125:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1125:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1150:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1121:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1121:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "1118:119:5"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1247:117:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1262:15:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1276:1:5",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1266:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1291:63:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1326:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1337:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1322:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1322:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1346:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1301:20:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1301:53:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1291:6:5"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1078:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1089:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1101:6:5",
                "type": ""
              }
            ],
            "src": "1042:329:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1421:32:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1431:16:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1442:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1431:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1403:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1413:7:5",
                "type": ""
              }
            ],
            "src": "1377:76:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1522:52:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1539:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1561:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_int256",
                          "nodeType": "YulIdentifier",
                          "src": "1544:16:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1544:23:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1532:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1532:36:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1532:36:5"
                }
              ]
            },
            "name": "abi_encode_t_int256_to_t_int256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1510:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1517:3:5",
                "type": ""
              }
            ],
            "src": "1459:115:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1676:122:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1686:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1698:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1709:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1694:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1694:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1686:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1764:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1777:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1788:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1773:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1773:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_int256_to_t_int256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1722:41:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1722:69:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1722:69:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1648:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1660:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1671:4:5",
                "type": ""
              }
            ],
            "src": "1580:218:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1849:81:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1859:65:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1874:5:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1881:42:5",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1870:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1870:54:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1859:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1831:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1841:7:5",
                "type": ""
              }
            ],
            "src": "1804:126:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1981:51:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1991:35:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2020:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2002:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2002:24:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1991:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1963:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1973:7:5",
                "type": ""
              }
            ],
            "src": "1936:96:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2103:53:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2120:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2143:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2125:17:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2125:24:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2113:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2113:37:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2113:37:5"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2091:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2098:3:5",
                "type": ""
              }
            ],
            "src": "2038:118:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2260:124:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2270:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2282:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2293:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2278:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2278:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2270:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2350:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2363:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2374:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2359:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2359:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2306:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2306:71:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2306:71:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2232:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2244:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2255:4:5",
                "type": ""
              }
            ],
            "src": "2162:222:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2516:206:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2526:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2538:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2549:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2534:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2534:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2526:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2606:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2619:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2630:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2615:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2615:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2562:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2562:71:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2562:71:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2687:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2700:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2711:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2696:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2696:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2643:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2643:72:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2643:72:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2480:9:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2492:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2500:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2511:4:5",
                "type": ""
              }
            ],
            "src": "2390:332:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2771:79:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2828:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2837:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2840:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2830:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2830:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2830:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2794:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2819:5:5"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2801:17:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2801:24:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2791:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2791:35:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2784:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2784:43:5"
                  },
                  "nodeType": "YulIf",
                  "src": "2781:63:5"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2764:5:5",
                "type": ""
              }
            ],
            "src": "2728:122:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2908:87:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2918:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2940:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2927:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2927:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2918:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2983:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2956:26:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2956:33:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2956:33:5"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2886:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2894:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2902:5:5",
                "type": ""
              }
            ],
            "src": "2856:139:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3067:263:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3113:83:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3115:77:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3115:79:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3115:79:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3088:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3097:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3084:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3084:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3109:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3080:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3080:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "3077:119:5"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3206:117:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3221:15:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3235:1:5",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3225:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3250:63:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3285:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3296:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3281:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3281:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3305:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3260:20:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3260:53:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3250:6:5"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3037:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3048:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3060:6:5",
                "type": ""
              }
            ],
            "src": "3001:329:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3432:73:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3449:3:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3454:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3442:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3442:19:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3442:19:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3470:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3489:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3494:4:5",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3485:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3485:14:5"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "3470:11:5"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3404:3:5",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3409:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "3420:11:5",
                "type": ""
              }
            ],
            "src": "3336:169:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3617:118:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3639:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3647:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3635:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3635:14:5"
                      },
                      {
                        "hexValue": "4f6e6c7920616d6f756e742061626f7665207a65726f2061726520617574686f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3651:34:5",
                        "type": "",
                        "value": "Only amount above zero are autho"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3628:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3628:58:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3628:58:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3707:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3715:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3703:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3703:15:5"
                      },
                      {
                        "hexValue": "72697a6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3720:7:5",
                        "type": "",
                        "value": "rized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3696:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3696:32:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3696:32:5"
                }
              ]
            },
            "name": "store_literal_in_memory_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3609:6:5",
                "type": ""
              }
            ],
            "src": "3511:224:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3887:220:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3897:74:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3963:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3968:2:5",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3904:58:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3904:67:5"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3897:3:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4069:3:5"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39",
                      "nodeType": "YulIdentifier",
                      "src": "3980:88:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3980:93:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3980:93:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4082:19:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4093:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4098:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4089:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4089:12:5"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4082:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3875:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3883:3:5",
                "type": ""
              }
            ],
            "src": "3741:366:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4284:248:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4294:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4306:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4317:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4302:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4302:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4294:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4341:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4352:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4337:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4337:17:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4360:4:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4366:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4356:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4356:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4330:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4330:47:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4330:47:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4386:139:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4520:4:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4394:124:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4394:131:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4386:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4264:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4279:4:5",
                "type": ""
              }
            ],
            "src": "4113:419:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4644:122:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4666:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4674:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4662:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4662:14:5"
                      },
                      {
                        "hexValue": "596f75206469646e27742073746f726564207468697320616d6f756e7420696e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4678:34:5",
                        "type": "",
                        "value": "You didn't stored this amount in"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4655:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4655:58:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4655:58:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4734:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4742:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4730:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4730:15:5"
                      },
                      {
                        "hexValue": "2074686520706f6f6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4747:11:5",
                        "type": "",
                        "value": " the pool"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4723:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4723:36:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4723:36:5"
                }
              ]
            },
            "name": "store_literal_in_memory_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4636:6:5",
                "type": ""
              }
            ],
            "src": "4538:228:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4918:220:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4928:74:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4994:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4999:2:5",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4935:58:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4935:67:5"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4928:3:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5100:3:5"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9",
                      "nodeType": "YulIdentifier",
                      "src": "5011:88:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5011:93:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5011:93:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5113:19:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5124:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5129:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5120:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5120:12:5"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5113:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4906:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4914:3:5",
                "type": ""
              }
            ],
            "src": "4772:366:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5315:248:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5325:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5337:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5348:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5333:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5333:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5325:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5372:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5383:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5368:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5368:17:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5391:4:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5397:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5387:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5387:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5361:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5361:47:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5361:47:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5417:139:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5551:4:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5425:124:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5425:131:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5417:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5295:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5310:4:5",
                "type": ""
              }
            ],
            "src": "5144:419:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5597:152:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5614:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5617:77:5",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5607:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5607:88:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5607:88:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5711:1:5",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5714:4:5",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5704:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5704:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5704:15:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5735:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5738:4:5",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5728:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5728:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5728:15:5"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "5569:180:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5800:146:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5810:25:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5833:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "5815:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5815:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "5810:1:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5844:25:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5867:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "5849:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5849:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "5844:1:5"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5891:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5893:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5893:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5893:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5885:1:5"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5888:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5882:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5882:8:5"
                  },
                  "nodeType": "YulIf",
                  "src": "5879:34:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5923:17:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5935:1:5"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5938:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "5931:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5931:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "5923:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5786:1:5",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5789:1:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "5795:4:5",
                "type": ""
              }
            ],
            "src": "5755:191:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6078:206:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6088:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6100:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6111:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6096:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6096:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6088:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6168:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6181:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6192:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6177:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6177:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6124:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6124:71:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6124:71:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6249:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6262:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6273:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6258:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6258:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6205:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6205:72:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6205:72:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6042:9:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6054:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6062:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6073:4:5",
                "type": ""
              }
            ],
            "src": "5952:332:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6332:48:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6342:32:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6367:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6360:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6360:13:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6353:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6353:21:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6342:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6314:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6324:7:5",
                "type": ""
              }
            ],
            "src": "6290:90:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6426:76:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6480:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6489:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6492:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6482:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6482:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6482:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6449:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6471:5:5"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "6456:14:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6456:21:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6446:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6446:32:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6439:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6439:40:5"
                  },
                  "nodeType": "YulIf",
                  "src": "6436:60:5"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6419:5:5",
                "type": ""
              }
            ],
            "src": "6386:116:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6568:77:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6578:22:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "6593:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6587:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6587:13:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "6578:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6633:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "6609:23:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6609:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6609:30:5"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "6546:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6554:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6562:5:5",
                "type": ""
              }
            ],
            "src": "6508:137:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6725:271:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6771:83:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "6773:77:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6773:79:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6773:79:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6746:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6755:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6742:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6742:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6767:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6738:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6738:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "6735:119:5"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6864:125:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6879:15:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6893:1:5",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6883:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6908:71:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6951:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6962:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6947:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6947:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6971:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "6918:28:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6918:61:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "6908:6:5"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6695:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6706:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6718:6:5",
                "type": ""
              }
            ],
            "src": "6651:345:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7046:61:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7056:45:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7071:5:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7078:22:5",
                        "type": "",
                        "value": "0xffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7067:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7067:34:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7056:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint80",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7028:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7038:7:5",
                "type": ""
              }
            ],
            "src": "7002:105:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7155:78:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7211:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7220:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7223:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7213:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7213:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7213:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7178:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7202:5:5"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint80",
                              "nodeType": "YulIdentifier",
                              "src": "7185:16:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7185:23:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "7175:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7175:34:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7168:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7168:42:5"
                  },
                  "nodeType": "YulIf",
                  "src": "7165:62:5"
                }
              ]
            },
            "name": "validator_revert_t_uint80",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7148:5:5",
                "type": ""
              }
            ],
            "src": "7113:120:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7301:79:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7311:22:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "7326:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7320:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7320:13:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "7311:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7368:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint80",
                      "nodeType": "YulIdentifier",
                      "src": "7342:25:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7342:32:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7342:32:5"
                }
              ]
            },
            "name": "abi_decode_t_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "7279:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7287:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7295:5:5",
                "type": ""
              }
            ],
            "src": "7239:141:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7428:78:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7484:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7493:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7496:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7486:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7486:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7486:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7451:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7475:5:5"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_int256",
                              "nodeType": "YulIdentifier",
                              "src": "7458:16:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7458:23:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "7448:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7448:34:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7441:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7441:42:5"
                  },
                  "nodeType": "YulIf",
                  "src": "7438:62:5"
                }
              ]
            },
            "name": "validator_revert_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7421:5:5",
                "type": ""
              }
            ],
            "src": "7386:120:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7574:79:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7584:22:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "7599:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7593:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7593:13:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "7584:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7641:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "7615:25:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7615:32:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7615:32:5"
                }
              ]
            },
            "name": "abi_decode_t_int256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "7552:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7560:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7568:5:5",
                "type": ""
              }
            ],
            "src": "7512:141:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7722:80:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7732:22:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "7747:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7741:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7741:13:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "7732:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7790:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7763:26:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7763:33:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7763:33:5"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "7700:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7708:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7716:5:5",
                "type": ""
              }
            ],
            "src": "7659:143:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7950:829:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7997:83:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "7999:77:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7999:79:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7999:79:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7971:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7980:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7967:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7967:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7992:3:5",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7963:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7963:33:5"
                  },
                  "nodeType": "YulIf",
                  "src": "7960:120:5"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8090:127:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8105:15:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8119:1:5",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "8109:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8134:73:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8179:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8190:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8175:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8175:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8199:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint80_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "8144:30:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8144:63:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "8134:6:5"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8227:128:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8242:16:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8256:2:5",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "8246:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8272:73:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8317:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8328:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8313:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8313:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8337:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_int256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "8282:30:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8282:63:5"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "8272:6:5"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8365:129:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8380:16:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8394:2:5",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "8384:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8410:74:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8456:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8467:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8452:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8452:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8476:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "8420:31:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8420:64:5"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "8410:6:5"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8504:129:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8519:16:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8533:2:5",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "8523:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8549:74:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8595:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8606:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8591:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8591:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8615:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "8559:31:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8559:64:5"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "8549:6:5"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8643:129:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8658:17:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8672:3:5",
                        "type": "",
                        "value": "128"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "8662:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8689:73:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8734:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8745:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8730:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8730:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8754:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint80_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "8699:30:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8699:63:5"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "8689:6:5"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7888:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7899:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7911:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7919:6:5",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7927:6:5",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "7935:6:5",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "7943:6:5",
                "type": ""
              }
            ],
            "src": "7808:971:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8891:76:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8913:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8921:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8909:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8909:14:5"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8925:34:5",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8902:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8902:58:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8902:58:5"
                }
              ]
            },
            "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8883:6:5",
                "type": ""
              }
            ],
            "src": "8785:182:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9119:220:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9129:74:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9195:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9200:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9136:58:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9136:67:5"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9129:3:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9301:3:5"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                      "nodeType": "YulIdentifier",
                      "src": "9212:88:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9212:93:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9212:93:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9314:19:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9325:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9330:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9321:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9321:12:5"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9314:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9107:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9115:3:5",
                "type": ""
              }
            ],
            "src": "8973:366:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9516:248:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9526:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9538:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9549:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9534:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9534:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9526:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9573:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9584:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9569:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9569:17:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9592:4:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9598:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9588:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9588:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9562:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9562:47:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9562:47:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9618:139:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9752:4:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9626:124:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9626:131:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9618:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9496:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9511:4:5",
                "type": ""
              }
            ],
            "src": "9345:419:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9924:288:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9934:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9946:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9957:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9942:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9942:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9934:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10014:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10027:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10038:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10023:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10023:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9970:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9970:71:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9970:71:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10095:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10108:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10119:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10104:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10104:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10051:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10051:72:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10051:72:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "10177:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10190:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10201:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10186:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10186:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10133:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10133:72:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10133:72:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9880:9:5",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "9892:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9900:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9908:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9919:4:5",
                "type": ""
              }
            ],
            "src": "9770:442:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10262:261:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10272:25:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10295:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10277:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10277:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "10272:1:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10306:25:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10329:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10311:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10311:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "10306:1:5"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10469:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10471:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10471:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10471:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10390:1:5"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10397:66:5",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "10465:1:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10393:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10393:74:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10387:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10387:81:5"
                  },
                  "nodeType": "YulIf",
                  "src": "10384:107:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10501:16:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10512:1:5"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10515:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10508:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10508:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "10501:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10249:1:5",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10252:1:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "10258:3:5",
                "type": ""
              }
            ],
            "src": "10218:305:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10635:62:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10657:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10665:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10653:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10653:14:5"
                      },
                      {
                        "hexValue": "4e6f2072657761726420746f20636c61696d",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10669:20:5",
                        "type": "",
                        "value": "No reward to claim"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10646:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10646:44:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10646:44:5"
                }
              ]
            },
            "name": "store_literal_in_memory_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "10627:6:5",
                "type": ""
              }
            ],
            "src": "10529:168:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10849:220:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10859:74:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10925:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10930:2:5",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10866:58:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10866:67:5"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10859:3:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11031:3:5"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655",
                      "nodeType": "YulIdentifier",
                      "src": "10942:88:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10942:93:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10942:93:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11044:19:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11055:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11060:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11051:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11051:12:5"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11044:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10837:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10845:3:5",
                "type": ""
              }
            ],
            "src": "10703:366:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11246:248:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11256:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11268:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11279:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11264:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11264:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11256:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11303:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11314:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11299:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11299:17:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11322:4:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11328:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11318:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11318:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11292:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11292:47:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11292:47:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11348:139:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11482:4:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11356:124:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11356:131:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11348:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11226:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11241:4:5",
                "type": ""
              }
            ],
            "src": "11075:419:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11606:119:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11628:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11636:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11624:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11624:14:5"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11640:34:5",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11617:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11617:58:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11617:58:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11696:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11704:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11692:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11692:15:5"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11709:8:5",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11685:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11685:33:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11685:33:5"
                }
              ]
            },
            "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "11598:6:5",
                "type": ""
              }
            ],
            "src": "11500:225:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11877:220:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11887:74:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11953:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11958:2:5",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11894:58:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11894:67:5"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "11887:3:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12059:3:5"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                      "nodeType": "YulIdentifier",
                      "src": "11970:88:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11970:93:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11970:93:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12072:19:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12083:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12088:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12079:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12079:12:5"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "12072:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11865:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11873:3:5",
                "type": ""
              }
            ],
            "src": "11731:366:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12274:248:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12284:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12296:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12307:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12292:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12292:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12284:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12331:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12342:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12327:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12327:17:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12350:4:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12356:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12346:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12346:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12320:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12320:47:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12320:47:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12376:139:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12510:4:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12384:124:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12384:131:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12376:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12254:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12269:4:5",
                "type": ""
              }
            ],
            "src": "12103:419:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12576:300:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12586:25:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12609:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "12591:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12591:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "12586:1:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12620:25:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12643:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "12625:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12625:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "12620:1:5"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12818:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12820:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12820:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12820:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "12730:1:5"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "12723:6:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12723:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "12716:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12716:17:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "12738:1:5"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12745:66:5",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "12813:1:5"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "12741:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12741:74:5"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "12735:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12735:81:5"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "12712:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12712:105:5"
                  },
                  "nodeType": "YulIf",
                  "src": "12709:131:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12850:20:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12865:1:5"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12868:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "12861:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12861:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "12850:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12559:1:5",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12562:1:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "12568:7:5",
                "type": ""
              }
            ],
            "src": "12528:348:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12910:152:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12927:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12930:77:5",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12920:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12920:88:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12920:88:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13024:1:5",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13027:4:5",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13017:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13017:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13017:15:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13048:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13051:4:5",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "13041:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13041:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13041:15:5"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "12882:180:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13110:143:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13120:25:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13143:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "13125:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13125:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "13120:1:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13154:25:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13177:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "13159:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13159:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "13154:1:5"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13201:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "13203:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13203:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13203:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13198:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "13191:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13191:9:5"
                  },
                  "nodeType": "YulIf",
                  "src": "13188:35:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13233:14:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13242:1:5"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13245:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "13238:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13238:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "13233:1:5"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13099:1:5",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13102:1:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "13108:1:5",
                "type": ""
              }
            ],
            "src": "13068:185:5"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only amount above zero are autho\")\n\n        mstore(add(memPtr, 32), \"rized\")\n\n    }\n\n    function abi_encode_t_stringliteral_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9(memPtr) {\n\n        mstore(add(memPtr, 0), \"You didn't stored this amount in\")\n\n        mstore(add(memPtr, 32), \" the pool\")\n\n    }\n\n    function abi_encode_t_stringliteral_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655(memPtr) {\n\n        mstore(add(memPtr, 0), \"No reward to claim\")\n\n    }\n\n    function abi_encode_t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
      "id": 5,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "457:7467:4:-:0;;;1152:1;1118:35;;1687:18;1656:49;;1812:12;1789:35;;3012:203;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:1;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;3073:13:4;3058:5;;:29;;;;;;;;;;;;;;;;;;3164:42;3130:9;;:77;;;;;;;;;;;;;;;;;;3012:203;457:7467;;640:96:3;693:7;719:10;712:17;;640:96;:::o;2270:187:1:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;457:7467:4:-;;;;;;;",
  "deployedSourceMap": "457:7467:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6532:137;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4527:859;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6069:332;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1668:101:1;;;;;;;;;;;;;:::i;:::-;;1656:49:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1036:85:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5523:141:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3462:776;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7380:541;;;;;;;;;;;;;:::i;:::-;;5672:173;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1118:35;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1918:198:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6532:137:4;6582:11;6613:47;6627:20;:32;6648:10;6627:32;;;;;;;;;;;;;;;6613:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:13;:47::i;:::-;6606:55;;6532:137;:::o;4527:859::-;4604:7;2071:1;2061:7;:11;2053:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;4634:29:::1;4666:20;:32;4687:10;4666:32;;;;;;;;;;;;;;;4634:64;;4795:10;:23;;;4784:7;:34;;4776:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;4975:25;4989:10;4975:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;:13;:25::i;:::-;4955:10;:17;;:45;;;;5065:7;5039:10;:23;;;:33;;;;:::i;:::-;5013:10;:23;;:59;;;;5112:15;5083:10;:26;;:44;;;;5228:7;5208:16;;:27;;;;:::i;:::-;5189:16;:46;;;;5294:5;;;;;;;;;;;:14;;;5309:10;5321:7;5294:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5355:23;5370:7;5355:23;;;;;;:::i;:::-;;;;;;;;4613:773;4527:859:::0;;:::o;6069:332::-;6117:14;6196:9;6340;;;;;;;;;;;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6146:221;;;;;;6387:5;6380:13;;;6069:332;:::o;1668:101:1:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1656:49:4:-;;;;:::o;1036:85:1:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;5523:141:4:-;5573:17;5610:20;:32;5631:10;5610:32;;;;;;;;;;;;;;;:45;;;5603:53;;5523:141;:::o;3462:776::-;3534:7;2071:1;2061:7;:11;2053:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;3564:5:::1;;;;;;;;;;;:18;;;3583:10;3603:4;3610:7;3564:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3682:29;3714:20;:32;3735:10;3714:32;;;;;;;;;;;;;;;3682:64;;3865:1;3839:10;:23;;;:27;3836:104;;;3903:25;3917:10;3903:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;:13;:25::i;:::-;3883:10;:17;;:45;;;;3836:104;4004:7;3978:10;:23;;;:33;;;;:::i;:::-;3952:10;:23;;:59;;;;4051:15;4022:10;:26;;:44;;;;4168:7;4148:16;;:27;;;;:::i;:::-;4129:16;:46;;;;4193:37;4206:10;:23;;;4193:37;;;;;;:::i;:::-;;;;;;;;3543:695;3462:776:::0;;:::o;7380:541::-;7425:29;7457:20;:32;7478:10;7457:32;;;;;;;;;;;;;;;7425:64;;7533:11;7547:25;7561:10;7547:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:13;:25::i;:::-;7533:39;;7602:1;7593:6;:10;7585:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;7731:15;7702:10;:26;;:44;;;;7777:1;7757:10;:17;;:21;;;;7840:5;;;;;;;;;;;:14;;;7855:10;7867:6;7840:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7892:21;7906:6;7892:21;;;;;;:::i;:::-;;;;;;;;7412:509;;7380:541::o;5672:173::-;5719:16;5737:14;5771:15;5788:20;:32;5809:10;5788:32;;;;;;;;;;;;;;;:48;;;5764:73;;;;5672:173;;:::o;1118:35::-;;;;:::o;1918:198:1:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;::::0;1998:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;6908:395:4:-;6983:17;7023:11;7106;:24;;;7088:15;;7057:11;:27;;;7039:15;:45;;;;:::i;:::-;7038:65;;;;:::i;:::-;:92;;;;:::i;:::-;7023:108;;7156:1;7147:6;:10;7144:152;;;7212:4;7203:6;:13;;;;:::i;:::-;7181:11;:18;;;:36;;;;:::i;:::-;7174:43;;;;;7144:152;7266:11;:18;;;7259:25;;;6908:395;;;;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;2270:187:1:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;7:77:5:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:76::-;1413:7;1442:5;1431:16;;1377:76;;;:::o;1459:115::-;1544:23;1561:5;1544:23;:::i;:::-;1539:3;1532:36;1459:115;;:::o;1580:218::-;1671:4;1709:2;1698:9;1694:18;1686:26;;1722:69;1788:1;1777:9;1773:17;1764:6;1722:69;:::i;:::-;1580:218;;;;:::o;1804:126::-;1841:7;1881:42;1874:5;1870:54;1859:65;;1804:126;;;:::o;1936:96::-;1973:7;2002:24;2020:5;2002:24;:::i;:::-;1991:35;;1936:96;;;:::o;2038:118::-;2125:24;2143:5;2125:24;:::i;:::-;2120:3;2113:37;2038:118;;:::o;2162:222::-;2255:4;2293:2;2282:9;2278:18;2270:26;;2306:71;2374:1;2363:9;2359:17;2350:6;2306:71;:::i;:::-;2162:222;;;;:::o;2390:332::-;2511:4;2549:2;2538:9;2534:18;2526:26;;2562:71;2630:1;2619:9;2615:17;2606:6;2562:71;:::i;:::-;2643:72;2711:2;2700:9;2696:18;2687:6;2643:72;:::i;:::-;2390:332;;;;;:::o;2728:122::-;2801:24;2819:5;2801:24;:::i;:::-;2794:5;2791:35;2781:63;;2840:1;2837;2830:12;2781:63;2728:122;:::o;2856:139::-;2902:5;2940:6;2927:20;2918:29;;2956:33;2983:5;2956:33;:::i;:::-;2856:139;;;;:::o;3001:329::-;3060:6;3109:2;3097:9;3088:7;3084:23;3080:32;3077:119;;;3115:79;;:::i;:::-;3077:119;3235:1;3260:53;3305:7;3296:6;3285:9;3281:22;3260:53;:::i;:::-;3250:63;;3206:117;3001:329;;;;:::o;3336:169::-;3420:11;3454:6;3449:3;3442:19;3494:4;3489:3;3485:14;3470:29;;3336:169;;;;:::o;3511:224::-;3651:34;3647:1;3639:6;3635:14;3628:58;3720:7;3715:2;3707:6;3703:15;3696:32;3511:224;:::o;3741:366::-;3883:3;3904:67;3968:2;3963:3;3904:67;:::i;:::-;3897:74;;3980:93;4069:3;3980:93;:::i;:::-;4098:2;4093:3;4089:12;4082:19;;3741:366;;;:::o;4113:419::-;4279:4;4317:2;4306:9;4302:18;4294:26;;4366:9;4360:4;4356:20;4352:1;4341:9;4337:17;4330:47;4394:131;4520:4;4394:131;:::i;:::-;4386:139;;4113:419;;;:::o;4538:228::-;4678:34;4674:1;4666:6;4662:14;4655:58;4747:11;4742:2;4734:6;4730:15;4723:36;4538:228;:::o;4772:366::-;4914:3;4935:67;4999:2;4994:3;4935:67;:::i;:::-;4928:74;;5011:93;5100:3;5011:93;:::i;:::-;5129:2;5124:3;5120:12;5113:19;;4772:366;;;:::o;5144:419::-;5310:4;5348:2;5337:9;5333:18;5325:26;;5397:9;5391:4;5387:20;5383:1;5372:9;5368:17;5361:47;5425:131;5551:4;5425:131;:::i;:::-;5417:139;;5144:419;;;:::o;5569:180::-;5617:77;5614:1;5607:88;5714:4;5711:1;5704:15;5738:4;5735:1;5728:15;5755:191;5795:4;5815:20;5833:1;5815:20;:::i;:::-;5810:25;;5849:20;5867:1;5849:20;:::i;:::-;5844:25;;5888:1;5885;5882:8;5879:34;;;5893:18;;:::i;:::-;5879:34;5938:1;5935;5931:9;5923:17;;5755:191;;;;:::o;5952:332::-;6073:4;6111:2;6100:9;6096:18;6088:26;;6124:71;6192:1;6181:9;6177:17;6168:6;6124:71;:::i;:::-;6205:72;6273:2;6262:9;6258:18;6249:6;6205:72;:::i;:::-;5952:332;;;;;:::o;6290:90::-;6324:7;6367:5;6360:13;6353:21;6342:32;;6290:90;;;:::o;6386:116::-;6456:21;6471:5;6456:21;:::i;:::-;6449:5;6446:32;6436:60;;6492:1;6489;6482:12;6436:60;6386:116;:::o;6508:137::-;6562:5;6593:6;6587:13;6578:22;;6609:30;6633:5;6609:30;:::i;:::-;6508:137;;;;:::o;6651:345::-;6718:6;6767:2;6755:9;6746:7;6742:23;6738:32;6735:119;;;6773:79;;:::i;:::-;6735:119;6893:1;6918:61;6971:7;6962:6;6951:9;6947:22;6918:61;:::i;:::-;6908:71;;6864:125;6651:345;;;;:::o;7002:105::-;7038:7;7078:22;7071:5;7067:34;7056:45;;7002:105;;;:::o;7113:120::-;7185:23;7202:5;7185:23;:::i;:::-;7178:5;7175:34;7165:62;;7223:1;7220;7213:12;7165:62;7113:120;:::o;7239:141::-;7295:5;7326:6;7320:13;7311:22;;7342:32;7368:5;7342:32;:::i;:::-;7239:141;;;;:::o;7386:120::-;7458:23;7475:5;7458:23;:::i;:::-;7451:5;7448:34;7438:62;;7496:1;7493;7486:12;7438:62;7386:120;:::o;7512:141::-;7568:5;7599:6;7593:13;7584:22;;7615:32;7641:5;7615:32;:::i;:::-;7512:141;;;;:::o;7659:143::-;7716:5;7747:6;7741:13;7732:22;;7763:33;7790:5;7763:33;:::i;:::-;7659:143;;;;:::o;7808:971::-;7911:6;7919;7927;7935;7943;7992:3;7980:9;7971:7;7967:23;7963:33;7960:120;;;7999:79;;:::i;:::-;7960:120;8119:1;8144:63;8199:7;8190:6;8179:9;8175:22;8144:63;:::i;:::-;8134:73;;8090:127;8256:2;8282:63;8337:7;8328:6;8317:9;8313:22;8282:63;:::i;:::-;8272:73;;8227:128;8394:2;8420:64;8476:7;8467:6;8456:9;8452:22;8420:64;:::i;:::-;8410:74;;8365:129;8533:2;8559:64;8615:7;8606:6;8595:9;8591:22;8559:64;:::i;:::-;8549:74;;8504:129;8672:3;8699:63;8754:7;8745:6;8734:9;8730:22;8699:63;:::i;:::-;8689:73;;8643:129;7808:971;;;;;;;;:::o;8785:182::-;8925:34;8921:1;8913:6;8909:14;8902:58;8785:182;:::o;8973:366::-;9115:3;9136:67;9200:2;9195:3;9136:67;:::i;:::-;9129:74;;9212:93;9301:3;9212:93;:::i;:::-;9330:2;9325:3;9321:12;9314:19;;8973:366;;;:::o;9345:419::-;9511:4;9549:2;9538:9;9534:18;9526:26;;9598:9;9592:4;9588:20;9584:1;9573:9;9569:17;9562:47;9626:131;9752:4;9626:131;:::i;:::-;9618:139;;9345:419;;;:::o;9770:442::-;9919:4;9957:2;9946:9;9942:18;9934:26;;9970:71;10038:1;10027:9;10023:17;10014:6;9970:71;:::i;:::-;10051:72;10119:2;10108:9;10104:18;10095:6;10051:72;:::i;:::-;10133;10201:2;10190:9;10186:18;10177:6;10133:72;:::i;:::-;9770:442;;;;;;:::o;10218:305::-;10258:3;10277:20;10295:1;10277:20;:::i;:::-;10272:25;;10311:20;10329:1;10311:20;:::i;:::-;10306:25;;10465:1;10397:66;10393:74;10390:1;10387:81;10384:107;;;10471:18;;:::i;:::-;10384:107;10515:1;10512;10508:9;10501:16;;10218:305;;;;:::o;10529:168::-;10669:20;10665:1;10657:6;10653:14;10646:44;10529:168;:::o;10703:366::-;10845:3;10866:67;10930:2;10925:3;10866:67;:::i;:::-;10859:74;;10942:93;11031:3;10942:93;:::i;:::-;11060:2;11055:3;11051:12;11044:19;;10703:366;;;:::o;11075:419::-;11241:4;11279:2;11268:9;11264:18;11256:26;;11328:9;11322:4;11318:20;11314:1;11303:9;11299:17;11292:47;11356:131;11482:4;11356:131;:::i;:::-;11348:139;;11075:419;;;:::o;11500:225::-;11640:34;11636:1;11628:6;11624:14;11617:58;11709:8;11704:2;11696:6;11692:15;11685:33;11500:225;:::o;11731:366::-;11873:3;11894:67;11958:2;11953:3;11894:67;:::i;:::-;11887:74;;11970:93;12059:3;11970:93;:::i;:::-;12088:2;12083:3;12079:12;12072:19;;11731:366;;;:::o;12103:419::-;12269:4;12307:2;12296:9;12292:18;12284:26;;12356:9;12350:4;12346:20;12342:1;12331:9;12327:17;12320:47;12384:131;12510:4;12384:131;:::i;:::-;12376:139;;12103:419;;;:::o;12528:348::-;12568:7;12591:20;12609:1;12591:20;:::i;:::-;12586:25;;12625:20;12643:1;12625:20;:::i;:::-;12620:25;;12813:1;12745:66;12741:74;12738:1;12735:81;12730:1;12723:9;12716:17;12712:105;12709:131;;;12820:18;;:::i;:::-;12709:131;12868:1;12865;12861:9;12850:20;;12528:348;;;;:::o;12882:180::-;12930:77;12927:1;12920:88;13027:4;13024:1;13017:15;13051:4;13048:1;13041:15;13068:185;13108:1;13125:20;13143:1;13125:20;:::i;:::-;13120:25;;13159:20;13177:1;13159:20;:::i;:::-;13154:25;;13198:1;13188:35;;13203:18;;:::i;:::-;13188:35;13245:1;13242;13238:9;13233:14;;13068:185;;;;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity 0.8.13;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\n\r\n/**\r\n * @title Hello World DeFi Protocol\r\n * @author The Hello World Team\r\n * @notice This contract offer the possibility to stake ERC20 in Liquidity Pools to receive Hello World Token rewards\r\n */\r\ncontract DeFiProtocol is Ownable {\r\n\r\n\r\n    // :::::::::::::: Struct ::::::::::::::: //\r\n\r\n    /**\r\n     * @notice This struct contains the data of a Staker\r\n     */\r\n    struct StakerData {\r\n        uint256 stakedAmount; \r\n        uint256 updateTimestamp;\r\n        uint256 reward;\r\n    }\r\n\r\n\r\n    // ::::::::::::: Properties ::::::::::::: //\r\n\r\n    /**\r\n     * @notice This mapping store the amount of liquidity and reward by address\r\n     */\r\n    mapping(address => StakerData) stakerDataPerAddress;\r\n\r\n    /**\r\n     * @notice The Total Value Locked(TVL) of the liquidity pool\r\n     * @dev The TVL is public because front may want to display it\r\n     */\r\n    uint256 public totalValueLocked = 0;\r\n    \r\n    /**\r\n     * @notice The Token to store in the liquidity pool\r\n     * @dev Initialized on the constructor\r\n     */\r\n    IERC20 token;\r\n\r\n    /**\r\n     * @notice Retrieve the token price\r\n     * @dev Use Chainlink to retrieve the USD price of the token\r\n     */\r\n    AggregatorV3Interface internal priceFeed;\r\n\r\n    /**\r\n     * @notice Token multiplier to give a price on the Hwt token\r\n     * @dev As our Hwt token don't have any value on the market, we use a basic multiplier\r\n     */\r\n    uint public hwtTokenUsdValue = 931500000000000000;\r\n\r\n    /**\r\n     * @notice reward per second for the liquidity pool\r\n     */\r\n    uint rewardPerSecond = 925925925925;\r\n\r\n    // ::::::::::::: Modifiers ::::::::::::: //\r\n\r\n    /**\r\n     * @notice Modifier that allow only amount greater than zero to be staked or unstaked\r\n     */\r\n    modifier onlyAmountGreaterThanZero(uint _amount) {\r\n        require(_amount > 0, \"Only amount above zero are authorized\");\r\n        _;\r\n    }\r\n\r\n    // ::::::::::::: Events ::::::::::::: //\r\n\r\n    /**\r\n     * @notice Event informing total amount staked in the Liquidity Pool\r\n     * @param stakedAmount The amount that has been staked\r\n     */\r\n    event AmountStaked (uint stakedAmount);\r\n\r\n    /**\r\n     * @notice Event informing an amount was unstaked in the Liquidity Pool\r\n     * @param unstakedAmount The amount that has been unstaked\r\n     */\r\n    event AmountUnstaked (uint unstakedAmount);\r\n\r\n    /** \r\n     * @notice Event informing a reward was send\r\n     * @param rewardClaimedAmount The amount that has been offered\r\n     */\r\n    event RewardOffered (uint rewardClaimedAmount);\r\n\r\n    // ::::::::::::: Methods ::::::::::::: //\r\n\r\n    /**\r\n     * @notice Create erc20 instance that will be used for the liquidity pool\r\n     * @param _tokenAddress the smart contract address of the erc20 token\r\n     */\r\n    constructor(address _tokenAddress) {\r\n        token = IERC20(_tokenAddress);\r\n        // Link/USD price feed\r\n        priceFeed = AggregatorV3Interface(0x2c1d072e956AFFC0D435Cb7AC38EF18d24d9127c);\r\n    }\r\n\r\n    /**\r\n     * @notice Stake token in the Liquidity pool\r\n     * @dev Refresh the stored amount in the address mapping storedValuePerAddress and refresh the TVL\r\n     * @param _amount Total amount to store in the liquidity pool\r\n     */\r\n    function stake(uint _amount) payable external onlyAmountGreaterThanZero(_amount) {\r\n        \r\n        token.transferFrom(msg.sender, address(this), _amount);\r\n\r\n        // Update the locked amount of the sender\r\n        StakerData storage stakerData = stakerDataPerAddress[msg.sender];\r\n\r\n        // if tokens are already stored, update reward before the new stake\r\n        if(stakerData.stakedAmount > 0) {\r\n            stakerData.reward = computeReward(stakerData);\r\n        }\r\n\r\n        stakerData.stakedAmount = stakerData.stakedAmount + _amount;\r\n        stakerData.updateTimestamp = block.timestamp; \r\n\r\n        // Update the tvl of the liquidity pool\r\n        totalValueLocked = totalValueLocked  + _amount;\r\n\r\n        emit AmountStaked(stakerData.stakedAmount);\r\n    }\r\n\r\n    /**\r\n     * @notice Unstake the tokens in the Liquidity pool, user can retrieve their tokens\r\n     * @dev Refresh the stored amount in the address mapping stakerDataPerAddress and refresh the TVL\r\n     * @param _amount Total amount to unstake from the liquidity pool\r\n     */\r\n    function unstake(uint256 _amount) payable external onlyAmountGreaterThanZero(_amount) {\r\n        \r\n        StakerData storage stakerData = stakerDataPerAddress[msg.sender];\r\n        \r\n        // Check if the sender have this amount in pool\r\n        require(_amount <= stakerData.stakedAmount, \"You didn't stored this amount in the pool\");\r\n\r\n        // Update the reward first ! Then update staked amount and timestamp\r\n        stakerData.reward = computeReward(stakerData);\r\n\r\n        stakerData.stakedAmount = stakerData.stakedAmount - _amount;\r\n        stakerData.updateTimestamp = block.timestamp;\r\n\r\n        // Update the tvl of the liquidity pool\r\n        totalValueLocked = totalValueLocked  - _amount;\r\n\r\n        // Send the token back to the sender\r\n        token.transfer(msg.sender, _amount);\r\n        \r\n        emit AmountUnstaked(_amount);\r\n    }\r\n\r\n    /**\r\n     * @notice Get the msg.sender token staked amount\r\n     * @return stakedAmount token staked by msg.sender\r\n     */\r\n    function getStakedAmount() external view returns (uint stakedAmount) {\r\n        return(stakerDataPerAddress[msg.sender].stakedAmount);\r\n    }\r\n\r\n    function getTimeStamp() external view returns (uint actualStamp, uint userStamp) {\r\n        return(block.timestamp, stakerDataPerAddress[msg.sender].updateTimestamp);\r\n    }\r\n\r\n    /**\r\n     * @notice Get the token price in USD\r\n     * @dev USD Price is retrieved thanks to Chainlink\r\n     * @dev Can't be unit tested because of Ganache\r\n     * @return tokenPrice price of the token\r\n     */\r\n    function getTokenPrice() external view returns (int tokenPrice) {\r\n\r\n        (\r\n            /* uint80 roundID */,\r\n            int price,\r\n            /* uint256 startedAt, */,\r\n            /* uint256 timeStamp, */,\r\n            /* uint80 answeredInRound */\r\n        ) = priceFeed.latestRoundData();\r\n\r\n        return(price);\r\n    }\r\n\r\n    /**\r\n     * @notice Get the reward for msg.sender\r\n     * @return reward The reward computed by the contract\r\n     */\r\n    function getRewardAmount() external view returns (uint reward) {\r\n        return(computeReward(stakerDataPerAddress[msg.sender]));\r\n    }\r\n\r\n    /**\r\n     * @notice Compute the reward depending on time and existant reward\r\n     * @dev Timestamp are in seconds\r\n     * @param _stakerData Data of the staker\r\n     * @return rewardAmount The computed reward amount\r\n     */\r\n    function computeReward(StakerData memory _stakerData) private view returns(uint rewardAmount) {\r\n        \r\n        uint reward = ((block.timestamp - _stakerData.updateTimestamp) * rewardPerSecond * _stakerData.stakedAmount);\r\n\r\n        if(reward > 0) {\r\n            return _stakerData.reward + (reward / 1e18);\r\n        }\r\n        else {\r\n            return _stakerData.reward;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Send then reward to the msg.sender\r\n     */\r\n    function claimReward() external {\r\n\r\n        StakerData storage stakerData = stakerDataPerAddress[msg.sender];\r\n\r\n        // Compute the reward\r\n        uint reward = computeReward(stakerData);\r\n\r\n        require(reward > 0, \"No reward to claim\");\r\n        \r\n        // Update the timestamp and the reward amount\r\n        stakerData.updateTimestamp = block.timestamp;\r\n        stakerData.reward = 0;\r\n\r\n        // Send reward tokens to the msg.sender\r\n        token.transfer(msg.sender, reward);\r\n\r\n        emit RewardOffered(reward);\r\n    }\r\n}",
  "sourcePath": "/mnt/d/Alyra/DeFi-Liquidity-Pool/contracts/DeFiProtocol.sol",
  "ast": {
    "absolutePath": "project:/contracts/DeFiProtocol.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        45
      ],
      "Context": [
        250
      ],
      "DeFiProtocol": [
        634
      ],
      "IERC20": [
        228
      ],
      "Ownable": [
        150
      ]
    },
    "id": 635,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 252,
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:4"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 253,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 635,
        "sourceUnit": 151,
        "src": "66:52:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 254,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 635,
        "sourceUnit": 229,
        "src": "120:56:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 255,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 635,
        "sourceUnit": 46,
        "src": "178:76:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 257,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 150,
              "src": "482:7:4"
            },
            "id": 258,
            "nodeType": "InheritanceSpecifier",
            "src": "482:7:4"
          }
        ],
        "canonicalName": "DeFiProtocol",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 256,
          "nodeType": "StructuredDocumentation",
          "src": "258:197:4",
          "text": " @title Hello World DeFi Protocol\n @author The Hello World Team\n @notice This contract offer the possibility to stake ERC20 in Liquidity Pools to receive Hello World Token rewards"
        },
        "fullyImplemented": true,
        "id": 634,
        "linearizedBaseContracts": [
          634,
          150,
          250
        ],
        "name": "DeFiProtocol",
        "nameLocation": "466:12:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "DeFiProtocol.StakerData",
            "id": 265,
            "members": [
              {
                "constant": false,
                "id": 260,
                "mutability": "mutable",
                "name": "stakedAmount",
                "nameLocation": "665:12:4",
                "nodeType": "VariableDeclaration",
                "scope": 265,
                "src": "657:20:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 259,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "657:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 262,
                "mutability": "mutable",
                "name": "updateTimestamp",
                "nameLocation": "697:15:4",
                "nodeType": "VariableDeclaration",
                "scope": 265,
                "src": "689:23:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 261,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "689:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 264,
                "mutability": "mutable",
                "name": "reward",
                "nameLocation": "731:6:4",
                "nodeType": "VariableDeclaration",
                "scope": 265,
                "src": "723:14:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 263,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "723:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "StakerData",
            "nameLocation": "635:10:4",
            "nodeType": "StructDefinition",
            "scope": 634,
            "src": "628:117:4",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 266,
              "nodeType": "StructuredDocumentation",
              "src": "807:93:4",
              "text": " @notice This mapping store the amount of liquidity and reward by address"
            },
            "id": 271,
            "mutability": "mutable",
            "name": "stakerDataPerAddress",
            "nameLocation": "937:20:4",
            "nodeType": "VariableDeclaration",
            "scope": 634,
            "src": "906:51:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerData_$265_storage_$",
              "typeString": "mapping(address => struct DeFiProtocol.StakerData)"
            },
            "typeName": {
              "id": 270,
              "keyType": {
                "id": 267,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "914:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "906:30:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerData_$265_storage_$",
                "typeString": "mapping(address => struct DeFiProtocol.StakerData)"
              },
              "valueType": {
                "id": 269,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 268,
                  "name": "StakerData",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 265,
                  "src": "925:10:4"
                },
                "referencedDeclaration": 265,
                "src": "925:10:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                  "typeString": "struct DeFiProtocol.StakerData"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 272,
              "nodeType": "StructuredDocumentation",
              "src": "966:146:4",
              "text": " @notice The Total Value Locked(TVL) of the liquidity pool\n @dev The TVL is public because front may want to display it"
            },
            "functionSelector": "ec18154e",
            "id": 275,
            "mutability": "mutable",
            "name": "totalValueLocked",
            "nameLocation": "1133:16:4",
            "nodeType": "VariableDeclaration",
            "scope": 634,
            "src": "1118:35:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 273,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1118:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 274,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1152:1:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 276,
              "nodeType": "StructuredDocumentation",
              "src": "1166:113:4",
              "text": " @notice The Token to store in the liquidity pool\n @dev Initialized on the constructor"
            },
            "id": 279,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "1292:5:4",
            "nodeType": "VariableDeclaration",
            "scope": 634,
            "src": "1285:12:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$228",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 278,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 277,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 228,
                "src": "1285:6:4"
              },
              "referencedDeclaration": 228,
              "src": "1285:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$228",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 280,
              "nodeType": "StructuredDocumentation",
              "src": "1306:119:4",
              "text": " @notice Retrieve the token price\n @dev Use Chainlink to retrieve the USD price of the token"
            },
            "id": 283,
            "mutability": "mutable",
            "name": "priceFeed",
            "nameLocation": "1462:9:4",
            "nodeType": "VariableDeclaration",
            "scope": 634,
            "src": "1431:40:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 282,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 281,
                "name": "AggregatorV3Interface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45,
                "src": "1431:21:4"
              },
              "referencedDeclaration": 45,
              "src": "1431:21:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 284,
              "nodeType": "StructuredDocumentation",
              "src": "1480:170:4",
              "text": " @notice Token multiplier to give a price on the Hwt token\n @dev As our Hwt token don't have any value on the market, we use a basic multiplier"
            },
            "functionSelector": "7cd9e6aa",
            "id": 287,
            "mutability": "mutable",
            "name": "hwtTokenUsdValue",
            "nameLocation": "1668:16:4",
            "nodeType": "VariableDeclaration",
            "scope": 634,
            "src": "1656:49:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 285,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1656:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "393331353030303030303030303030303030",
              "id": 286,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1687:18:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_931500000000000000_by_1",
                "typeString": "int_const 931500000000000000"
              },
              "value": "931500000000000000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 288,
              "nodeType": "StructuredDocumentation",
              "src": "1714:69:4",
              "text": " @notice reward per second for the liquidity pool"
            },
            "id": 291,
            "mutability": "mutable",
            "name": "rewardPerSecond",
            "nameLocation": "1794:15:4",
            "nodeType": "VariableDeclaration",
            "scope": 634,
            "src": "1789:35:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 289,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1789:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "393235393235393235393235",
              "id": 290,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1812:12:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_925925925925_by_1",
                "typeString": "int_const 925925925925"
              },
              "value": "925925925925"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 304,
              "nodeType": "Block",
              "src": "2042:92:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 297,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 294,
                          "src": "2061:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2071:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2061:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920616d6f756e742061626f7665207a65726f2061726520617574686f72697a6564",
                        "id": 300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2074:39:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39",
                          "typeString": "literal_string \"Only amount above zero are authorized\""
                        },
                        "value": "Only amount above zero are authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39",
                          "typeString": "literal_string \"Only amount above zero are authorized\""
                        }
                      ],
                      "id": 296,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2053:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2053:61:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 302,
                  "nodeType": "ExpressionStatement",
                  "src": "2053:61:4"
                },
                {
                  "id": 303,
                  "nodeType": "PlaceholderStatement",
                  "src": "2125:1:4"
                }
              ]
            },
            "documentation": {
              "id": 292,
              "nodeType": "StructuredDocumentation",
              "src": "1884:103:4",
              "text": " @notice Modifier that allow only amount greater than zero to be staked or unstaked"
            },
            "id": 305,
            "name": "onlyAmountGreaterThanZero",
            "nameLocation": "2002:25:4",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 294,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2033:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 305,
                  "src": "2028:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 293,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2028:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2027:14:4"
            },
            "src": "1993:141:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 306,
              "nodeType": "StructuredDocumentation",
              "src": "2190:146:4",
              "text": " @notice Event informing total amount staked in the Liquidity Pool\n @param stakedAmount The amount that has been staked"
            },
            "eventSelector": "d8e1da2ea55fa9c4413c33f029c3f3fb5289e22eb1cab9d922ffb18f5d9a273e",
            "id": 310,
            "name": "AmountStaked",
            "nameLocation": "2348:12:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 308,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "stakedAmount",
                  "nameLocation": "2367:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 310,
                  "src": "2362:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 307,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2362:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2361:19:4"
            },
            "src": "2342:39:4"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 311,
              "nodeType": "StructuredDocumentation",
              "src": "2389:153:4",
              "text": " @notice Event informing an amount was unstaked in the Liquidity Pool\n @param unstakedAmount The amount that has been unstaked"
            },
            "eventSelector": "2f8effe7ffe0e306b06e4755a1a92f6d3bc946de9c4f6a406dbc132c86eb36d4",
            "id": 315,
            "name": "AmountUnstaked",
            "nameLocation": "2554:14:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 313,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "unstakedAmount",
                  "nameLocation": "2575:14:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 315,
                  "src": "2570:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 312,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2570:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2569:21:4"
            },
            "src": "2548:43:4"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 316,
              "nodeType": "StructuredDocumentation",
              "src": "2599:131:4",
              "text": " @notice Event informing a reward was send\n @param rewardClaimedAmount The amount that has been offered"
            },
            "eventSelector": "39a5d140e3e3a18613a91b12d365dc0c589797b664f414f85ff68161ac6fbbb6",
            "id": 320,
            "name": "RewardOffered",
            "nameLocation": "2742:13:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 318,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rewardClaimedAmount",
                  "nameLocation": "2762:19:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 320,
                  "src": "2757:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 317,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2757:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2756:26:4"
            },
            "src": "2736:47:4"
          },
          {
            "body": {
              "id": 338,
              "nodeType": "Block",
              "src": "3047:168:4",
              "statements": [
                {
                  "expression": {
                    "id": 330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 326,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 279,
                      "src": "3058:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$228",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 328,
                          "name": "_tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 323,
                          "src": "3073:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 327,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "3066:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$228_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3066:21:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$228",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "3058:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$228",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 331,
                  "nodeType": "ExpressionStatement",
                  "src": "3058:29:4"
                },
                {
                  "expression": {
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 332,
                      "name": "priceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 283,
                      "src": "3130:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307832633164303732653935364146464330443433354362374143333845463138643234643931323763",
                          "id": 334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3164:42:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x2c1d072e956AFFC0D435Cb7AC38EF18d24d9127c"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 333,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "3142:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3142:65:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "3130:77:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 337,
                  "nodeType": "ExpressionStatement",
                  "src": "3130:77:4"
                }
              ]
            },
            "documentation": {
              "id": 321,
              "nodeType": "StructuredDocumentation",
              "src": "2840:166:4",
              "text": " @notice Create erc20 instance that will be used for the liquidity pool\n @param _tokenAddress the smart contract address of the erc20 token"
            },
            "id": 339,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 323,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "3032:13:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 339,
                  "src": "3024:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 322,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3024:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3023:23:4"
            },
            "returnParameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3047:0:4"
            },
            "scope": 634,
            "src": "3012:203:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 409,
              "nodeType": "Block",
              "src": "3543:695:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 351,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3583:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3583:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 355,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3603:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DeFiProtocol_$634",
                              "typeString": "contract DeFiProtocol"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DeFiProtocol_$634",
                              "typeString": "contract DeFiProtocol"
                            }
                          ],
                          "id": 354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3595:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 353,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3595:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3595:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 357,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 342,
                        "src": "3610:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 348,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "3564:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$228",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 227,
                      "src": "3564:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3564:54:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 359,
                  "nodeType": "ExpressionStatement",
                  "src": "3564:54:4"
                },
                {
                  "assignments": [
                    362
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 362,
                      "mutability": "mutable",
                      "name": "stakerData",
                      "nameLocation": "3701:10:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 409,
                      "src": "3682:29:4",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                        "typeString": "struct DeFiProtocol.StakerData"
                      },
                      "typeName": {
                        "id": 361,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 360,
                          "name": "StakerData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 265,
                          "src": "3682:10:4"
                        },
                        "referencedDeclaration": 265,
                        "src": "3682:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                          "typeString": "struct DeFiProtocol.StakerData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 367,
                  "initialValue": {
                    "baseExpression": {
                      "id": 363,
                      "name": "stakerDataPerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 271,
                      "src": "3714:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerData_$265_storage_$",
                        "typeString": "mapping(address => struct DeFiProtocol.StakerData storage ref)"
                      }
                    },
                    "id": 366,
                    "indexExpression": {
                      "expression": {
                        "id": 364,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3735:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3735:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3714:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakerData_$265_storage",
                      "typeString": "struct DeFiProtocol.StakerData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3682:64:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 368,
                        "name": "stakerData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "3839:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                          "typeString": "struct DeFiProtocol.StakerData storage pointer"
                        }
                      },
                      "id": 369,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stakedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 260,
                      "src": "3839:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3865:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3839:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 381,
                  "nodeType": "IfStatement",
                  "src": "3836:104:4",
                  "trueBody": {
                    "id": 380,
                    "nodeType": "Block",
                    "src": "3868:72:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 372,
                              "name": "stakerData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 362,
                              "src": "3883:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                                "typeString": "struct DeFiProtocol.StakerData storage pointer"
                              }
                            },
                            "id": 374,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "reward",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 264,
                            "src": "3883:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 376,
                                "name": "stakerData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 362,
                                "src": "3917:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                                  "typeString": "struct DeFiProtocol.StakerData storage pointer"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                                  "typeString": "struct DeFiProtocol.StakerData storage pointer"
                                }
                              ],
                              "id": 375,
                              "name": "computeReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 582,
                              "src": "3903:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_struct$_StakerData_$265_memory_ptr_$returns$_t_uint256_$",
                                "typeString": "function (struct DeFiProtocol.StakerData memory) view returns (uint256)"
                              }
                            },
                            "id": 377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3903:25:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3883:45:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 379,
                        "nodeType": "ExpressionStatement",
                        "src": "3883:45:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 382,
                        "name": "stakerData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "3952:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                          "typeString": "struct DeFiProtocol.StakerData storage pointer"
                        }
                      },
                      "id": 384,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "stakedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 260,
                      "src": "3952:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 385,
                          "name": "stakerData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 362,
                          "src": "3978:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                            "typeString": "struct DeFiProtocol.StakerData storage pointer"
                          }
                        },
                        "id": 386,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stakedAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 260,
                        "src": "3978:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 387,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 342,
                        "src": "4004:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3978:33:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3952:59:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 390,
                  "nodeType": "ExpressionStatement",
                  "src": "3952:59:4"
                },
                {
                  "expression": {
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 391,
                        "name": "stakerData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "4022:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                          "typeString": "struct DeFiProtocol.StakerData storage pointer"
                        }
                      },
                      "id": 393,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "updateTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 262,
                      "src": "4022:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 394,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "4051:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "4051:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4022:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 397,
                  "nodeType": "ExpressionStatement",
                  "src": "4022:44:4"
                },
                {
                  "expression": {
                    "id": 402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 398,
                      "name": "totalValueLocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 275,
                      "src": "4129:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 399,
                        "name": "totalValueLocked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 275,
                        "src": "4148:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 400,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 342,
                        "src": "4168:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4148:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4129:46:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 403,
                  "nodeType": "ExpressionStatement",
                  "src": "4129:46:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 405,
                          "name": "stakerData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 362,
                          "src": "4206:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                            "typeString": "struct DeFiProtocol.StakerData storage pointer"
                          }
                        },
                        "id": 406,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stakedAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 260,
                        "src": "4206:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 404,
                      "name": "AmountStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 310,
                      "src": "4193:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4193:37:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 408,
                  "nodeType": "EmitStatement",
                  "src": "4188:42:4"
                }
              ]
            },
            "documentation": {
              "id": 340,
              "nodeType": "StructuredDocumentation",
              "src": "3223:233:4",
              "text": " @notice Stake token in the Liquidity pool\n @dev Refresh the stored amount in the address mapping storedValuePerAddress and refresh the TVL\n @param _amount Total amount to store in the liquidity pool"
            },
            "functionSelector": "a694fc3a",
            "id": 410,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 345,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 342,
                    "src": "3534:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 346,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 344,
                  "name": "onlyAmountGreaterThanZero",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 305,
                  "src": "3508:25:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "3508:34:4"
              }
            ],
            "name": "stake",
            "nameLocation": "3471:5:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 342,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3482:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 410,
                  "src": "3477:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 341,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3477:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3476:14:4"
            },
            "returnParameters": {
              "id": 347,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3543:0:4"
            },
            "scope": 634,
            "src": "3462:776:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 477,
              "nodeType": "Block",
              "src": "4613:773:4",
              "statements": [
                {
                  "assignments": [
                    421
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 421,
                      "mutability": "mutable",
                      "name": "stakerData",
                      "nameLocation": "4653:10:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 477,
                      "src": "4634:29:4",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                        "typeString": "struct DeFiProtocol.StakerData"
                      },
                      "typeName": {
                        "id": 420,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 419,
                          "name": "StakerData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 265,
                          "src": "4634:10:4"
                        },
                        "referencedDeclaration": 265,
                        "src": "4634:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                          "typeString": "struct DeFiProtocol.StakerData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 426,
                  "initialValue": {
                    "baseExpression": {
                      "id": 422,
                      "name": "stakerDataPerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 271,
                      "src": "4666:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerData_$265_storage_$",
                        "typeString": "mapping(address => struct DeFiProtocol.StakerData storage ref)"
                      }
                    },
                    "id": 425,
                    "indexExpression": {
                      "expression": {
                        "id": 423,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "4687:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4687:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4666:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakerData_$265_storage",
                      "typeString": "struct DeFiProtocol.StakerData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4634:64:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 428,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 413,
                          "src": "4784:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 429,
                            "name": "stakerData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 421,
                            "src": "4795:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                              "typeString": "struct DeFiProtocol.StakerData storage pointer"
                            }
                          },
                          "id": 430,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakedAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 260,
                          "src": "4795:23:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4784:34:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206469646e27742073746f726564207468697320616d6f756e7420696e2074686520706f6f6c",
                        "id": 432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4820:43:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9",
                          "typeString": "literal_string \"You didn't stored this amount in the pool\""
                        },
                        "value": "You didn't stored this amount in the pool"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9",
                          "typeString": "literal_string \"You didn't stored this amount in the pool\""
                        }
                      ],
                      "id": 427,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4776:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4776:88:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 434,
                  "nodeType": "ExpressionStatement",
                  "src": "4776:88:4"
                },
                {
                  "expression": {
                    "id": 441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 435,
                        "name": "stakerData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 421,
                        "src": "4955:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                          "typeString": "struct DeFiProtocol.StakerData storage pointer"
                        }
                      },
                      "id": 437,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "reward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 264,
                      "src": "4955:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 439,
                          "name": "stakerData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 421,
                          "src": "4989:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                            "typeString": "struct DeFiProtocol.StakerData storage pointer"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                            "typeString": "struct DeFiProtocol.StakerData storage pointer"
                          }
                        ],
                        "id": 438,
                        "name": "computeReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 582,
                        "src": "4975:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_StakerData_$265_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (struct DeFiProtocol.StakerData memory) view returns (uint256)"
                        }
                      },
                      "id": 440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4975:25:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4955:45:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 442,
                  "nodeType": "ExpressionStatement",
                  "src": "4955:45:4"
                },
                {
                  "expression": {
                    "id": 450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 443,
                        "name": "stakerData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 421,
                        "src": "5013:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                          "typeString": "struct DeFiProtocol.StakerData storage pointer"
                        }
                      },
                      "id": 445,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "stakedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 260,
                      "src": "5013:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 446,
                          "name": "stakerData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 421,
                          "src": "5039:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                            "typeString": "struct DeFiProtocol.StakerData storage pointer"
                          }
                        },
                        "id": 447,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stakedAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 260,
                        "src": "5039:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 448,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 413,
                        "src": "5065:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5039:33:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5013:59:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 451,
                  "nodeType": "ExpressionStatement",
                  "src": "5013:59:4"
                },
                {
                  "expression": {
                    "id": 457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 452,
                        "name": "stakerData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 421,
                        "src": "5083:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                          "typeString": "struct DeFiProtocol.StakerData storage pointer"
                        }
                      },
                      "id": 454,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "updateTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 262,
                      "src": "5083:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 455,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "5112:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "5112:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5083:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 458,
                  "nodeType": "ExpressionStatement",
                  "src": "5083:44:4"
                },
                {
                  "expression": {
                    "id": 463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 459,
                      "name": "totalValueLocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 275,
                      "src": "5189:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 460,
                        "name": "totalValueLocked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 275,
                        "src": "5208:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 461,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 413,
                        "src": "5228:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5208:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5189:46:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 464,
                  "nodeType": "ExpressionStatement",
                  "src": "5189:46:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 468,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5309:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5309:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 470,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 413,
                        "src": "5321:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 465,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "5294:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$228",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 195,
                      "src": "5294:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5294:35:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 472,
                  "nodeType": "ExpressionStatement",
                  "src": "5294:35:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 474,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 413,
                        "src": "5370:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 473,
                      "name": "AmountUnstaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 315,
                      "src": "5355:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5355:23:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 476,
                  "nodeType": "EmitStatement",
                  "src": "5350:28:4"
                }
              ]
            },
            "documentation": {
              "id": 411,
              "nodeType": "StructuredDocumentation",
              "src": "4246:275:4",
              "text": " @notice Unstake the tokens in the Liquidity pool, user can retrieve their tokens\n @dev Refresh the stored amount in the address mapping stakerDataPerAddress and refresh the TVL\n @param _amount Total amount to unstake from the liquidity pool"
            },
            "functionSelector": "2e17de78",
            "id": 478,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 416,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 413,
                    "src": "4604:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 417,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 415,
                  "name": "onlyAmountGreaterThanZero",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 305,
                  "src": "4578:25:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "4578:34:4"
              }
            ],
            "name": "unstake",
            "nameLocation": "4536:7:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 413,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4552:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 478,
                  "src": "4544:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 412,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4544:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4543:17:4"
            },
            "returnParameters": {
              "id": 418,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4613:0:4"
            },
            "scope": 634,
            "src": "4527:859:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 491,
              "nodeType": "Block",
              "src": "5592:72:4",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 484,
                            "name": "stakerDataPerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 271,
                            "src": "5610:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerData_$265_storage_$",
                              "typeString": "mapping(address => struct DeFiProtocol.StakerData storage ref)"
                            }
                          },
                          "id": 487,
                          "indexExpression": {
                            "expression": {
                              "id": 485,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5631:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 486,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5631:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5610:32:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakerData_$265_storage",
                            "typeString": "struct DeFiProtocol.StakerData storage ref"
                          }
                        },
                        "id": 488,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stakedAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 260,
                        "src": "5610:45:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 489,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5609:47:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 483,
                  "id": 490,
                  "nodeType": "Return",
                  "src": "5603:53:4"
                }
              ]
            },
            "documentation": {
              "id": 479,
              "nodeType": "StructuredDocumentation",
              "src": "5394:123:4",
              "text": " @notice Get the msg.sender token staked amount\n @return stakedAmount token staked by msg.sender"
            },
            "functionSelector": "a4e15db9",
            "id": 492,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakedAmount",
            "nameLocation": "5532:15:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5547:2:4"
            },
            "returnParameters": {
              "id": 483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 482,
                  "mutability": "mutable",
                  "name": "stakedAmount",
                  "nameLocation": "5578:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 492,
                  "src": "5573:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 481,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5573:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5572:19:4"
            },
            "scope": 634,
            "src": "5523:141:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 508,
              "nodeType": "Block",
              "src": "5753:92:4",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 499,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "5771:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "5771:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 501,
                            "name": "stakerDataPerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 271,
                            "src": "5788:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerData_$265_storage_$",
                              "typeString": "mapping(address => struct DeFiProtocol.StakerData storage ref)"
                            }
                          },
                          "id": 504,
                          "indexExpression": {
                            "expression": {
                              "id": 502,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5809:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5809:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5788:32:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakerData_$265_storage",
                            "typeString": "struct DeFiProtocol.StakerData storage ref"
                          }
                        },
                        "id": 505,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "updateTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 262,
                        "src": "5788:48:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 506,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5770:67:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 498,
                  "id": 507,
                  "nodeType": "Return",
                  "src": "5764:73:4"
                }
              ]
            },
            "functionSelector": "da235b22",
            "id": 509,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTimeStamp",
            "nameLocation": "5681:12:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5693:2:4"
            },
            "returnParameters": {
              "id": 498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 495,
                  "mutability": "mutable",
                  "name": "actualStamp",
                  "nameLocation": "5724:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 509,
                  "src": "5719:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 494,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5719:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 497,
                  "mutability": "mutable",
                  "name": "userStamp",
                  "nameLocation": "5742:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 509,
                  "src": "5737:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 496,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5737:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5718:34:4"
            },
            "scope": 634,
            "src": "5672:173:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 524,
              "nodeType": "Block",
              "src": "6133:268:4",
              "statements": [
                {
                  "assignments": [
                    null,
                    516,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 516,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "6200:5:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 524,
                      "src": "6196:9:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 515,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "6196:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 520,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 517,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 283,
                        "src": "6340:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "6340:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6340:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6146:221:4"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 521,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 516,
                        "src": "6387:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "id": 522,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "6386:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 514,
                  "id": 523,
                  "nodeType": "Return",
                  "src": "6380:13:4"
                }
              ]
            },
            "documentation": {
              "id": 510,
              "nodeType": "StructuredDocumentation",
              "src": "5853:210:4",
              "text": " @notice Get the token price in USD\n @dev USD Price is retrieved thanks to Chainlink\n @dev Can't be unit tested because of Ganache\n @return tokenPrice price of the token"
            },
            "functionSelector": "4b94f50e",
            "id": 525,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenPrice",
            "nameLocation": "6078:13:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 511,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6091:2:4"
            },
            "returnParameters": {
              "id": 514,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 513,
                  "mutability": "mutable",
                  "name": "tokenPrice",
                  "nameLocation": "6121:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 525,
                  "src": "6117:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 512,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "6117:3:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6116:16:4"
            },
            "scope": 634,
            "src": "6069:332:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 539,
              "nodeType": "Block",
              "src": "6595:74:4",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 532,
                              "name": "stakerDataPerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 271,
                              "src": "6627:20:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerData_$265_storage_$",
                                "typeString": "mapping(address => struct DeFiProtocol.StakerData storage ref)"
                              }
                            },
                            "id": 535,
                            "indexExpression": {
                              "expression": {
                                "id": 533,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "6648:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 534,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6648:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6627:32:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakerData_$265_storage",
                              "typeString": "struct DeFiProtocol.StakerData storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_StakerData_$265_storage",
                              "typeString": "struct DeFiProtocol.StakerData storage ref"
                            }
                          ],
                          "id": 531,
                          "name": "computeReward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 582,
                          "src": "6613:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_StakerData_$265_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (struct DeFiProtocol.StakerData memory) view returns (uint256)"
                          }
                        },
                        "id": 536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6613:47:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 537,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "6612:49:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 530,
                  "id": 538,
                  "nodeType": "Return",
                  "src": "6606:55:4"
                }
              ]
            },
            "documentation": {
              "id": 526,
              "nodeType": "StructuredDocumentation",
              "src": "6409:117:4",
              "text": " @notice Get the reward for msg.sender\n @return reward The reward computed by the contract"
            },
            "functionSelector": "09a69f57",
            "id": 540,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRewardAmount",
            "nameLocation": "6541:15:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6556:2:4"
            },
            "returnParameters": {
              "id": 530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 529,
                  "mutability": "mutable",
                  "name": "reward",
                  "nameLocation": "6587:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 540,
                  "src": "6582:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 528,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6582:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6581:13:4"
            },
            "scope": 634,
            "src": "6532:137:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 581,
              "nodeType": "Block",
              "src": "7002:301:4",
              "statements": [
                {
                  "assignments": [
                    550
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 550,
                      "mutability": "mutable",
                      "name": "reward",
                      "nameLocation": "7028:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 581,
                      "src": "7023:11:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 549,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7023:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 563,
                  "initialValue": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 555,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 551,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967292,
                                    "src": "7039:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 552,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "7039:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "expression": {
                                    "id": 553,
                                    "name": "_stakerData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 544,
                                    "src": "7057:11:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_StakerData_$265_memory_ptr",
                                      "typeString": "struct DeFiProtocol.StakerData memory"
                                    }
                                  },
                                  "id": 554,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "updateTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 262,
                                  "src": "7057:27:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7039:45:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 556,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "7038:47:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 557,
                            "name": "rewardPerSecond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 291,
                            "src": "7088:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7038:65:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "expression": {
                            "id": 559,
                            "name": "_stakerData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 544,
                            "src": "7106:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakerData_$265_memory_ptr",
                              "typeString": "struct DeFiProtocol.StakerData memory"
                            }
                          },
                          "id": 560,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakedAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 260,
                          "src": "7106:24:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7038:92:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 562,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7037:94:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7023:108:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 564,
                      "name": "reward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 550,
                      "src": "7147:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 565,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7156:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7147:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 579,
                    "nodeType": "Block",
                    "src": "7244:52:4",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 576,
                            "name": "_stakerData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 544,
                            "src": "7266:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakerData_$265_memory_ptr",
                              "typeString": "struct DeFiProtocol.StakerData memory"
                            }
                          },
                          "id": 577,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reward",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 264,
                          "src": "7266:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 548,
                        "id": 578,
                        "nodeType": "Return",
                        "src": "7259:25:4"
                      }
                    ]
                  },
                  "id": 580,
                  "nodeType": "IfStatement",
                  "src": "7144:152:4",
                  "trueBody": {
                    "id": 575,
                    "nodeType": "Block",
                    "src": "7159:70:4",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 567,
                              "name": "_stakerData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 544,
                              "src": "7181:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakerData_$265_memory_ptr",
                                "typeString": "struct DeFiProtocol.StakerData memory"
                              }
                            },
                            "id": 568,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "reward",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 264,
                            "src": "7181:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 571,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 569,
                                  "name": "reward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 550,
                                  "src": "7203:6:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "31653138",
                                  "id": 570,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7212:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "value": "1e18"
                                },
                                "src": "7203:13:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 572,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "7202:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7181:36:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 548,
                        "id": 574,
                        "nodeType": "Return",
                        "src": "7174:43:4"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 541,
              "nodeType": "StructuredDocumentation",
              "src": "6677:225:4",
              "text": " @notice Compute the reward depending on time and existant reward\n @dev Timestamp are in seconds\n @param _stakerData Data of the staker\n @return rewardAmount The computed reward amount"
            },
            "id": 582,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "computeReward",
            "nameLocation": "6917:13:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 544,
                  "mutability": "mutable",
                  "name": "_stakerData",
                  "nameLocation": "6949:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 582,
                  "src": "6931:29:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakerData_$265_memory_ptr",
                    "typeString": "struct DeFiProtocol.StakerData"
                  },
                  "typeName": {
                    "id": 543,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 542,
                      "name": "StakerData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 265,
                      "src": "6931:10:4"
                    },
                    "referencedDeclaration": 265,
                    "src": "6931:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                      "typeString": "struct DeFiProtocol.StakerData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6930:31:4"
            },
            "returnParameters": {
              "id": 548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 547,
                  "mutability": "mutable",
                  "name": "rewardAmount",
                  "nameLocation": "6988:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 582,
                  "src": "6983:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 546,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6983:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6982:19:4"
            },
            "scope": 634,
            "src": "6908:395:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 632,
              "nodeType": "Block",
              "src": "7412:509:4",
              "statements": [
                {
                  "assignments": [
                    588
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 588,
                      "mutability": "mutable",
                      "name": "stakerData",
                      "nameLocation": "7444:10:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 632,
                      "src": "7425:29:4",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                        "typeString": "struct DeFiProtocol.StakerData"
                      },
                      "typeName": {
                        "id": 587,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 586,
                          "name": "StakerData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 265,
                          "src": "7425:10:4"
                        },
                        "referencedDeclaration": 265,
                        "src": "7425:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                          "typeString": "struct DeFiProtocol.StakerData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 593,
                  "initialValue": {
                    "baseExpression": {
                      "id": 589,
                      "name": "stakerDataPerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 271,
                      "src": "7457:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerData_$265_storage_$",
                        "typeString": "mapping(address => struct DeFiProtocol.StakerData storage ref)"
                      }
                    },
                    "id": 592,
                    "indexExpression": {
                      "expression": {
                        "id": 590,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "7478:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7478:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7457:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakerData_$265_storage",
                      "typeString": "struct DeFiProtocol.StakerData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7425:64:4"
                },
                {
                  "assignments": [
                    595
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 595,
                      "mutability": "mutable",
                      "name": "reward",
                      "nameLocation": "7538:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 632,
                      "src": "7533:11:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 594,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7533:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 599,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 597,
                        "name": "stakerData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 588,
                        "src": "7561:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                          "typeString": "struct DeFiProtocol.StakerData storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                          "typeString": "struct DeFiProtocol.StakerData storage pointer"
                        }
                      ],
                      "id": 596,
                      "name": "computeReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 582,
                      "src": "7547:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_StakerData_$265_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct DeFiProtocol.StakerData memory) view returns (uint256)"
                      }
                    },
                    "id": 598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7547:25:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7533:39:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 601,
                          "name": "reward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 595,
                          "src": "7593:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7602:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7593:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2072657761726420746f20636c61696d",
                        "id": 604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7605:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655",
                          "typeString": "literal_string \"No reward to claim\""
                        },
                        "value": "No reward to claim"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655",
                          "typeString": "literal_string \"No reward to claim\""
                        }
                      ],
                      "id": 600,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7585:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7585:41:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 606,
                  "nodeType": "ExpressionStatement",
                  "src": "7585:41:4"
                },
                {
                  "expression": {
                    "id": 612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 607,
                        "name": "stakerData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 588,
                        "src": "7702:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                          "typeString": "struct DeFiProtocol.StakerData storage pointer"
                        }
                      },
                      "id": 609,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "updateTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 262,
                      "src": "7702:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 610,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "7731:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "7731:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7702:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 613,
                  "nodeType": "ExpressionStatement",
                  "src": "7702:44:4"
                },
                {
                  "expression": {
                    "id": 618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 614,
                        "name": "stakerData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 588,
                        "src": "7757:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                          "typeString": "struct DeFiProtocol.StakerData storage pointer"
                        }
                      },
                      "id": 616,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "reward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 264,
                      "src": "7757:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7777:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7757:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 619,
                  "nodeType": "ExpressionStatement",
                  "src": "7757:21:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 623,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7855:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7855:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 625,
                        "name": "reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 595,
                        "src": "7867:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 620,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "7840:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$228",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 195,
                      "src": "7840:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7840:34:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 627,
                  "nodeType": "ExpressionStatement",
                  "src": "7840:34:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 629,
                        "name": "reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 595,
                        "src": "7906:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 628,
                      "name": "RewardOffered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 320,
                      "src": "7892:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7892:21:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 631,
                  "nodeType": "EmitStatement",
                  "src": "7887:26:4"
                }
              ]
            },
            "documentation": {
              "id": 583,
              "nodeType": "StructuredDocumentation",
              "src": "7311:63:4",
              "text": " @notice Send then reward to the msg.sender"
            },
            "functionSelector": "b88a802f",
            "id": 633,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimReward",
            "nameLocation": "7389:11:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 584,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7400:2:4"
            },
            "returnParameters": {
              "id": 585,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7412:0:4"
            },
            "scope": 634,
            "src": "7380:541:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 635,
        "src": "457:7467:4",
        "usedErrors": []
      }
    ],
    "src": "39:7885:4"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/DeFiProtocol.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        45
      ],
      "Context": [
        250
      ],
      "DeFiProtocol": [
        634
      ],
      "IERC20": [
        228
      ],
      "Ownable": [
        150
      ]
    },
    "id": 635,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 252,
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:4"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 253,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 635,
        "sourceUnit": 151,
        "src": "66:52:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 254,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 635,
        "sourceUnit": 229,
        "src": "120:56:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 255,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 635,
        "sourceUnit": 46,
        "src": "178:76:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 257,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 150,
              "src": "482:7:4"
            },
            "id": 258,
            "nodeType": "InheritanceSpecifier",
            "src": "482:7:4"
          }
        ],
        "canonicalName": "DeFiProtocol",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 256,
          "nodeType": "StructuredDocumentation",
          "src": "258:197:4",
          "text": " @title Hello World DeFi Protocol\n @author The Hello World Team\n @notice This contract offer the possibility to stake ERC20 in Liquidity Pools to receive Hello World Token rewards"
        },
        "fullyImplemented": true,
        "id": 634,
        "linearizedBaseContracts": [
          634,
          150,
          250
        ],
        "name": "DeFiProtocol",
        "nameLocation": "466:12:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "DeFiProtocol.StakerData",
            "id": 265,
            "members": [
              {
                "constant": false,
                "id": 260,
                "mutability": "mutable",
                "name": "stakedAmount",
                "nameLocation": "665:12:4",
                "nodeType": "VariableDeclaration",
                "scope": 265,
                "src": "657:20:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 259,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "657:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 262,
                "mutability": "mutable",
                "name": "updateTimestamp",
                "nameLocation": "697:15:4",
                "nodeType": "VariableDeclaration",
                "scope": 265,
                "src": "689:23:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 261,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "689:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 264,
                "mutability": "mutable",
                "name": "reward",
                "nameLocation": "731:6:4",
                "nodeType": "VariableDeclaration",
                "scope": 265,
                "src": "723:14:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 263,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "723:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "StakerData",
            "nameLocation": "635:10:4",
            "nodeType": "StructDefinition",
            "scope": 634,
            "src": "628:117:4",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 266,
              "nodeType": "StructuredDocumentation",
              "src": "807:93:4",
              "text": " @notice This mapping store the amount of liquidity and reward by address"
            },
            "id": 271,
            "mutability": "mutable",
            "name": "stakerDataPerAddress",
            "nameLocation": "937:20:4",
            "nodeType": "VariableDeclaration",
            "scope": 634,
            "src": "906:51:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerData_$265_storage_$",
              "typeString": "mapping(address => struct DeFiProtocol.StakerData)"
            },
            "typeName": {
              "id": 270,
              "keyType": {
                "id": 267,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "914:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "906:30:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerData_$265_storage_$",
                "typeString": "mapping(address => struct DeFiProtocol.StakerData)"
              },
              "valueType": {
                "id": 269,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 268,
                  "name": "StakerData",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 265,
                  "src": "925:10:4"
                },
                "referencedDeclaration": 265,
                "src": "925:10:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                  "typeString": "struct DeFiProtocol.StakerData"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 272,
              "nodeType": "StructuredDocumentation",
              "src": "966:146:4",
              "text": " @notice The Total Value Locked(TVL) of the liquidity pool\n @dev The TVL is public because front may want to display it"
            },
            "functionSelector": "ec18154e",
            "id": 275,
            "mutability": "mutable",
            "name": "totalValueLocked",
            "nameLocation": "1133:16:4",
            "nodeType": "VariableDeclaration",
            "scope": 634,
            "src": "1118:35:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 273,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1118:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 274,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1152:1:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 276,
              "nodeType": "StructuredDocumentation",
              "src": "1166:113:4",
              "text": " @notice The Token to store in the liquidity pool\n @dev Initialized on the constructor"
            },
            "id": 279,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "1292:5:4",
            "nodeType": "VariableDeclaration",
            "scope": 634,
            "src": "1285:12:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$228",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 278,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 277,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 228,
                "src": "1285:6:4"
              },
              "referencedDeclaration": 228,
              "src": "1285:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$228",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 280,
              "nodeType": "StructuredDocumentation",
              "src": "1306:119:4",
              "text": " @notice Retrieve the token price\n @dev Use Chainlink to retrieve the USD price of the token"
            },
            "id": 283,
            "mutability": "mutable",
            "name": "priceFeed",
            "nameLocation": "1462:9:4",
            "nodeType": "VariableDeclaration",
            "scope": 634,
            "src": "1431:40:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 282,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 281,
                "name": "AggregatorV3Interface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45,
                "src": "1431:21:4"
              },
              "referencedDeclaration": 45,
              "src": "1431:21:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 284,
              "nodeType": "StructuredDocumentation",
              "src": "1480:170:4",
              "text": " @notice Token multiplier to give a price on the Hwt token\n @dev As our Hwt token don't have any value on the market, we use a basic multiplier"
            },
            "functionSelector": "7cd9e6aa",
            "id": 287,
            "mutability": "mutable",
            "name": "hwtTokenUsdValue",
            "nameLocation": "1668:16:4",
            "nodeType": "VariableDeclaration",
            "scope": 634,
            "src": "1656:49:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 285,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1656:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "393331353030303030303030303030303030",
              "id": 286,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1687:18:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_931500000000000000_by_1",
                "typeString": "int_const 931500000000000000"
              },
              "value": "931500000000000000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 288,
              "nodeType": "StructuredDocumentation",
              "src": "1714:69:4",
              "text": " @notice reward per second for the liquidity pool"
            },
            "id": 291,
            "mutability": "mutable",
            "name": "rewardPerSecond",
            "nameLocation": "1794:15:4",
            "nodeType": "VariableDeclaration",
            "scope": 634,
            "src": "1789:35:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 289,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1789:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "393235393235393235393235",
              "id": 290,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1812:12:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_925925925925_by_1",
                "typeString": "int_const 925925925925"
              },
              "value": "925925925925"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 304,
              "nodeType": "Block",
              "src": "2042:92:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 297,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 294,
                          "src": "2061:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2071:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2061:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920616d6f756e742061626f7665207a65726f2061726520617574686f72697a6564",
                        "id": 300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2074:39:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39",
                          "typeString": "literal_string \"Only amount above zero are authorized\""
                        },
                        "value": "Only amount above zero are authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f20dc2bf050aa3e51379c35e7f4eefcf457f55e775319a303df78fbea1a1d39",
                          "typeString": "literal_string \"Only amount above zero are authorized\""
                        }
                      ],
                      "id": 296,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2053:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2053:61:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 302,
                  "nodeType": "ExpressionStatement",
                  "src": "2053:61:4"
                },
                {
                  "id": 303,
                  "nodeType": "PlaceholderStatement",
                  "src": "2125:1:4"
                }
              ]
            },
            "documentation": {
              "id": 292,
              "nodeType": "StructuredDocumentation",
              "src": "1884:103:4",
              "text": " @notice Modifier that allow only amount greater than zero to be staked or unstaked"
            },
            "id": 305,
            "name": "onlyAmountGreaterThanZero",
            "nameLocation": "2002:25:4",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 294,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2033:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 305,
                  "src": "2028:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 293,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2028:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2027:14:4"
            },
            "src": "1993:141:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 306,
              "nodeType": "StructuredDocumentation",
              "src": "2190:146:4",
              "text": " @notice Event informing total amount staked in the Liquidity Pool\n @param stakedAmount The amount that has been staked"
            },
            "eventSelector": "d8e1da2ea55fa9c4413c33f029c3f3fb5289e22eb1cab9d922ffb18f5d9a273e",
            "id": 310,
            "name": "AmountStaked",
            "nameLocation": "2348:12:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 308,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "stakedAmount",
                  "nameLocation": "2367:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 310,
                  "src": "2362:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 307,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2362:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2361:19:4"
            },
            "src": "2342:39:4"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 311,
              "nodeType": "StructuredDocumentation",
              "src": "2389:153:4",
              "text": " @notice Event informing an amount was unstaked in the Liquidity Pool\n @param unstakedAmount The amount that has been unstaked"
            },
            "eventSelector": "2f8effe7ffe0e306b06e4755a1a92f6d3bc946de9c4f6a406dbc132c86eb36d4",
            "id": 315,
            "name": "AmountUnstaked",
            "nameLocation": "2554:14:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 313,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "unstakedAmount",
                  "nameLocation": "2575:14:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 315,
                  "src": "2570:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 312,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2570:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2569:21:4"
            },
            "src": "2548:43:4"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 316,
              "nodeType": "StructuredDocumentation",
              "src": "2599:131:4",
              "text": " @notice Event informing a reward was send\n @param rewardClaimedAmount The amount that has been offered"
            },
            "eventSelector": "39a5d140e3e3a18613a91b12d365dc0c589797b664f414f85ff68161ac6fbbb6",
            "id": 320,
            "name": "RewardOffered",
            "nameLocation": "2742:13:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 318,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rewardClaimedAmount",
                  "nameLocation": "2762:19:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 320,
                  "src": "2757:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 317,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2757:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2756:26:4"
            },
            "src": "2736:47:4"
          },
          {
            "body": {
              "id": 338,
              "nodeType": "Block",
              "src": "3047:168:4",
              "statements": [
                {
                  "expression": {
                    "id": 330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 326,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 279,
                      "src": "3058:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$228",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 328,
                          "name": "_tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 323,
                          "src": "3073:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 327,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "3066:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$228_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3066:21:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$228",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "3058:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$228",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 331,
                  "nodeType": "ExpressionStatement",
                  "src": "3058:29:4"
                },
                {
                  "expression": {
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 332,
                      "name": "priceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 283,
                      "src": "3130:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307832633164303732653935364146464330443433354362374143333845463138643234643931323763",
                          "id": 334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3164:42:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x2c1d072e956AFFC0D435Cb7AC38EF18d24d9127c"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 333,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "3142:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3142:65:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "3130:77:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 337,
                  "nodeType": "ExpressionStatement",
                  "src": "3130:77:4"
                }
              ]
            },
            "documentation": {
              "id": 321,
              "nodeType": "StructuredDocumentation",
              "src": "2840:166:4",
              "text": " @notice Create erc20 instance that will be used for the liquidity pool\n @param _tokenAddress the smart contract address of the erc20 token"
            },
            "id": 339,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 323,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "3032:13:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 339,
                  "src": "3024:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 322,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3024:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3023:23:4"
            },
            "returnParameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3047:0:4"
            },
            "scope": 634,
            "src": "3012:203:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 409,
              "nodeType": "Block",
              "src": "3543:695:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 351,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3583:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3583:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 355,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3603:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DeFiProtocol_$634",
                              "typeString": "contract DeFiProtocol"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DeFiProtocol_$634",
                              "typeString": "contract DeFiProtocol"
                            }
                          ],
                          "id": 354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3595:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 353,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3595:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3595:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 357,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 342,
                        "src": "3610:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 348,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "3564:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$228",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 227,
                      "src": "3564:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3564:54:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 359,
                  "nodeType": "ExpressionStatement",
                  "src": "3564:54:4"
                },
                {
                  "assignments": [
                    362
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 362,
                      "mutability": "mutable",
                      "name": "stakerData",
                      "nameLocation": "3701:10:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 409,
                      "src": "3682:29:4",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                        "typeString": "struct DeFiProtocol.StakerData"
                      },
                      "typeName": {
                        "id": 361,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 360,
                          "name": "StakerData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 265,
                          "src": "3682:10:4"
                        },
                        "referencedDeclaration": 265,
                        "src": "3682:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                          "typeString": "struct DeFiProtocol.StakerData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 367,
                  "initialValue": {
                    "baseExpression": {
                      "id": 363,
                      "name": "stakerDataPerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 271,
                      "src": "3714:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerData_$265_storage_$",
                        "typeString": "mapping(address => struct DeFiProtocol.StakerData storage ref)"
                      }
                    },
                    "id": 366,
                    "indexExpression": {
                      "expression": {
                        "id": 364,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3735:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3735:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3714:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakerData_$265_storage",
                      "typeString": "struct DeFiProtocol.StakerData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3682:64:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 368,
                        "name": "stakerData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "3839:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                          "typeString": "struct DeFiProtocol.StakerData storage pointer"
                        }
                      },
                      "id": 369,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stakedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 260,
                      "src": "3839:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3865:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3839:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 381,
                  "nodeType": "IfStatement",
                  "src": "3836:104:4",
                  "trueBody": {
                    "id": 380,
                    "nodeType": "Block",
                    "src": "3868:72:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 372,
                              "name": "stakerData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 362,
                              "src": "3883:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                                "typeString": "struct DeFiProtocol.StakerData storage pointer"
                              }
                            },
                            "id": 374,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "reward",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 264,
                            "src": "3883:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 376,
                                "name": "stakerData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 362,
                                "src": "3917:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                                  "typeString": "struct DeFiProtocol.StakerData storage pointer"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                                  "typeString": "struct DeFiProtocol.StakerData storage pointer"
                                }
                              ],
                              "id": 375,
                              "name": "computeReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 582,
                              "src": "3903:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_struct$_StakerData_$265_memory_ptr_$returns$_t_uint256_$",
                                "typeString": "function (struct DeFiProtocol.StakerData memory) view returns (uint256)"
                              }
                            },
                            "id": 377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3903:25:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3883:45:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 379,
                        "nodeType": "ExpressionStatement",
                        "src": "3883:45:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 382,
                        "name": "stakerData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "3952:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                          "typeString": "struct DeFiProtocol.StakerData storage pointer"
                        }
                      },
                      "id": 384,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "stakedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 260,
                      "src": "3952:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 385,
                          "name": "stakerData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 362,
                          "src": "3978:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                            "typeString": "struct DeFiProtocol.StakerData storage pointer"
                          }
                        },
                        "id": 386,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stakedAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 260,
                        "src": "3978:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 387,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 342,
                        "src": "4004:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3978:33:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3952:59:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 390,
                  "nodeType": "ExpressionStatement",
                  "src": "3952:59:4"
                },
                {
                  "expression": {
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 391,
                        "name": "stakerData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "4022:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                          "typeString": "struct DeFiProtocol.StakerData storage pointer"
                        }
                      },
                      "id": 393,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "updateTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 262,
                      "src": "4022:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 394,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "4051:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "4051:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4022:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 397,
                  "nodeType": "ExpressionStatement",
                  "src": "4022:44:4"
                },
                {
                  "expression": {
                    "id": 402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 398,
                      "name": "totalValueLocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 275,
                      "src": "4129:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 399,
                        "name": "totalValueLocked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 275,
                        "src": "4148:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 400,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 342,
                        "src": "4168:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4148:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4129:46:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 403,
                  "nodeType": "ExpressionStatement",
                  "src": "4129:46:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 405,
                          "name": "stakerData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 362,
                          "src": "4206:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                            "typeString": "struct DeFiProtocol.StakerData storage pointer"
                          }
                        },
                        "id": 406,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stakedAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 260,
                        "src": "4206:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 404,
                      "name": "AmountStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 310,
                      "src": "4193:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4193:37:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 408,
                  "nodeType": "EmitStatement",
                  "src": "4188:42:4"
                }
              ]
            },
            "documentation": {
              "id": 340,
              "nodeType": "StructuredDocumentation",
              "src": "3223:233:4",
              "text": " @notice Stake token in the Liquidity pool\n @dev Refresh the stored amount in the address mapping storedValuePerAddress and refresh the TVL\n @param _amount Total amount to store in the liquidity pool"
            },
            "functionSelector": "a694fc3a",
            "id": 410,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 345,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 342,
                    "src": "3534:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 346,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 344,
                  "name": "onlyAmountGreaterThanZero",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 305,
                  "src": "3508:25:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "3508:34:4"
              }
            ],
            "name": "stake",
            "nameLocation": "3471:5:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 342,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3482:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 410,
                  "src": "3477:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 341,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3477:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3476:14:4"
            },
            "returnParameters": {
              "id": 347,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3543:0:4"
            },
            "scope": 634,
            "src": "3462:776:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 477,
              "nodeType": "Block",
              "src": "4613:773:4",
              "statements": [
                {
                  "assignments": [
                    421
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 421,
                      "mutability": "mutable",
                      "name": "stakerData",
                      "nameLocation": "4653:10:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 477,
                      "src": "4634:29:4",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                        "typeString": "struct DeFiProtocol.StakerData"
                      },
                      "typeName": {
                        "id": 420,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 419,
                          "name": "StakerData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 265,
                          "src": "4634:10:4"
                        },
                        "referencedDeclaration": 265,
                        "src": "4634:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                          "typeString": "struct DeFiProtocol.StakerData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 426,
                  "initialValue": {
                    "baseExpression": {
                      "id": 422,
                      "name": "stakerDataPerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 271,
                      "src": "4666:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerData_$265_storage_$",
                        "typeString": "mapping(address => struct DeFiProtocol.StakerData storage ref)"
                      }
                    },
                    "id": 425,
                    "indexExpression": {
                      "expression": {
                        "id": 423,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "4687:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4687:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4666:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakerData_$265_storage",
                      "typeString": "struct DeFiProtocol.StakerData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4634:64:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 428,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 413,
                          "src": "4784:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 429,
                            "name": "stakerData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 421,
                            "src": "4795:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                              "typeString": "struct DeFiProtocol.StakerData storage pointer"
                            }
                          },
                          "id": 430,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakedAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 260,
                          "src": "4795:23:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4784:34:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206469646e27742073746f726564207468697320616d6f756e7420696e2074686520706f6f6c",
                        "id": 432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4820:43:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9",
                          "typeString": "literal_string \"You didn't stored this amount in the pool\""
                        },
                        "value": "You didn't stored this amount in the pool"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f1be17410f256ed277379b06b67defff00af46b4e26f50c3b2bacfc5dcd495f9",
                          "typeString": "literal_string \"You didn't stored this amount in the pool\""
                        }
                      ],
                      "id": 427,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4776:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4776:88:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 434,
                  "nodeType": "ExpressionStatement",
                  "src": "4776:88:4"
                },
                {
                  "expression": {
                    "id": 441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 435,
                        "name": "stakerData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 421,
                        "src": "4955:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                          "typeString": "struct DeFiProtocol.StakerData storage pointer"
                        }
                      },
                      "id": 437,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "reward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 264,
                      "src": "4955:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 439,
                          "name": "stakerData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 421,
                          "src": "4989:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                            "typeString": "struct DeFiProtocol.StakerData storage pointer"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                            "typeString": "struct DeFiProtocol.StakerData storage pointer"
                          }
                        ],
                        "id": 438,
                        "name": "computeReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 582,
                        "src": "4975:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_StakerData_$265_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (struct DeFiProtocol.StakerData memory) view returns (uint256)"
                        }
                      },
                      "id": 440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4975:25:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4955:45:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 442,
                  "nodeType": "ExpressionStatement",
                  "src": "4955:45:4"
                },
                {
                  "expression": {
                    "id": 450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 443,
                        "name": "stakerData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 421,
                        "src": "5013:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                          "typeString": "struct DeFiProtocol.StakerData storage pointer"
                        }
                      },
                      "id": 445,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "stakedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 260,
                      "src": "5013:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 446,
                          "name": "stakerData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 421,
                          "src": "5039:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                            "typeString": "struct DeFiProtocol.StakerData storage pointer"
                          }
                        },
                        "id": 447,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stakedAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 260,
                        "src": "5039:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 448,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 413,
                        "src": "5065:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5039:33:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5013:59:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 451,
                  "nodeType": "ExpressionStatement",
                  "src": "5013:59:4"
                },
                {
                  "expression": {
                    "id": 457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 452,
                        "name": "stakerData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 421,
                        "src": "5083:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                          "typeString": "struct DeFiProtocol.StakerData storage pointer"
                        }
                      },
                      "id": 454,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "updateTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 262,
                      "src": "5083:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 455,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "5112:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "5112:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5083:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 458,
                  "nodeType": "ExpressionStatement",
                  "src": "5083:44:4"
                },
                {
                  "expression": {
                    "id": 463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 459,
                      "name": "totalValueLocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 275,
                      "src": "5189:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 460,
                        "name": "totalValueLocked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 275,
                        "src": "5208:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 461,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 413,
                        "src": "5228:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5208:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5189:46:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 464,
                  "nodeType": "ExpressionStatement",
                  "src": "5189:46:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 468,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5309:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5309:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 470,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 413,
                        "src": "5321:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 465,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "5294:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$228",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 195,
                      "src": "5294:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5294:35:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 472,
                  "nodeType": "ExpressionStatement",
                  "src": "5294:35:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 474,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 413,
                        "src": "5370:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 473,
                      "name": "AmountUnstaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 315,
                      "src": "5355:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5355:23:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 476,
                  "nodeType": "EmitStatement",
                  "src": "5350:28:4"
                }
              ]
            },
            "documentation": {
              "id": 411,
              "nodeType": "StructuredDocumentation",
              "src": "4246:275:4",
              "text": " @notice Unstake the tokens in the Liquidity pool, user can retrieve their tokens\n @dev Refresh the stored amount in the address mapping stakerDataPerAddress and refresh the TVL\n @param _amount Total amount to unstake from the liquidity pool"
            },
            "functionSelector": "2e17de78",
            "id": 478,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 416,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 413,
                    "src": "4604:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 417,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 415,
                  "name": "onlyAmountGreaterThanZero",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 305,
                  "src": "4578:25:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "4578:34:4"
              }
            ],
            "name": "unstake",
            "nameLocation": "4536:7:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 413,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4552:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 478,
                  "src": "4544:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 412,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4544:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4543:17:4"
            },
            "returnParameters": {
              "id": 418,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4613:0:4"
            },
            "scope": 634,
            "src": "4527:859:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 491,
              "nodeType": "Block",
              "src": "5592:72:4",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 484,
                            "name": "stakerDataPerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 271,
                            "src": "5610:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerData_$265_storage_$",
                              "typeString": "mapping(address => struct DeFiProtocol.StakerData storage ref)"
                            }
                          },
                          "id": 487,
                          "indexExpression": {
                            "expression": {
                              "id": 485,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5631:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 486,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5631:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5610:32:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakerData_$265_storage",
                            "typeString": "struct DeFiProtocol.StakerData storage ref"
                          }
                        },
                        "id": 488,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stakedAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 260,
                        "src": "5610:45:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 489,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5609:47:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 483,
                  "id": 490,
                  "nodeType": "Return",
                  "src": "5603:53:4"
                }
              ]
            },
            "documentation": {
              "id": 479,
              "nodeType": "StructuredDocumentation",
              "src": "5394:123:4",
              "text": " @notice Get the msg.sender token staked amount\n @return stakedAmount token staked by msg.sender"
            },
            "functionSelector": "a4e15db9",
            "id": 492,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakedAmount",
            "nameLocation": "5532:15:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5547:2:4"
            },
            "returnParameters": {
              "id": 483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 482,
                  "mutability": "mutable",
                  "name": "stakedAmount",
                  "nameLocation": "5578:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 492,
                  "src": "5573:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 481,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5573:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5572:19:4"
            },
            "scope": 634,
            "src": "5523:141:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 508,
              "nodeType": "Block",
              "src": "5753:92:4",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 499,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "5771:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "5771:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 501,
                            "name": "stakerDataPerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 271,
                            "src": "5788:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerData_$265_storage_$",
                              "typeString": "mapping(address => struct DeFiProtocol.StakerData storage ref)"
                            }
                          },
                          "id": 504,
                          "indexExpression": {
                            "expression": {
                              "id": 502,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5809:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5809:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5788:32:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakerData_$265_storage",
                            "typeString": "struct DeFiProtocol.StakerData storage ref"
                          }
                        },
                        "id": 505,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "updateTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 262,
                        "src": "5788:48:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 506,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5770:67:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 498,
                  "id": 507,
                  "nodeType": "Return",
                  "src": "5764:73:4"
                }
              ]
            },
            "functionSelector": "da235b22",
            "id": 509,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTimeStamp",
            "nameLocation": "5681:12:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5693:2:4"
            },
            "returnParameters": {
              "id": 498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 495,
                  "mutability": "mutable",
                  "name": "actualStamp",
                  "nameLocation": "5724:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 509,
                  "src": "5719:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 494,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5719:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 497,
                  "mutability": "mutable",
                  "name": "userStamp",
                  "nameLocation": "5742:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 509,
                  "src": "5737:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 496,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5737:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5718:34:4"
            },
            "scope": 634,
            "src": "5672:173:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 524,
              "nodeType": "Block",
              "src": "6133:268:4",
              "statements": [
                {
                  "assignments": [
                    null,
                    516,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 516,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "6200:5:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 524,
                      "src": "6196:9:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 515,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "6196:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 520,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 517,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 283,
                        "src": "6340:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "6340:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6340:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6146:221:4"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 521,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 516,
                        "src": "6387:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "id": 522,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "6386:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 514,
                  "id": 523,
                  "nodeType": "Return",
                  "src": "6380:13:4"
                }
              ]
            },
            "documentation": {
              "id": 510,
              "nodeType": "StructuredDocumentation",
              "src": "5853:210:4",
              "text": " @notice Get the token price in USD\n @dev USD Price is retrieved thanks to Chainlink\n @dev Can't be unit tested because of Ganache\n @return tokenPrice price of the token"
            },
            "functionSelector": "4b94f50e",
            "id": 525,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenPrice",
            "nameLocation": "6078:13:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 511,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6091:2:4"
            },
            "returnParameters": {
              "id": 514,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 513,
                  "mutability": "mutable",
                  "name": "tokenPrice",
                  "nameLocation": "6121:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 525,
                  "src": "6117:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 512,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "6117:3:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6116:16:4"
            },
            "scope": 634,
            "src": "6069:332:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 539,
              "nodeType": "Block",
              "src": "6595:74:4",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 532,
                              "name": "stakerDataPerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 271,
                              "src": "6627:20:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerData_$265_storage_$",
                                "typeString": "mapping(address => struct DeFiProtocol.StakerData storage ref)"
                              }
                            },
                            "id": 535,
                            "indexExpression": {
                              "expression": {
                                "id": 533,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "6648:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 534,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6648:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6627:32:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakerData_$265_storage",
                              "typeString": "struct DeFiProtocol.StakerData storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_StakerData_$265_storage",
                              "typeString": "struct DeFiProtocol.StakerData storage ref"
                            }
                          ],
                          "id": 531,
                          "name": "computeReward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 582,
                          "src": "6613:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_StakerData_$265_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (struct DeFiProtocol.StakerData memory) view returns (uint256)"
                          }
                        },
                        "id": 536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6613:47:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 537,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "6612:49:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 530,
                  "id": 538,
                  "nodeType": "Return",
                  "src": "6606:55:4"
                }
              ]
            },
            "documentation": {
              "id": 526,
              "nodeType": "StructuredDocumentation",
              "src": "6409:117:4",
              "text": " @notice Get the reward for msg.sender\n @return reward The reward computed by the contract"
            },
            "functionSelector": "09a69f57",
            "id": 540,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRewardAmount",
            "nameLocation": "6541:15:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6556:2:4"
            },
            "returnParameters": {
              "id": 530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 529,
                  "mutability": "mutable",
                  "name": "reward",
                  "nameLocation": "6587:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 540,
                  "src": "6582:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 528,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6582:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6581:13:4"
            },
            "scope": 634,
            "src": "6532:137:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 581,
              "nodeType": "Block",
              "src": "7002:301:4",
              "statements": [
                {
                  "assignments": [
                    550
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 550,
                      "mutability": "mutable",
                      "name": "reward",
                      "nameLocation": "7028:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 581,
                      "src": "7023:11:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 549,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7023:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 563,
                  "initialValue": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 555,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 551,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967292,
                                    "src": "7039:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 552,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "7039:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "expression": {
                                    "id": 553,
                                    "name": "_stakerData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 544,
                                    "src": "7057:11:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_StakerData_$265_memory_ptr",
                                      "typeString": "struct DeFiProtocol.StakerData memory"
                                    }
                                  },
                                  "id": 554,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "updateTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 262,
                                  "src": "7057:27:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7039:45:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 556,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "7038:47:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 557,
                            "name": "rewardPerSecond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 291,
                            "src": "7088:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7038:65:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "expression": {
                            "id": 559,
                            "name": "_stakerData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 544,
                            "src": "7106:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakerData_$265_memory_ptr",
                              "typeString": "struct DeFiProtocol.StakerData memory"
                            }
                          },
                          "id": 560,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakedAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 260,
                          "src": "7106:24:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7038:92:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 562,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7037:94:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7023:108:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 564,
                      "name": "reward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 550,
                      "src": "7147:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 565,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7156:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7147:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 579,
                    "nodeType": "Block",
                    "src": "7244:52:4",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 576,
                            "name": "_stakerData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 544,
                            "src": "7266:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakerData_$265_memory_ptr",
                              "typeString": "struct DeFiProtocol.StakerData memory"
                            }
                          },
                          "id": 577,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reward",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 264,
                          "src": "7266:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 548,
                        "id": 578,
                        "nodeType": "Return",
                        "src": "7259:25:4"
                      }
                    ]
                  },
                  "id": 580,
                  "nodeType": "IfStatement",
                  "src": "7144:152:4",
                  "trueBody": {
                    "id": 575,
                    "nodeType": "Block",
                    "src": "7159:70:4",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 567,
                              "name": "_stakerData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 544,
                              "src": "7181:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakerData_$265_memory_ptr",
                                "typeString": "struct DeFiProtocol.StakerData memory"
                              }
                            },
                            "id": 568,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "reward",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 264,
                            "src": "7181:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 571,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 569,
                                  "name": "reward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 550,
                                  "src": "7203:6:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "31653138",
                                  "id": 570,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7212:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "value": "1e18"
                                },
                                "src": "7203:13:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 572,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "7202:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7181:36:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 548,
                        "id": 574,
                        "nodeType": "Return",
                        "src": "7174:43:4"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 541,
              "nodeType": "StructuredDocumentation",
              "src": "6677:225:4",
              "text": " @notice Compute the reward depending on time and existant reward\n @dev Timestamp are in seconds\n @param _stakerData Data of the staker\n @return rewardAmount The computed reward amount"
            },
            "id": 582,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "computeReward",
            "nameLocation": "6917:13:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 544,
                  "mutability": "mutable",
                  "name": "_stakerData",
                  "nameLocation": "6949:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 582,
                  "src": "6931:29:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakerData_$265_memory_ptr",
                    "typeString": "struct DeFiProtocol.StakerData"
                  },
                  "typeName": {
                    "id": 543,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 542,
                      "name": "StakerData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 265,
                      "src": "6931:10:4"
                    },
                    "referencedDeclaration": 265,
                    "src": "6931:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                      "typeString": "struct DeFiProtocol.StakerData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6930:31:4"
            },
            "returnParameters": {
              "id": 548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 547,
                  "mutability": "mutable",
                  "name": "rewardAmount",
                  "nameLocation": "6988:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 582,
                  "src": "6983:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 546,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6983:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6982:19:4"
            },
            "scope": 634,
            "src": "6908:395:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 632,
              "nodeType": "Block",
              "src": "7412:509:4",
              "statements": [
                {
                  "assignments": [
                    588
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 588,
                      "mutability": "mutable",
                      "name": "stakerData",
                      "nameLocation": "7444:10:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 632,
                      "src": "7425:29:4",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                        "typeString": "struct DeFiProtocol.StakerData"
                      },
                      "typeName": {
                        "id": 587,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 586,
                          "name": "StakerData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 265,
                          "src": "7425:10:4"
                        },
                        "referencedDeclaration": 265,
                        "src": "7425:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                          "typeString": "struct DeFiProtocol.StakerData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 593,
                  "initialValue": {
                    "baseExpression": {
                      "id": 589,
                      "name": "stakerDataPerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 271,
                      "src": "7457:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerData_$265_storage_$",
                        "typeString": "mapping(address => struct DeFiProtocol.StakerData storage ref)"
                      }
                    },
                    "id": 592,
                    "indexExpression": {
                      "expression": {
                        "id": 590,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "7478:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7478:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7457:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakerData_$265_storage",
                      "typeString": "struct DeFiProtocol.StakerData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7425:64:4"
                },
                {
                  "assignments": [
                    595
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 595,
                      "mutability": "mutable",
                      "name": "reward",
                      "nameLocation": "7538:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 632,
                      "src": "7533:11:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 594,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7533:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 599,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 597,
                        "name": "stakerData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 588,
                        "src": "7561:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                          "typeString": "struct DeFiProtocol.StakerData storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                          "typeString": "struct DeFiProtocol.StakerData storage pointer"
                        }
                      ],
                      "id": 596,
                      "name": "computeReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 582,
                      "src": "7547:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_StakerData_$265_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct DeFiProtocol.StakerData memory) view returns (uint256)"
                      }
                    },
                    "id": 598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7547:25:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7533:39:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 601,
                          "name": "reward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 595,
                          "src": "7593:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7602:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7593:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2072657761726420746f20636c61696d",
                        "id": 604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7605:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655",
                          "typeString": "literal_string \"No reward to claim\""
                        },
                        "value": "No reward to claim"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655",
                          "typeString": "literal_string \"No reward to claim\""
                        }
                      ],
                      "id": 600,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7585:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7585:41:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 606,
                  "nodeType": "ExpressionStatement",
                  "src": "7585:41:4"
                },
                {
                  "expression": {
                    "id": 612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 607,
                        "name": "stakerData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 588,
                        "src": "7702:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                          "typeString": "struct DeFiProtocol.StakerData storage pointer"
                        }
                      },
                      "id": 609,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "updateTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 262,
                      "src": "7702:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 610,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "7731:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "7731:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7702:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 613,
                  "nodeType": "ExpressionStatement",
                  "src": "7702:44:4"
                },
                {
                  "expression": {
                    "id": 618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 614,
                        "name": "stakerData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 588,
                        "src": "7757:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakerData_$265_storage_ptr",
                          "typeString": "struct DeFiProtocol.StakerData storage pointer"
                        }
                      },
                      "id": 616,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "reward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 264,
                      "src": "7757:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7777:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7757:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 619,
                  "nodeType": "ExpressionStatement",
                  "src": "7757:21:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 623,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7855:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7855:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 625,
                        "name": "reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 595,
                        "src": "7867:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 620,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "7840:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$228",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 195,
                      "src": "7840:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7840:34:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 627,
                  "nodeType": "ExpressionStatement",
                  "src": "7840:34:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 629,
                        "name": "reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 595,
                        "src": "7906:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 628,
                      "name": "RewardOffered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 320,
                      "src": "7892:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7892:21:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 631,
                  "nodeType": "EmitStatement",
                  "src": "7887:26:4"
                }
              ]
            },
            "documentation": {
              "id": 583,
              "nodeType": "StructuredDocumentation",
              "src": "7311:63:4",
              "text": " @notice Send then reward to the msg.sender"
            },
            "functionSelector": "b88a802f",
            "id": 633,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimReward",
            "nameLocation": "7389:11:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 584,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7400:2:4"
            },
            "returnParameters": {
              "id": 585,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7412:0:4"
            },
            "scope": 634,
            "src": "7380:541:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 635,
        "src": "457:7467:4",
        "usedErrors": []
      }
    ],
    "src": "39:7885:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {
    "1651956336293": {
      "events": {},
      "links": {},
      "address": "0x137C124e55348e487a0e0822Cc666F18996fc09B",
      "transactionHash": "0xc76f54f98daa687bffb99b27e9b83e5a23f19ef8ec01dbe1b504512a235b56c5"
    },
    "1651998282979": {
      "events": {},
      "links": {},
      "address": "0x9270b2329Ab0E3f83CCC70073E460f686a79219D",
      "transactionHash": "0xaed5320b863362a679ae551d6d06b71599eef9adabcb889a49931aa56b008133"
    }
  },
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-05-08T08:25:10.823Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "The Hello World Team",
    "events": {
      "AmountStaked(uint256)": {
        "params": {
          "stakedAmount": "The amount that has been staked"
        }
      },
      "AmountUnstaked(uint256)": {
        "params": {
          "unstakedAmount": "The amount that has been unstaked"
        }
      },
      "RewardOffered(uint256)": {
        "params": {
          "rewardClaimedAmount": "The amount that has been offered"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_tokenAddress": "the smart contract address of the erc20 token"
        }
      },
      "getRewardAmount()": {
        "returns": {
          "reward": "The reward computed by the contract"
        }
      },
      "getStakedAmount()": {
        "returns": {
          "stakedAmount": "token staked by msg.sender"
        }
      },
      "getTokenPrice()": {
        "details": "USD Price is retrieved thanks to ChainlinkCan't be unit tested because of Ganache",
        "returns": {
          "tokenPrice": "price of the token"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "stake(uint256)": {
        "details": "Refresh the stored amount in the address mapping storedValuePerAddress and refresh the TVL",
        "params": {
          "_amount": "Total amount to store in the liquidity pool"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unstake(uint256)": {
        "details": "Refresh the stored amount in the address mapping stakerDataPerAddress and refresh the TVL",
        "params": {
          "_amount": "Total amount to unstake from the liquidity pool"
        }
      }
    },
    "stateVariables": {
      "hwtTokenUsdValue": {
        "details": "As our Hwt token don't have any value on the market, we use a basic multiplier"
      },
      "priceFeed": {
        "details": "Use Chainlink to retrieve the USD price of the token"
      },
      "token": {
        "details": "Initialized on the constructor"
      },
      "totalValueLocked": {
        "details": "The TVL is public because front may want to display it"
      }
    },
    "title": "Hello World DeFi Protocol",
    "version": 1
  },
  "userdoc": {
    "events": {
      "AmountStaked(uint256)": {
        "notice": "Event informing total amount staked in the Liquidity Pool"
      },
      "AmountUnstaked(uint256)": {
        "notice": "Event informing an amount was unstaked in the Liquidity Pool"
      },
      "RewardOffered(uint256)": {
        "notice": "Event informing a reward was send"
      }
    },
    "kind": "user",
    "methods": {
      "claimReward()": {
        "notice": "Send then reward to the msg.sender"
      },
      "constructor": {
        "notice": "Create erc20 instance that will be used for the liquidity pool"
      },
      "getRewardAmount()": {
        "notice": "Get the reward for msg.sender"
      },
      "getStakedAmount()": {
        "notice": "Get the msg.sender token staked amount"
      },
      "getTokenPrice()": {
        "notice": "Get the token price in USD"
      },
      "hwtTokenUsdValue()": {
        "notice": "Token multiplier to give a price on the Hwt token"
      },
      "stake(uint256)": {
        "notice": "Stake token in the Liquidity pool"
      },
      "totalValueLocked()": {
        "notice": "The Total Value Locked(TVL) of the liquidity pool"
      },
      "unstake(uint256)": {
        "notice": "Unstake the tokens in the Liquidity pool, user can retrieve their tokens"
      }
    },
    "notice": "This contract offer the possibility to stake ERC20 in Liquidity Pools to receive Hello World Token rewards",
    "version": 1
  }
}